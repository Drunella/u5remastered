# ----------------------------------------------------------------------------
# Copyright 2019 Drunella
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------

FEATURES {
    STARTADDRESS:    default = $7700;
}

SYMBOLS {
    __LOADADDR__:    type = import;
}

MEMORY {
    LOADADDR: file = %O, start = %S - 2, size = $0002;

    MUSIC_DATA:        start = $0100,  size = $0023,  file = "";
    MUSIC_JUMPTABLE:   start = $0123,  size = $0009,  file = "";
    MUSIC_IRQHANDLER:  start = $0380,  size = $0038,  file = "";

    CODE_CALL:         start = $7700,  size = $0012,  fill = yes,  fillval = $ff;
    CODE:              start = $7712,  size = $00ee,  fill = yes,  fillval = $ff;
    MUSIC_CONTROL_1:   start = $7b03,  size = $00fd,  file = "";
    ROM:               start = $8000,  size = $4000,  file = "./build/ef.f/music_rom.bin";
    ONCE:              start = $7e00,  size = $0100,  file = "";
    MUSIC_CONTROL_2:   start = $6f31,  size = 28,     file = "";  # get value from io-replacement.map
}

SEGMENTS {
    LOADADDR: load = LOADADDR, type = ro;

    MUSIC_JUMPTABLE:   load = MUSIC_JUMPTABLE,   type = rw,  define   = yes,  run = MUSIC_JUMPTABLE;
    MUSIC_IRQHANDLER:  load = MUSIC_IRQHANDLER,  type = rw,  define   = yes,  run = MUSIC_IRQHANDLER;

    MUSIC_CONTROL_1:   load = MUSIC_CONTROL_1,   type = rw;
    MUSIC_CONTROL_2:   load = MUSIC_CONTROL_2,   type = rw;
    MUSIC_CALL:        load = CODE_CALL,         type = rw;
    MUSIC_CODE:        load = CODE,              type = rw;
    MUSIC_INIT:        load = ONCE,              type = rw;
    MUSIC_DATA:        load = MUSIC_DATA,        type = rw;
    MUSIC_SOURCE:      load = ROM,               type = ro;

}
