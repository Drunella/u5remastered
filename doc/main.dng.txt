  ========< 0x00008000      4c4c80         jmp 0x804c                  ; jump to new location
  |||||||   0x00008003      203592         jsr 0x9235                  ; jump to new location saving return address
  ========< 0x00008006      4cdb8c         jmp 0x8cdb                  ; jump to new location
  ========< 0x00008009      4ce38c         jmp 0x8ce3                  ; jump to new location
  ========< 0x0000800c      4c5896         jmp 0x9658                  ; jump to new location
  ========< 0x0000800f      4c09a2         jmp 0xa209                  ; jump to new location
  ========< 0x00008012      4cb988         jmp 0x88b9                  ; load s1, s2, s3, colors
  |||||||   0x00008015      00             brk                         ; force break
  |||||||   0x00008016      00             brk                         ; force break
  |||||||   0x00008017      00             brk                         ; force break
  |||||||   0x00008018      00             brk                         ; force break
  |||||||   0x00008019      00             brk                         ; force break
  |||||||   0x0000801a      00             brk                         ; force break
  |||||||   0x0000801b      00             brk                         ; force break
  |||||||   0x0000801c      00             brk                         ; force break
  |||||||   0x0000801d      0100           ora (0x00,x)                ; "or" memory with accumulator
  |||||||   0x0000801f      1540           ora 0x40,x                  ; "or" memory with accumulator
  |||||||   0x00008021      4142           eor (0x42,x)                ; "exclusive-or" memory with accumulator
  |||||||   0x00008023      4344           sre (0x44,x)
  |||||||   0x00008025      4546           eor 0x46                    ; "exclusive-or" memory with accumulator
  |||||||   0x00008027      4b4c           asr #0x4c
  || ||||   0x00008029      5051           bvc 0x4b2108                ; branch on overflow clear
  || ||||   0x0000802b      52             hlt
  || ||||   0x0000802c      5354           sre (0x54),y
  || ||||   0x0000802e      5556           eor 0x56,x                  ; "exclusive-or" memory with accumulator
  || ||||   0x00008030      5758           sre 0x58,x
  || ||||   0x00008032      595a5b         eor 0x5b5a,y                ; "exclusive-or" memory with accumulator
  || ||||   0x00008035      0102           ora (0x02,x)                ; "or" memory with accumulator
  || ||||   0x00008037      0408           nop 0x08                    ; no operation
  ||,=====< 0x00008039      1020           bpl 0x4b2108                ; branch on result plus
  |||||||   0x0000803b      40             rti                         ; return from interrupt
  |||||||   0x0000803c      8000           nop #0x00                   ; no operation
  |||||||   0x0000803e      0100           ora (0x00,x)                ; "or" memory with accumulator
  |||||||   0x00008040      ffff00         isb 0x00ff,x
  |||||||   0x00008043      0100           ora (0x00,x)                ; "or" memory with accumulator
  |||||||   0x00008045      00             brk                         ; force break
  |||||||   0x00008046      00             brk                         ; force break
  |||||||   0x00008047      0102           ora (0x02,x)                ; "or" memory with accumulator
  |||||||   0x00008049      0300           slo (0x00,x)
  |||||||   0x0000804b      02             hlt
  --------> 0x0000804c      a9ff           lda #0xff                   ; load accumulator with memory
  |||||||   0x0000804e      8d5082         sta 0x8250                  ; store accumulator in memory
  |||||||   0x00008051      a900           lda #0x00                   ; load accumulator with memory
  |||||||   0x00008053      857a           sta 0x7a                    ; store accumulator in memory
  |||||||   0x00008055      8571           sta 0x71                    ; store accumulator in memory
  |||||||   0x00008057      202a4c         jsr 0x4c2a                  ; jump to new location saving return address
  |||||||   0x0000805a      a588           lda 0x88                    ; load accumulator with memory
  || ||||   0x0000805c      8d1c80         sta 0x801c                  ; store accumulator in memory
  ||,=====< 0x0000805f      f007           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008061      c901           cmp #0x01                   ; compare memory and accumulator
  ========< 0x00008063      f003           beq 0x4b2108                ; branch on result zero
  ========< 0x00008065      4ca780         jmp 0x80a7                  ; jump to new location
  --`-----> 0x00008068      a5c9           lda 0xc9                    ; load accumulator with memory
  || ||||   0x0000806a      48             pha                         ; push accumulator on stack
  || ||||   0x0000806b      a5ca           lda 0xca                    ; load accumulator with memory
  || ||||   0x0000806d      48             pha                         ; push accumulator on stack
  || ||||   0x0000806e      a900           lda #0x00                   ; load accumulator with memory
  || ||||   0x00008070      85ca           sta 0xca                    ; store accumulator in memory
  || ||||   0x00008072      a905           lda #0x05                   ; load accumulator with memory
  || ||||   0x00008074      85c9           sta 0xc9                    ; store accumulator in memory
  || ||||   0x00008076      20004c         jsr 0x4c00                  ; jump to new location saving return address
  || ||||   0x00008079      0404           nop 0x04                    ; no operation
  || ||||   0x0000807b      0404           nop 0x04                    ; no operation
  || ||||   0x0000807d      041e           nop 0x1e                    ; no operation
  || ||||   0x0000807f      cca01c         cpy 0x1ca0                  ; compare memory and index y
  || ||||   0x00008082      0404           nop 0x04                    ; no operation
  || ||||   0x00008084      0404           nop 0x04                    ; no operation
  || ||||   0x00008086      0400           nop 0x00                    ; no operation
  || ||||   0x00008088      a905           lda #0x05                   ; load accumulator with memory
  || ||||   0x0000808a      85c9           sta 0xc9                    ; store accumulator in memory
  || ||||   0x0000808c      a917           lda #0x17                   ; load accumulator with memory
  || ||||   0x0000808e      85ca           sta 0xca                    ; store accumulator in memory
  || ||||   0x00008090      20004c         jsr 0x4c00                  ; jump to new location saving return address
  || ||||   0x00008093      02             hlt
  || ||||   0x00008094      1ec4e9         asl 0xe9c4,x                ; shift left one bit (memory or accumulator)
  || ||||   0x00008097      f2             hlt
  || ||||   0x00008098      ba             tsx                         ; transfer stack pointer to index x
  || ||||   0x00008099      a0a0           ldy #0xa0                   ; load index y with memory
  || ||||   0x0000809b      a0a0           ldy #0xa0                   ; load index y with memory
  || ||||   0x0000809d      a0a0           ldy #0xa0                   ; load index y with memory
  || ||||   0x0000809f      1c0068         nop 0x6800,x                ; no operation
  || ||||   0x000080a2      85ca           sta 0xca                    ; store accumulator in memory
  || ||||   0x000080a4      68             pla                         ; pull accumulator from stack
  || ||||   0x000080a5      85c9           sta 0xc9                    ; store accumulator in memory
  --------> 0x000080a7      ad1c80         lda 0x801c                  ; load accumulator with memory
  || ||||   0x000080aa      c985           cmp #0x85                   ; compare memory and accumulator
  ||,=====< 0x000080ac      f010           beq 0x4b2108                ; branch on result zero
  |||||||   0x000080ae      c901           cmp #0x01                   ; compare memory and accumulator
  ========< 0x000080b0      f071           beq 0x4b2108                ; branch on result zero
  |||||||   0x000080b2      a200           ldx #0x00                   ; load index x with memory
  --------> 0x000080b4      dd3e81         cmp 0x813e,x                ; compare memory and accumulator
  ========< 0x000080b7      f022           beq 0x4b2108                ; branch on result zero
  |||||||   0x000080b9      e8             inx                         ; increment index x by one
  |||||||   0x000080ba      e00c           cpx #0x0c                   ; compare memory and index x
  ========< 0x000080bc      90f6           bcc 0x4b2108                ; branch on carry clear
  --`-----> 0x000080be      a52d           lda 0x2d                    ; load accumulator with memory
  || ||||   0x000080c0      85a9           sta 0xa9                    ; store accumulator in memory
  || ||||   0x000080c2      a52e           lda 0x2e                    ; load accumulator with memory
  || ||||   0x000080c4      85aa           sta 0xaa                    ; store accumulator in memory
  || ||||   0x000080c6      209e91         jsr 0x919e                  ; jump to new location saving return address
  || ||||   0x000080c9      29f0           and #0xf0                   ; "and" memory with accumulator
  || ||||   0x000080cb      c940           cmp #0x40                   ; compare memory and accumulator
  ||,=====< 0x000080cd      f004           beq 0x4b2108                ; branch on result zero
  |||||||   0x000080cf      c970           cmp #0x70                   ; compare memory and accumulator
  ========< 0x000080d1      d005           bne 0x4b2108                ; branch on result not zero
  ||`-----> 0x000080d3      a900           lda #0x00                   ; load accumulator with memory
  || ||||   0x000080d5      20d191         jsr 0x91d1                  ; jump to new location saving return address
  --,=====< 0x000080d8      4c5681         jmp 0x8156                  ; jump to new location
  --------> 0x000080db      bd4a81         lda 0x814a,x                ; load accumulator with memory
  ========< 0x000080de      1037           bpl 0x4b2108                ; branch on result plus
  |||||||   0x000080e0      aa             tax                         ; transfer accumulator to index x
  |||||||   0x000080e1      a575           lda 0x75                    ; load accumulator with memory
  ========< 0x000080e3      100f           bpl 0x4b2108                ; branch on result plus
  |||||||   0x000080e5      a900           lda #0x00                   ; load accumulator with memory
  |||||||   0x000080e7      8d5082         sta 0x8250                  ; store accumulator in memory
  |||||||   0x000080ea      a52d           lda 0x2d                    ; load accumulator with memory
  |||||||   0x000080ec      8d5482         sta 0x8254                  ; store accumulator in memory
  |||||||   0x000080ef      a52e           lda 0x2e                    ; load accumulator with memory
  |||||||   0x000080f1      8d5882         sta 0x8258                  ; store accumulator in memory
  --------> 0x000080f4      8a             txa                         ; transfer index x to accumulator
  |||||||   0x000080f5      0a             asl a                       ; shift left one bit (memory or accumulator)
  ========< 0x000080f6      1005           bpl 0x4b2108                ; branch on result plus
  |||||||   0x000080f8      a50f           lda 0x0f                    ; load accumulator with memory
  ========< 0x000080fa      4c1781         jmp 0x8117                  ; jump to new location
  --------> 0x000080fd      8a             txa                         ; transfer index x to accumulator
  |||||||   0x000080fe      290f           and #0x0f                   ; "and" memory with accumulator
  |||||||   0x00008100      aa             tax                         ; transfer accumulator to index x
  |||||||   0x00008101      8d4580         sta 0x8045                  ; store accumulator in memory
  |||||||   0x00008104      bd4680         lda 0x8046,x                ; load accumulator with memory
  |||||||   0x00008107      850f           sta 0x0f                    ; store accumulator in memory
  |||||||   0x00008109      208891         jsr 0x9188                  ; jump to new location saving return address
  |||||||   0x0000810c      a5a9           lda 0xa9                    ; load accumulator with memory
  |||||||   0x0000810e      852d           sta 0x2d                    ; store accumulator in memory
  |||||||   0x00008110      a5aa           lda 0xaa                    ; load accumulator with memory
  |||||||   0x00008112      852e           sta 0x2e                    ; store accumulator in memory
  ========< 0x00008114      4c5681         jmp 0x8156                  ; jump to new location
  --------> 0x00008117      aa             tax                         ; transfer accumulator to index x
  |||||||   0x00008118      8d4580         sta 0x8045                  ; store accumulator in memory
  |||||||   0x0000811b      bd4680         lda 0x8046,x                ; load accumulator with memory
  |||||||   0x0000811e      850f           sta 0x0f                    ; store accumulator in memory
  ========< 0x00008120      4cbe80         jmp 0x80be                  ; jump to new location
  --------> 0x00008123      adfa13         lda 0x13fa                  ; load accumulator with memory
  |||||||   0x00008126      8df143         sta 0x43f1                  ; store accumulator in memory
  |||||||   0x00008129      8df343         sta 0x43f3                  ; store accumulator in memory
  |||||||   0x0000812c      adfb13         lda 0x13fb                  ; load accumulator with memory
  |||||||   0x0000812f      8df243         sta 0x43f2                  ; store accumulator in memory
  |||||||   0x00008132      8df443         sta 0x43f4                  ; store accumulator in memory
  |||||||   0x00008135      adf913         lda 0x13f9                  ; load accumulator with memory
  |||||||   0x00008138      8df043         sta 0x43f0                  ; store accumulator in memory
  ========< 0x0000813b      4c5e81         jmp 0x815e                  ; jump to new location
  |||||||   0x0000813e      f5e4           sbc 0xe4,x                  ; subtract memory from accumulator with borrow
  |||||||   0x00008140      eef3e5         inc 0xe5f3                  ; increment memory by one
  |||||||   0x00008143      f7d5           isb 0xd5,x
  |||||||   0x00008145      c4ce           cpy 0xce                    ; compare memory and index y
  |||||||   0x00008147      d3c5           dcp (0xc5),y
  |||||||   0x00008149      d704           dcp 0x04,x
  |||||||   0x0000814b      0500           ora 0x00                    ; "or" memory with accumulator
  |||||||   0x0000814d      02             hlt
  |||||||   0x0000814e      0103           ora (0x03,x)                ; "or" memory with accumulator
  |||||||   0x00008150      c4c5           cpy 0xc5                    ; compare memory and index y
  |||||||   0x00008152      8082           nop #0x82                   ; no operation
  |||||||   0x00008154      8183           sta (0x83,x)                ; store accumulator in memory
  --`-----> 0x00008156      20274c         jsr 0x4c27                  ; jump to new location saving return address
  || ||||   0x00008159      2907           and #0x07                   ; "and" memory with accumulator
  || ||||   0x0000815b      8df043         sta 0x43f0                  ; store accumulator in memory
  --------> 0x0000815e      aa             tax                         ; transfer accumulator to index x
  || ||||   0x0000815f      bdeea6         lda 0xa6ee,x                ; load accumulator with memory
  || ||||   0x00008162      8df543         sta 0x43f5                  ; store accumulator in memory
  || ||||   0x00008165      20c9a7         jsr 0xa7c9                  ; jump to new location saving return address
  || ||||   0x00008168      a50a           lda 0x0a                    ; load accumulator with memory
  || ||||   0x0000816a      290f           and #0x0f                   ; "and" memory with accumulator
  || ||||   0x0000816c      a8             tay                         ; transfer accumulator to index y
  || ||||   0x0000816d      b9e5a6         lda 0xa6e5,y                ; load accumulator with memory
  || ||||   0x00008170      8574           sta 0x74                    ; store accumulator in memory
  || ||||   0x00008172      a8             tay                         ; transfer accumulator to index y
  || ||||   0x00008173      0930           ora #0x30                   ; "or" memory with accumulator
  || ||||   0x00008175      8d9981         sta 0x8199                  ; store accumulator in memory
  || ||||   0x00008178      8dab81         sta 0x81ab                  ; store accumulator in memory
  || ||||   0x0000817b      8dbd81         sta 0x81bd                  ; store accumulator in memory
  || ||||   0x0000817e      b98289         lda 0x8982,y                ; load accumulator with memory
  || ||||   0x00008181      8dda92         sta 0x92da                  ; store accumulator in memory
  || ||||   0x00008184      a5c8           lda 0xc8                    ; load accumulator with memory
  ||,=====< 0x00008186      1009           bpl 0x4b2108                ; branch on result plus
  |||||||   0x00008188      a9ff           lda #0xff                   ; load accumulator with memory
  |||||||   0x0000818a      200f77         jsr 0x770f                  ; jump to new location saving return address
  |||||||   0x0000818d      c574           cmp 0x74                    ; compare memory and accumulator
  ========< 0x0000818f      f068           beq 0x4b2108                ; branch on result zero
  ||`-----> 0x00008191      a200           ldx #0x00                   ; load index x with memory
  || ||||   0x00008193      20246c         jsr 0x6c24                  ; load
  || ||||   0x00008196      444e47314100                               ; DNG1A
  || ||||   0x0000819c      a0c0           ldy #0xc0                   ; load index y with memory
  || ||||   0x0000819e      a900           lda #0x00                   ; load accumulator with memory
  || ||||   0x000081a0      207389         jsr 0x8973                  ; jump to new location saving return address
  || ||||   0x000081a3      a200           ldx #0x00                   ; load index x with memory
  || ||||   0x000081a5      20246c         jsr 0x6c24                  ; load
  || ||||   0x000081a8      444e47314200                               ; DNG1B
  || ||||   0x000081ae      a0d0           ldy #0xd0                   ; load index y with memory
  || ||||   0x000081b0      a900           lda #0x00                   ; load accumulator with memory
  || ||||   0x000081b2      207389         jsr 0x8973                  ; jump to new location saving return address
  || ||||   0x000081b5      a200           ldx #0x00                   ; load index x with memory
  || ||||   0x000081b7      20246c         jsr 0x6c24                  ; load  
  || ||||   0x000081ba      444e47314300                               ; DNG1C
  || ||||   0x000081c0      a0e0           ldy #0xe0                   ; load index y with memory
  || ||||   0x000081c2      a9b0           lda #0xb0                   ; load accumulator with memory
  || ||||   0x000081c4      207389         jsr 0x8973                  ; jump to new location saving return address
  || ||||   0x000081c7      a200           ldx #0x00                   ; load index x with memory
  || ||||   0x000081c9      20246c         jsr 0x6c24                  ; load
  || ||||   0x000081cc      4954454d5300                               ; ITEMS
  || ||||   0x000081d2      20066c         jsr 0x6c06                  ; jump to new location saving return address
  || ||||   0x000081d5      a000           ldy #0x00                   ; load index y with memory
  || ||||   0x000081d7      84fe           sty 0xfe                    ; store index y in memory
  || ||||   0x000081d9      a9a7           lda #0xa7                   ; load accumulator with memory
  || ||||   0x000081db      85ff           sta 0xff                    ; store accumulator in memory
  || ||||   0x000081dd      a9b0           lda #0xb0                   ; load accumulator with memory
  || ||||   0x000081df      85fc           sta 0xfc                    ; store accumulator in memory
  || ||||   0x000081e1      a9ee           lda #0xee                   ; load accumulator with memory
  || ||||   0x000081e3      85fd           sta 0xfd                    ; store accumulator in memory
  --.-----> 0x000081e5      b1fe           lda (0xfe),y                ; load accumulator with memory
  |||||||   0x000081e7      91fc           sta (0xfc),y                ; store accumulator in memory
  |||||||   0x000081e9      c8             iny                         ; increment index y by one
  ========< 0x000081ea      d0f9           bne 0x4b2108                ; branch on result not zero
  |||||||   0x000081ec      e6ff           inc 0xff                    ; increment memory by one
  |||||||   0x000081ee      e6fd           inc 0xfd                    ; increment memory by one
  |||||||   0x000081f0      a5ff           lda 0xff                    ; load accumulator with memory
  |||||||   0x000081f2      c9b5           cmp #0xb5                   ; compare memory and accumulator
  ||`=====< 0x000081f4      d0ef           bne 0x4b2108                ; branch on result not zero
  || ||||   0x000081f6      20036c         jsr 0x6c03                  ; jump to new location saving return address
  --------> 0x000081f9      adf043         lda 0x43f0                  ; load accumulator with memory
  || ||||   0x000081fc      0930           ora #0x30                   ; "or" memory with accumulator
  || ||||   0x000081fe      8d0882         sta 0x8208                  ; store accumulator in memory
  || ||||   0x00008201      a200           ldx #0x00                   ; load index x with memory
  || ||||   0x00008203      20246c         jsr 0x6c24                  ; load
  || ||||   0x00008206      4d533000                                   ; MS0
  || ||||   0x0000820a      a200           ldx #0x00                   ; load index x with memory
  ||.-----> 0x0000820c      bd00a7         lda 0xa700,x                ; load accumulator with memory
  |||||||   0x0000820f      9d0008         sta 0x0800,x                ; store accumulator in memory
  |||||||   0x00008212      bd80a7         lda 0xa780,x                ; load accumulator with memory
  |||||||   0x00008215      9d8008         sta 0x0880,x                ; store accumulator in memory
  |||||||   0x00008218      bd80a8         lda 0xa880,x                ; load accumulator with memory
  |||||||   0x0000821b      9d000b         sta 0x0b00,x                ; store accumulator in memory
  |||||||   0x0000821e      bd80a9         lda 0xa980,x                ; load accumulator with memory
  |||||||   0x00008221      9d000c         sta 0x0c00,x                ; store accumulator in memory
  |||||||   0x00008224      bd80aa         lda 0xaa80,x                ; load accumulator with memory
  |||||||   0x00008227      9d000d         sta 0x0d00,x                ; store accumulator in memory
  |||||||   0x0000822a      bd80ab         lda 0xab80,x                ; load accumulator with memory
  |||||||   0x0000822d      9d000e         sta 0x0e00,x                ; store accumulator in memory
  |||||||   0x00008230      bd10ac         lda 0xac10,x                ; load accumulator with memory
  |||||||   0x00008233      9d900e         sta 0x0e90,x                ; store accumulator in memory
  |||||||   0x00008236      ca             dex                         ; decrement index x by one
  ||`=====< 0x00008237      d0d3           bne 0x4b2108                ; branch on result not zero
  || ||||   0x00008239      a218           ldx #0x18                   ; load index x with memory
  ||.-----> 0x0000823b      bd10ad         lda 0xad10,x                ; load accumulator with memory
  |||||||   0x0000823e      9d8009         sta 0x0980,x                ; store accumulator in memory
  |||||||   0x00008241      ca             dex                         ; decrement index x by one
  ||`=====< 0x00008242      10f7           bpl 0x4b2108                ; branch on result plus
  || ||||   0x00008244      202694         jsr 0x9426                  ; jump to new location saving return address
  || ||||   0x00008247      20a190         jsr 0x90a1                  ; jump to new location saving return address
  || ||||   0x0000824a      a20a           ldx #0x0a                   ; load index x with memory
  || ||||   0x0000824c      20406c         jsr 0x6c40                  ; jump to new location saving return address
  || ||||   0x0000824f      a9ff           lda #0xff                   ; load accumulator with memory
  ||,=====< 0x00008251      d047           bne 0x4b2108                ; branch on result not zero
  |||||||   0x00008253      a900           lda #0x00                   ; load accumulator with memory
  |||||||   0x00008255      85a9           sta 0xa9                    ; store accumulator in memory
  |||||||   0x00008257      a900           lda #0x00                   ; load accumulator with memory
  |||||||   0x00008259      85aa           sta 0xaa                    ; store accumulator in memory
  |||||||   0x0000825b      209e91         jsr 0x919e                  ; jump to new location saving return address
  |||||||   0x0000825e      290f           and #0x0f                   ; "and" memory with accumulator
  |||||||   0x00008260      8d6982         sta 0x8269                  ; store accumulator in memory
  |||||||   0x00008263      a50a           lda 0x0a                    ; load accumulator with memory
  |||||||   0x00008265      209c93         jsr 0x939c                  ; jump to new location saving return address
  |||||||   0x00008268      09ff           ora #0xff                   ; "or" memory with accumulator
  |||||||   0x0000826a      ae1f80         ldx 0x801f                  ; load index x with memory
  --------> 0x0000826d      dd1f80         cmp 0x801f,x                ; compare memory and accumulator
  ========< 0x00008270      f020           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008272      ca             dex                         ; decrement index x by one
  ========< 0x00008273      d0f8           bne 0x4b2108                ; branch on result not zero
  |||||||   0x00008275      a50a           lda 0x0a                    ; load accumulator with memory
  |||||||   0x00008277      290f           and #0x0f                   ; "and" memory with accumulator
  |||||||   0x00008279      38             sec                         ; set carry flag
  |||||||   0x0000827a      e901           sbc #0x01                   ; subtract memory from accumulator with borrow
  |||||||   0x0000827c      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x0000827d      a8             tay                         ; transfer accumulator to index y
  |||||||   0x0000827e      ad6982         lda 0x8269                  ; load accumulator with memory
  |||||||   0x00008281      c908           cmp #0x08                   ; compare memory and accumulator
  ========< 0x00008283      9001           bcc 0x4b2108                ; branch on carry clear
  |||||||   0x00008285      c8             iny                         ; increment index y by one
  --------> 0x00008286      2907           and #0x07                   ; "and" memory with accumulator
  |||||||   0x00008288      aa             tax                         ; transfer accumulator to index x
  |||||||   0x00008289      bd3580         lda 0x8035,x                ; load accumulator with memory
  |||||||   0x0000828c      19c013         ora 0x13c0,y                ; "or" memory with accumulator
  |||||||   0x0000828f      99c013         sta 0x13c0,y                ; store accumulator in memory
  --------> 0x00008292      ad6982         lda 0x8269                  ; load accumulator with memory
  |||||||   0x00008295      09a0           ora #0xa0                   ; "or" memory with accumulator
  |||||||   0x00008297      20d191         jsr 0x91d1                  ; jump to new location saving return address
  ||`-----> 0x0000829a      ad1c80         lda 0x801c                  ; load accumulator with memory
  || ||||   0x0000829d      c9f5           cmp #0xf5                   ; compare memory and accumulator
  ||,=====< 0x0000829f      f004           beq 0x4b2108                ; branch on result zero
  |||||||   0x000082a1      c9d5           cmp #0xd5                   ; compare memory and accumulator
  ========< 0x000082a3      d003           bne 0x4b2108                ; branch on result not zero
  ==`-----> 0x000082a5      4cf48c         jmp 0x8cf4                  ; jump to new location
  --------> 0x000082a8      c9e4           cmp #0xe4                   ; compare memory and accumulator
  ||,=====< 0x000082aa      f004           beq 0x4b2108                ; branch on result zero
  |||||||   0x000082ac      c9c4           cmp #0xc4                   ; compare memory and accumulator
  ========< 0x000082ae      d003           bne 0x4b2108                ; branch on result not zero
  ==`-----> 0x000082b0      4ceb8c         jmp 0x8ceb                  ; jump to new location
  --------> 0x000082b3      20359b         jsr 0x9b35                  ; jump to new location saving return address
  || ||||   0x000082b6      209e92         jsr 0x929e                  ; jump to new location saving return address
  || ||||   0x000082b9      204192         jsr 0x9241                  ; jump to new location saving return address
  || ||||   0x000082bc      20304c         jsr 0x4c30                  ; jump to new location saving return address
  || ||||   0x000082bf      205896         jsr 0x9658                  ; jump to new location saving return address
  || ||||   0x000082c2      2081a1         jsr 0xa181                  ; jump to new location saving return address
  || ||||   0x000082c5      200b92         jsr 0x920b                  ; jump to new location saving return address
  --.-----> 0x000082c8      a52d           lda 0x2d                    ; load accumulator with memory
  |||||||   0x000082ca      85a9           sta 0xa9                    ; store accumulator in memory
  |||||||   0x000082cc      a52e           lda 0x2e                    ; load accumulator with memory
  |||||||   0x000082ce      85aa           sta 0xaa                    ; store accumulator in memory
  |||||||   0x000082d0      201e6c         jsr 0x6c1e                  ; jump to new location saving return address
  ========< 0x000082d3      3007           bmi 0x4b2108                ; branch on result minus
  ========< 0x000082d5      f008           beq 0x4b2108                ; branch on result zero
  |||||||   0x000082d7      a910           lda #0x10                   ; load accumulator with memory
  ========< 0x000082d9      4c3583         jmp 0x8335                  ; jump to new location
  --------> 0x000082dc      4c3283         jmp 0x8332                  ; jump to new location
  --------> 0x000082df      209e91         jsr 0x919e                  ; jump to new location saving return address
  |||||||   0x000082e2      29f0           and #0xf0                   ; "and" memory with accumulator
  |||||||   0x000082e4      c9f0           cmp #0xf0                   ; compare memory and accumulator
  ========< 0x000082e6      f007           beq 0x4b2108                ; branch on result zero
  |||||||   0x000082e8      c9a0           cmp #0xa0                   ; compare memory and accumulator
  ========< 0x000082ea      f003           beq 0x4b2108                ; branch on result zero
  ========< 0x000082ec      4cf282         jmp 0x82f2                  ; jump to new location
  --------> 0x000082ef      4c0786         jmp 0x8607                  ; jump to new location
  --------> 0x000082f2      a520           lda 0x20                    ; load accumulator with memory
  ========< 0x000082f4      f016           beq 0x4b2108                ; branch on result zero
  |||||||   0x000082f6      c9d4           cmp #0xd4                   ; compare memory and accumulator
  ========< 0x000082f8      f017           beq 0x4b2108                ; branch on result zero
  |||||||   0x000082fa      c9d1           cmp #0xd1                   ; compare memory and accumulator
  ========< 0x000082fc      d00e           bne 0x4b2108                ; branch on result not zero
  |||||||   0x000082fe      ad1d80         lda 0x801d                  ; load accumulator with memory
  |||||||   0x00008301      4901           eor #0x01                   ; "exclusive-or" memory with accumulator
  |||||||   0x00008303      8d1d80         sta 0x801d                  ; store accumulator in memory
  |||||||   0x00008306      202d4c         jsr 0x4c2d                  ; jump to new location saving return address
  ========< 0x00008309      4c1183         jmp 0x8311                  ; jump to new location
  --------> 0x0000830c      a901           lda #0x01                   ; load accumulator with memory
  |||||||   0x0000830e      202d4c         jsr 0x4c2d                  ; jump to new location saving return address
  --------> 0x00008311      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008314      8d1e00         sta 0x001e                  ; store accumulator in memory
  --------> 0x00008317      204e4c         jsr 0x4c4e                  ; jump to new location saving return address
  ========< 0x0000831a      3019           bmi 0x4b2108                ; branch on result minus
  |||||||   0x0000831c      205896         jsr 0x9658                  ; jump to new location saving return address
  |||||||   0x0000831f      2081a1         jsr 0xa181                  ; jump to new location saving return address
  |||||||   0x00008322      200b92         jsr 0x920b                  ; jump to new location saving return address
  |||||||   0x00008325      a980           lda #0x80                   ; load accumulator with memory
  |||||||   0x00008327      20034c         jsr 0x4c03                  ; jump to new location saving return address
  |||||||   0x0000832a      c6c9           dec 0xc9                    ; decrement memory by one
  |||||||   0x0000832c      205a4c         jsr 0x4c5a                  ; jump to new location saving return address
  ========< 0x0000832f      4c1783         jmp 0x8317                  ; jump to new location
  ========< 0x00008332      4cfa93         jmp 0x93fa                  ; jump to new location
  --------> 0x00008335      c900           cmp #0x00                   ; compare memory and accumulator
  ========< 0x00008337      f038           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008339      c9a0           cmp #0xa0                   ; compare memory and accumulator
  ========< 0x0000833b      f034           beq 0x4b2108                ; branch on result zero
  |||||||   0x0000833d      c910           cmp #0x10                   ; compare memory and accumulator
  ========< 0x0000833f      f033           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008341      c9c0           cmp #0xc0                   ; compare memory and accumulator
  ========< 0x00008343      f032           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008345      c9af           cmp #0xaf                   ; compare memory and accumulator
  ========< 0x00008347      f031           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008349      c9ba           cmp #0xba                   ; compare memory and accumulator
  ========< 0x0000834b      f030           beq 0x4b2108                ; branch on result zero
  |||||||   0x0000834d      c9bb           cmp #0xbb                   ; compare memory and accumulator
  ========< 0x0000834f      f02f           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008351      c9ae           cmp #0xae                   ; compare memory and accumulator
  ========< 0x00008353      f02e           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008355      0980           ora #0x80                   ; "or" memory with accumulator
  |||||||   0x00008357      c9c1           cmp #0xc1                   ; compare memory and accumulator
  ========< 0x00008359      9031           bcc 0x4b2108                ; branch on carry clear
  |||||||   0x0000835b      c9db           cmp #0xdb                   ; compare memory and accumulator
  ========< 0x0000835d      b02d           bcs 0x4b2108                ; branch on carry set
  |||||||   0x0000835f      38             sec                         ; set carry flag
  |||||||   0x00008360      e9c1           sbc #0xc1                   ; subtract memory from accumulator with borrow
  |||||||   0x00008362      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x00008363      a8             tay                         ; transfer accumulator to index y
  |||||||   0x00008364      b92184         lda 0x8421,y                ; load accumulator with memory
  |||||||   0x00008367      85fe           sta 0xfe                    ; store accumulator in memory
  |||||||   0x00008369      b92284         lda 0x8422,y                ; load accumulator with memory
  |||||||   0x0000836c      85ff           sta 0xff                    ; store accumulator in memory
  |||||||   0x0000836e      6cfe00         jmp (0x00fe)                ; jump to new location
  --------> 0x00008371      4c5584         jmp 0x8455                  ; jump to new location
  ========< 0x00008374      4c6184         jmp 0x8461                  ; jump to new location
  ========< 0x00008377      4c7c84         jmp 0x847c                  ; jump to new location
  ========< 0x0000837a      4ce384         jmp 0x84e3                  ; jump to new location
  ========< 0x0000837d      4c7985         jmp 0x8579                  ; jump to new location
  ========< 0x00008380      4c3385         jmp 0x8533                  ; jump to new location
  ========< 0x00008383      4ca785         jmp 0x85a7                  ; jump to new location
  --------> 0x00008386      4cfb94         jmp 0x94fb                  ; jump to new location
  --------> 0x00008389      4c2395         jmp 0x9523                  ; jump to new location
  --------> 0x0000838c      c993           cmp #0x93                   ; compare memory and accumulator
  ========< 0x0000838e      f0f6           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008390      c996           cmp #0x96                   ; compare memory and accumulator
  ========< 0x00008392      f0f5           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008394      c9b0           cmp #0xb0                   ; compare memory and accumulator
  ========< 0x00008396      907c           bcc 0x4b2108                ; branch on carry clear
  |||||||   0x00008398      c9b7           cmp #0xb7                   ; compare memory and accumulator
  ========< 0x0000839a      b078           bcs 0x4b2108                ; last branch of which key
  |||||||   0x0000839c      48             pha                         ; push accumulator on stack
  |||||||   0x0000839d      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000083a0      d3e5f4 a0 e1e3f4e9f6e5 a0 f0ecf2ba8d00         ; 'Set active plr;'
  |||||||   0x000083b1      68
  |||||||   0x000083b2      290f           and #0x0f                   ; "and" memory with accumulator
  ========< 0x000083b4      f04b           beq 0x4b2108                ; branch on result zero
  |||||||   0x000083b6      38             sec                         ; set carry flag
  |||||||   0x000083b7      e901           sbc #0x01                   ; subtract memory from accumulator with borrow
  |||||||   0x000083b9      48             pha                         ; push accumulator on stack
  |||||||   0x000083ba      209c93         jsr 0x939c                  ; jump to new location saving return address
  |||||||   0x000083bd      aa             tax                         ; transfer accumulator to index x
  |||||||   0x000083be      bd8010         lda 0x1080,x                ; load accumulator with memory
  ========< 0x000083c1      d02e           bne 0x4b2108                ; branch on result not zero
  |||||||   0x000083c3      bd8310         lda 0x1083,x                ; load accumulator with memory
  |||||||   0x000083c6      c9c4           cmp #0xc4                   ; compare memory and accumulator
  ========< 0x000083c8      f027           beq 0x4b2108                ; branch on result zero
  |||||||   0x000083ca      c9d3           cmp #0xd3                   ; compare memory and accumulator
  ========< 0x000083cc      f023           beq 0x4b2108                ; branch on result zero
  |||||||   0x000083ce      68             pla                         ; pull accumulator from stack
  |||||||   0x000083cf      852c           sta 0x2c                    ; store accumulator in memory
  |||||||   0x000083d1      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x000083d2      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x000083d3      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x000083d4      aa             tax                         ; transfer accumulator to index x
  --------> 0x000083d5      bd0010         lda 0x1000,x                ; load accumulator with memory
  ========< 0x000083d8      1009           bpl 0x4b2108                ; branch on result plus
  |||||||   0x000083da      20034c         jsr 0x4c03                  ; jump to new location saving return address
  |||||||   0x000083dd      e8             inx                         ; increment index x by one
  ========< 0x000083de      4cd583         jmp 0x83d5                  ; jump to new location
  ========< 0x000083e1      1000           bpl 0x4b2108                ; branch on result plus
  --------> 0x000083e3      0980           ora #0x80                   ; "or" memory with accumulator
  |||||||   0x000083e5      20034c         jsr 0x4c03                  ; jump to new location saving return address
  |||||||   0x000083e8      20064c         jsr 0x4c06                  ; jump to new location saving return address
  |||||||   0x000083eb      20304c         jsr 0x4c30                  ; jump to new location saving return address
  ========< 0x000083ee      4cc882         jmp 0x82c8                  ; jump to new location
  --------> 0x000083f1      68             pla                         ; pull accumulator from stack
  |||||||   0x000083f2      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000083f5      c9ee           cmp #0xee                   ; compare memory and accumulator
  |||||||   0x000083f7      f6e1           inc 0xe1,x                  ; increment memory by one
  |||||||   0x000083f9      ece9e4         cpx 0xe4e9                  ; compare memory and index x
  |||||||   0x000083fc      8d00
  |||||||   0x000083fe      4c
  |||||||   0x000083ff      c8
  |||||||   0x00008400      82
  |||||||   0x00008401      20004c
  |||||||   0x00008404      eeefeee58d00
  |||||||   0x0000840a      a9ff           lda #0xff                   ; load accumulator with memory
  |||||||   0x0000840c      852c           sta 0x2c                    ; store accumulator in memory
  |||||||   0x0000840e      20304c         jsr 0x4c30                  ; jump to new location saving return address
  ========< 0x00008411      4cc882         jmp 0x82c8                  ; jump to new location
unknown key:
  --------> 0x00008414      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008417      d7e8e1f4bf8d00                             ; 'What?'
  |||||||   0x0000841e      4cc882         jmp 0x82c8                  ; jump to new location ### jump to other place

  |||||||   0x00008421      jumptable: (a-z)
                              0x8986
                              0x89ba
                              0x89d1
                              0x89e8
                              0x89ed
                              0x8a04
                              0x8a16
                              0x8a2d
                              0x8b24
                              0x8b6c
                              0x8b85
                              0x8cff
                              0x8d1a
                              0x8d39
                              0x8d52
                              0x8d6c
                              0x8d82
                              0x8e57
                              0x8e69
                              0x8e86
                              0x8ea6
                              0x8eb3
                              0x89e8
                              0x8ef1
                              0x8f07
                              0x8fd4
  --------> 0x00008455      20004c         jsr 0x4c00                  ; jump to new location saving return address
  ========< 0x00008458      d0e1f3f38d00                               ; 'Pass'
  |||||||   0x0000845e      4ccb85         jmp 0x85cb
  --------> 0x00008461      a98d           lda #0x8d                   ; load accumulator with memory
  |||||||   0x00008463      20034c         jsr 0x4c03                  ; jump to new location saving return address
  ||||| |   0x00008466      a91e           lda #0x1e                   ; load accumulator with memory
  ||||| |   0x00008468      20034c         jsr 0x4c03                  ; jump to new location saving return address
  ||||| |   0x0000846b      20004c         jsr 0x4c00                  ; jump to new location saving return address
                            dafafafafafaaeaeae8d00
  ||||| |   0x00008479      4ccb85
  --------> 0x0000847c      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x0000847f      c1e4f6e1eee3e58d00
  |||||||   0x00008488      a5         
  |||||||   0x00008489      0f8d45         slo 0x458d
  |||||||   0x0000848c      80a6           nop #0xa6                   ; no operation
  |||||||   0x0000848e      0fa52d         slo 0x2da5
  |||||||   0x00008491      18             clc                         ; clear carry flag
  |||||||   0x00008492      7d3d80         adc 0x803d,x                ; add memory to accumulator with carry
  |||||||   0x00008495      2907           and #0x07                   ; "and" memory with accumulator
  |||||||   0x00008497      85a9           sta 0xa9                    ; store accumulator in memory
  |||||||   0x00008499      a52e           lda 0x2e                    ; load accumulator with memory
  |||||||   0x0000849b      18             clc                         ; clear carry flag
  |||||||   0x0000849c      7d4180         adc 0x8041,x                ; add memory to accumulator with carry
  |||||||   0x0000849f      2907           and #0x07                   ; "and" memory with accumulator
  |||||||   0x000084a1      85aa           sta 0xaa                    ; store accumulator in memory
  --------> 0x000084a3      209e91         jsr 0x919e                  ; jump to new location saving return address
  |||||||   0x000084a6      c983           cmp #0x83                   ; compare memory and accumulator
  ========< 0x000084a8      f036           beq 0x4b2108                ; branch on result zero
  |||||||   0x000084aa      29f0           and #0xf0                   ; "and" memory with accumulator
  |||||||   0x000084ac      c9b0           cmp #0xb0                   ; compare memory and accumulator
  ========< 0x000084ae      f018           beq 0x4b2108                ; branch on result zero
  |||||||   0x000084b0      c9c0           cmp #0xc0                   ; compare memory and accumulator
  ========< 0x000084b2      f014           beq 0x4b2108                ; branch on result zero
  |||||||   0x000084b4      c9d0           cmp #0xd0                   ; compare memory and accumulator
  ========< 0x000084b6      f010           beq 0x4b2108                ; branch on result zero
  |||||||   0x000084b8      20e892         jsr 0x92e8                  ; jump to new location saving return address
  ========< 0x000084bb      b00b           bcs 0x4b2108                ; branch on carry set
  |||||||   0x000084bd      a5a9           lda 0xa9                    ; load accumulator with memory
  |||||||   0x000084bf      852d           sta 0x2d                    ; store accumulator in memory
  |||||||   0x000084c1      a5aa           lda 0xaa                    ; load accumulator with memory
  |||||||   0x000084c3      852e           sta 0x2e                    ; store accumulator in memory
  ========< 0x000084c5      4ccb85         jmp 0x85cb                  ; jump to new location
  --------> 0x000084c8      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000084cb      c2ec           nop #0xec                   ; no operation
  |||||||   0x000084cd      efe3eb         isb 0xebe3
  |||||||   0x000084d0      e5e4           sbc 0xe4                    ; subtract memory from accumulator with borrow
  |||||||   0x000084d2      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x000084d4      00             brk                         ; force break
  |||||||   0x000084d5      a9ff           lda #0xff                   ; load accumulator with memory
  |||||||   0x000084d7      8d4580         sta 0x8045                  ; store accumulator in memory
  |||||||   0x000084da      202a4c         jsr 0x4c2a                  ; jump to new location saving return address
  ========< 0x000084dd      4ccb85         jmp 0x85cb                  ; jump to new location
  --------> 0x000084e0      4cfa92         jmp 0x92fa                  ; jump to new location
  --------> 0x000084e3      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000084e6      c2e1           nop #0xe1                   ; no operation
  |||||||   0x000084e8      e3eb           isb (0xeb,x)
  |||||||   0x000084ea      a0f5           ldy #0xf5                   ; load index y with memory
  |||||`==< 0x000084ec      f08d           beq 0x4b2108                ; branch on result zero
  ||||| |   0x000084ee      00             brk                         ; force break
  ||||| |   0x000084ef      a50f           lda 0x0f                    ; load accumulator with memory
  ||||| |   0x000084f1      4902           eor #0x02                   ; "exclusive-or" memory with accumulator
  ||||| |   0x000084f3      8d4580         sta 0x8045                  ; store accumulator in memory
  ||||| |   0x000084f6      aa             tax                         ; transfer accumulator to index x
  ||||| |   0x000084f7      a52d           lda 0x2d                    ; load accumulator with memory
  ||||| |   0x000084f9      18             clc                         ; clear carry flag
  ||||| |   0x000084fa      7d3d80         adc 0x803d,x                ; add memory to accumulator with carry
  ||||| |   0x000084fd      2907           and #0x07                   ; "and" memory with accumulator
  ||||| |   0x000084ff      85a9           sta 0xa9                    ; store accumulator in memory
  ||||| |   0x00008501      a52e           lda 0x2e                    ; load accumulator with memory
  ||||| |   0x00008503      18             clc                         ; clear carry flag
  ||||| |   0x00008504      7d4180         adc 0x8041,x                ; add memory to accumulator with carry
  ||||| |   0x00008507      2907           and #0x07                   ; "and" memory with accumulator
  ||||| |   0x00008509      85aa           sta 0xaa                    ; store accumulator in memory
  ||||| |   0x0000850b      209e91         jsr 0x919e                  ; jump to new location saving return address
  ||||| |   0x0000850e      29f0           and #0xf0                   ; "and" memory with accumulator
  ||||| |   0x00008510      c9a0           cmp #0xa0                   ; compare memory and accumulator
  |||||,==< 0x00008512      f004           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008514      c9f0           cmp #0xf0                   ; compare memory and accumulator
  ========< 0x00008516      d018           bne 0x4b2108                ; branch on result not zero
  |||||`--> 0x00008518      20004c         jsr 0x4c00                  ; jump to new location saving return address
  ||||| |   0x0000851b      c2ec           nop #0xec                   ; no operation
  ||||| |   0x0000851d      efe3eb         isb 0xebe3
  ||||| |   0x00008520      e5e4           sbc 0xe4                    ; subtract memory from accumulator with borrow
  ||||| |   0x00008522      a18d           lda (0x8d,x)                ; load accumulator with memory
  ||||| |   0x00008524      00             brk                         ; force break
  ||||| |   0x00008525      a9ff           lda #0xff                   ; load accumulator with memory
  ||||| |   0x00008527      8d4580         sta 0x8045                  ; store accumulator in memory
  ||||| |   0x0000852a      202a4c         jsr 0x4c2a                  ; jump to new location saving return address
  |||||,==< 0x0000852d      4ccb85         jmp 0x85cb                  ; jump to new location
  ========< 0x00008530      4ca384         jmp 0x84a3                  ; jump to new location
  --------> 0x00008533      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008536      d4f5           nop 0xf5,x                  ; no operation
  |||||||   0x00008538      f2             hlt
  |||||||   0x00008539      eea0f2         inc 0xf2a0                  ; increment memory by one
  |||||||   0x0000853c      e9e7           sbc #0xe7                   ; subtract memory from accumulator with borrow
  |||||||   0x0000853e      e8             inx                         ; increment index x by one
  |||||||   0x0000853f      f48d           nop 0x8d,x                  ; no operation
  |||||||   0x00008541      00             brk                         ; force break
  |||||||   0x00008542      a52d           lda 0x2d                    ; load accumulator with memory
  |||||||   0x00008544      85a9           sta 0xa9                    ; store accumulator in memory
  |||||||   0x00008546      a52e           lda 0x2e                    ; load accumulator with memory
  |||||||   0x00008548      85aa           sta 0xaa                    ; store accumulator in memory
  |||||||   0x0000854a      209e91         jsr 0x919e                  ; jump to new location saving return address
  |||||||   0x0000854d      c9e0           cmp #0xe0                   ; compare memory and accumulator
  ========< 0x0000854f      f011           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008551      a60f           ldx 0x0f                    ; load index x with memory
  |||||||   0x00008553      e8             inx                         ; increment index x by one
  |||||||   0x00008554      e004           cpx #0x04                   ; compare memory and index x
  ========< 0x00008556      d002           bne 0x4b2108                ; branch on result not zero
  |||||||   0x00008558      a200           ldx #0x00                   ; load index x with memory
  --------> 0x0000855a      860f           stx 0x0f                    ; store index x in memory
  |||||||   0x0000855c      203592         jsr 0x9235                  ; jump to new location saving return address
  ========< 0x0000855f      4cc882         jmp 0x82c8                  ; jump to new location
  --------> 0x00008562      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008565      ceeff4         dec 0xf4ef                  ; decrement memory by one
  |||||||   0x00008568      a0e9           ldy #0xe9                   ; load index y with memory
  |||||||   0x0000856a      eea0e4         inc 0xe4a0                  ; increment memory by one
  |||||||   0x0000856d      efeff2         isb 0xf2ef
  |||||||   0x00008570      f7e1           isb 0xe1,x
  |||||||   0x00008572      f9a18d         sbc 0x8da1,y                ; subtract memory from accumulator with borrow
  |||||||   0x00008575      00             brk                         ; force break
  ========< 0x00008576      4cc882         jmp 0x82c8                  ; jump to new location
  --------> 0x00008579      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x0000857c      d4f5           nop 0xf5,x                  ; no operation
  |||||||   0x0000857e      f2             hlt
  |||||||   0x0000857f      eea0ec         inc 0xeca0                  ; increment memory by one
  |||||||   0x00008582      e5e6           sbc 0xe6                    ; subtract memory from accumulator with borrow
  |||||||   0x00008584      f48d           nop 0x8d,x                  ; no operation
  |||||||   0x00008586      00             brk                         ; force break
  |||||||   0x00008587      a52d           lda 0x2d                    ; load accumulator with memory
  |||||||   0x00008589      85a9           sta 0xa9                    ; store accumulator in memory
  |||||||   0x0000858b      a52e           lda 0x2e                    ; load accumulator with memory
  |||||||   0x0000858d      85aa           sta 0xaa                    ; store accumulator in memory
  |||||||   0x0000858f      209e91         jsr 0x919e                  ; jump to new location saving return address
  |||||||   0x00008592      c9e0           cmp #0xe0                   ; compare memory and accumulator
  ========< 0x00008594      f0cc           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008596      a60f           ldx 0x0f                    ; load index x with memory
  |||||||   0x00008598      ca             dex                         ; decrement index x by one
  |||||||   0x00008599      e0ff           cpx #0xff                   ; compare memory and index x
  ========< 0x0000859b      d002           bne 0x4b2108                ; branch on result not zero
  |||||||   0x0000859d      a203           ldx #0x03                   ; load index x with memory
  --------> 0x0000859f      860f           stx 0x0f                    ; store index x in memory
  |||||||   0x000085a1      203592         jsr 0x9235                  ; jump to new location saving return address
  ========< 0x000085a4      4cc882         jmp 0x82c8                  ; jump to new location
  --------> 0x000085a7      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000085aa      d4f5           nop 0xf5,x                  ; no operation
  |||||||   0x000085ac      f2             hlt
  |||||||   0x000085ad      eea0e1         inc 0xe1a0                  ; increment memory by one
  |||||||   0x000085b0      f2             hlt
  |||||||   0x000085b1      eff5ee         isb 0xeef5
  |||||||   0x000085b4      e48d           cpx 0x8d                    ; compare memory and index x
  |||||||   0x000085b6      00             brk                         ; force break
  |||||||   0x000085b7      a60f           ldx 0x0f                    ; load index x with memory
  |||||||   0x000085b9      e8             inx                         ; increment index x by one
  |||||||   0x000085ba      e8             inx                         ; increment index x by one
  |||||||   0x000085bb      8a             txa                         ; transfer index x to accumulator
  |||||||   0x000085bc      c904           cmp #0x04                   ; compare memory and accumulator
  ========< 0x000085be      9003           bcc 0x4b2108                ; branch on carry clear
  |||||||   0x000085c0      38             sec                         ; set carry flag
  |||||||   0x000085c1      e904           sbc #0x04                   ; subtract memory from accumulator with borrow
  --------> 0x000085c3      850f           sta 0x0f                    ; store accumulator in memory
  |||||||   0x000085c5      203592         jsr 0x9235                  ; jump to new location saving return address
  ========< 0x000085c8      4cc882         jmp 0x82c8                  ; jump to new location
  -----`--> 0x000085cb      203592         jsr 0x9235                  ; jump to new location saving return address
  ||||| |   0x000085ce      a205           ldx #0x05                   ; load index x with memory
  |||||.--> 0x000085d0      209b93         jsr 0x939b                  ; jump to new location saving return address
  |||||||   0x000085d3      a8             tay                         ; transfer accumulator to index y
  |||||||   0x000085d4      b98010         lda 0x1080,y                ; load accumulator with memory
  ========< 0x000085d7      d013           bne 0x4b2108                ; branch on result not zero
  |||||||   0x000085d9      b98310         lda 0x1083,y                ; load accumulator with memory
  |||||||   0x000085dc      c9d3           cmp #0xd3                   ; compare memory and accumulator
  ========< 0x000085de      d00c           bne 0x4b2108                ; branch on result not zero
  |||||||   0x000085e0      20274c         jsr 0x4c27                  ; jump to new location saving return address
  |||||||   0x000085e3      290f           and #0x0f                   ; "and" memory with accumulator
  ========< 0x000085e5      d005           bne 0x4b2108                ; branch on result not zero
  |||||||   0x000085e7      a9c7           lda #0xc7                   ; load accumulator with memory
  |||||||   0x000085e9      998310         sta 0x1083,y                ; store accumulator in memory
  --------> 0x000085ec      ca             dex                         ; decrement index x by one
  |||||`==< 0x000085ed      10e1           bpl 0x4b2108                ; branch on result plus
  ||||| |   0x000085ef      20304c         jsr 0x4c30                  ; jump to new location saving return address
  ||||| |   0x000085f2      a52d           lda 0x2d                    ; load accumulator with memory
  ||||| |   0x000085f4      85a9           sta 0xa9                    ; store accumulator in memory
  ||||| |   0x000085f6      a52e           lda 0x2e                    ; load accumulator with memory
  ||||| |   0x000085f8      85aa           sta 0xaa                    ; store accumulator in memory
  ||||| |   0x000085fa      209e91         jsr 0x919e                  ; jump to new location saving return address
  ||||| |   0x000085fd      29f0           and #0xf0                   ; "and" memory with accumulator
  ||||| |   0x000085ff      c9f0           cmp #0xf0                   ; compare memory and accumulator
  |||||,==< 0x00008601      f004           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008603      c9a0           cmp #0xa0                   ; compare memory and accumulator
  ========< 0x00008605      d033           bne 0x4b2108                ; branch on result not zero
  -----`--> 0x00008607      20004c         jsr 0x4c00                  ; jump to new location saving return address
  ||||| |   0x0000860a      c5ee           cmp 0xee                    ; compare memory and accumulator
  ||||| |   0x0000860c      f4e5           nop 0xe5,x                  ; no operation
  ||||| |   0x0000860e      f2             hlt
  ||||| |   0x0000860f      e9ee           sbc #0xee                   ; subtract memory from accumulator with borrow
  ||||| |   0x00008611      e7a0           isb 0xa0
  ||||| |   0x00008613      f2             hlt
  ||||| |   0x00008614      efefed         isb 0xedef
  ||||| |   0x00008617      aeaeae         ldx 0xaeae                  ; load index x with memory
  ||||| |   0x0000861a      8d0020         sta 0x2000                  ; store accumulator in memory
  ||||| |   0x0000861d      f8             sed                         ; set decimal mode
  ||||| |   0x0000861e      9020           bcc 0x4b2108                ; branch on carry clear
  ||||| |   0x00008620      6491           nop 0x91                    ; no operation
  ||||| |   0x00008622      ae4580         ldx 0x8045                  ; load index x with memory
  |||||,==< 0x00008625      3005           bmi 0x4b2108                ; branch on result minus
  |||||||   0x00008627      bd4680         lda 0x8046,x                ; load accumulator with memory
  |||||||   0x0000862a      850f           sta 0x0f                    ; store accumulator in memory
  |||||`--> 0x0000862c      a200           ldx #0x00                   ; load index x with memory
  ||||| |   0x0000862e      20246c         jsr 0x6c24                  ; jump to new location saving return address
  ||||| |   0x00008631      444e472e2a00                               ; DNG.* -> DNG.PRECOM
  |||||,==< 0x00008637      4c03a7         jmp 0xa703                  ; jump to new location
  --------> 0x0000863a      209e91         jsr 0x919e                  ; jump to new location saving return address
  |||||||   0x0000863d      c980           cmp #0x80                   ; compare memory and accumulator
  --------> 0x0000863f      f055           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008641      c981           cmp #0x81                   ; compare memory and accumulator
  --------> 0x00008643      f00a           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008645      c982           cmp #0x82                   ; compare memory and accumulator
  ========< 0x00008647      d003           bne 0x4b2108                ; branch on result not zero
  ========< 0x00008649      4ce786         jmp 0x86e7                  ; jump to new location
  --------> 0x0000864c      4cfc86         jmp 0x86fc                  ; jump to new location
  --------> 0x0000864f      20004c         jsr 0x4c00                  ; jump to new location saving return address
  ========< 0x00008652      d0ef           bne 0x4b2108                ; branch on result not zero
  |||||||   0x00008654      e9f3           sbc #0xf3                   ; subtract memory from accumulator with borrow
  |||||||   0x00008656      efeea1         isb 0xa1ee
  |||||||   0x00008659      8d00a2         sta 0xa200                  ; store accumulator in memory
  |||||||   0x0000865c      00             brk                         ; force break
  |||||||   0x0000865d      8efb86         stx 0x86fb                  ; store index x in memory
  --------> 0x00008660      aefb86         ldx 0x86fb                  ; load index x with memory
  |||||||   0x00008663      208893         jsr 0x9388                  ; jump to new location saving return address
  ========< 0x00008666      d02b           bne 0x4b2108                ; branch on result not zero
  |||||||   0x00008668      209093         jsr 0x9390                  ; jump to new location saving return address
  |||||||   0x0000866b      8d7286         sta 0x8672                  ; store accumulator in memory
  |||||||   0x0000866e      20724c         jsr 0x4c72                  ; jump to new location saving return address
  |||||||   0x00008671      c9ff           cmp #0xff                   ; compare memory and accumulator
  ========< 0x00008673      9018           bcc 0x4b2108                ; branch on carry clear
  |||||||   0x00008675      207b93         jsr 0x937b                  ; jump to new location saving return address
  |||||||   0x00008678      c9c4           cmp #0xc4                   ; compare memory and accumulator
  ========< 0x0000867a      f011           beq 0x4b2108                ; branch on result zero
  |||||||   0x0000867c      a0d0           ldy #0xd0                   ; load index y with memory
  |||||||   0x0000867e      8a             txa                         ; transfer index x to accumulator
  |||||||   0x0000867f      207293         jsr 0x9372                  ; jump to new location saving return address
  |||||||   0x00008682      a50d           lda 0x0d                    ; load accumulator with memory
  |||||||   0x00008684      204b4c         jsr 0x4c4b                  ; jump to new location saving return address
  --------> 0x00008687      adfb86         lda 0x86fb                  ; load accumulator with memory
  |||||||   0x0000868a      20904c         jsr 0x4c90                  ; jump to new location saving return address
  --------> 0x0000868d      eefb86         inc 0x86fb                  ; increment memory by one
  ========< 0x00008690      4c6086         jmp 0x8660                  ; jump to new location
  ========< 0x00008693      4cf586         jmp 0x86f5                  ; jump to new location
  --------> 0x00008696      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008699      d3ec           dcp (0xec),y
  |||||||   0x0000869b      e5e5           sbc 0xe5                    ; subtract memory from accumulator with borrow
  ========< 0x0000869d      f0a0           beq 0x4b2108                ; branch on result zero
  |||||||   0x0000869f      f3f0           isb (0xf0),y
  |||||||   0x000086a1      e5ec           sbc 0xec                    ; subtract memory from accumulator with borrow
  |||||||   0x000086a3      eca18d         cpx 0x8da1                  ; compare memory and index x
  |||||||   0x000086a6      00             brk                         ; force break
  |||||||   0x000086a7      a200           ldx #0x00                   ; load index x with memory
  |||||||   0x000086a9      8efb86         stx 0x86fb                  ; store index x in memory
  --------> 0x000086ac      aefb86         ldx 0x86fb                  ; load index x with memory
  |||||||   0x000086af      208893         jsr 0x9388                  ; jump to new location saving return address
  ========< 0x000086b2      d02b           bne 0x4b2108                ; branch on result not zero
  |||||||   0x000086b4      209093         jsr 0x9390                  ; jump to new location saving return address
  |||||||   0x000086b7      8dbe86         sta 0x86be                  ; store accumulator in memory
  |||||||   0x000086ba      20724c         jsr 0x4c72                  ; jump to new location saving return address
  |||||||   0x000086bd      c9ff           cmp #0xff                   ; compare memory and accumulator
  ========< 0x000086bf      9018           bcc 0x4b2108                ; branch on carry clear
  |||||||   0x000086c1      207b93         jsr 0x937b                  ; jump to new location saving return address
  |||||||   0x000086c4      c9c4           cmp #0xc4                   ; compare memory and accumulator
  ========< 0x000086c6      f011           beq 0x4b2108                ; branch on result zero
  |||||||   0x000086c8      a0d3           ldy #0xd3                   ; load index y with memory
  |||||||   0x000086ca      8a             txa                         ; transfer index x to accumulator
  |||||||   0x000086cb      207293         jsr 0x9372                  ; jump to new location saving return address
  |||||||   0x000086ce      a50d           lda 0x0d                    ; load accumulator with memory
  |||||||   0x000086d0      204b4c         jsr 0x4c4b                  ; jump to new location saving return address
  |||||||   0x000086d3      adfb86         lda 0x86fb                  ; load accumulator with memory
  |||||||   0x000086d6      20904c         jsr 0x4c90                  ; jump to new location saving return address
  --------> 0x000086d9      eefb86         inc 0x86fb                  ; increment memory by one
  ========< 0x000086dc      4cac86         jmp 0x86ac                  ; jump to new location
  --------> 0x000086df      a900           lda #0x00                   ; load accumulator with memory
  |||||||   0x000086e1      20d191         jsr 0x91d1                  ; jump to new location saving return address
  ========< 0x000086e4      4cf586         jmp 0x86f5                  ; jump to new location
  --------> 0x000086e7      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000086ea      c6e9           dec 0xe9                    ; decrement memory by one
  |||||||   0x000086ec      f2             hlt
  |||||||   0x000086ed      e5a1           sbc 0xa1                    ; subtract memory from accumulator with borrow
  |||||||   0x000086ef      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x000086f1      00             brk                         ; force break
  |||||||   0x000086f2      20874c         jsr 0x4c87                  ; jump to new location saving return address
  --------> 0x000086f5      20304c         jsr 0x4c30                  ; jump to new location saving return address
  ========< 0x000086f8      4c9487         jmp 0x8794                  ; jump to new location
  |||||||   0x000086fb      00             brk                         ; force break
  --------> 0x000086fc      209e91         jsr 0x919e                  ; jump to new location saving return address
  |||||||   0x000086ff      c962           cmp #0x62                   ; compare memory and accumulator
  ========< 0x00008701      f007           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008703      c961           cmp #0x61                   ; compare memory and accumulator
  ========< 0x00008705      f026           beq 0x4b2108                ; branch on result zero
  ========< 0x00008707      4c9487         jmp 0x8794                  ; jump to new location
  --------> 0x0000870a      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x0000870d      c2ef           nop #0xef                   ; no operation
  |||||||   0x0000870f      ede2a0         sbc 0xa0e2                  ; subtract memory from accumulator with borrow
  |||||||   0x00008712      d4f2           nop 0xf2,x                  ; no operation
  |||||||   0x00008714      e1f0           sbc (0xf0,x)                ; subtract memory from accumulator with borrow
  |||||||   0x00008716      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x00008718      cbc1           sbx 0xc1
  |||||||   0x0000871a      c2cf           nop #0xcf                   ; no operation
  |||||||   0x0000871c      cfcda1         dcp 0xa1cd
  |||||||   0x0000871f      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x00008721      00             brk                         ; force break
  |||||||   0x00008722      a900           lda #0x00                   ; load accumulator with memory
  |||||||   0x00008724      20d191         jsr 0x91d1                  ; jump to new location saving return address
  |||||||   0x00008727      20874c         jsr 0x4c87                  ; jump to new location saving return address
  ========< 0x0000872a      4c9487         jmp 0x8794                  ; jump to new location
  --------> 0x0000872d      20004c         jsr 0x4c00                  ; jump to new location saving return address
  ========< 0x00008730      d0e9           bne 0x4b2108                ; branch on result not zero
  |||||||   0x00008732      f4a0           nop 0xa0,x                  ; no operation
  |||||||   0x00008734      d4f2           nop 0xf2,x                  ; no operation
  |||||||   0x00008736      e1f0           sbc (0xf0,x)                ; subtract memory from accumulator with borrow
  |||||||   0x00008738      a1a1           lda (0xa1,x)                ; load accumulator with memory
  |||||||   0x0000873a      8dc6e1         sta 0xe1c6                  ; store accumulator in memory
  |||||||   0x0000873d      ecece9         cpx 0xe9ec                  ; compare memory and index x
  |||||||   0x00008740      eee7ae         inc 0xaee7                  ; increment memory by one
  |||||||   0x00008743      aeae8d         ldx 0x8dae                  ; load index x with memory
  |||||||   0x00008746      00             brk                         ; force break
  |||||||   0x00008747      a960           lda #0x60                   ; load accumulator with memory
  |||||||   0x00008749      20d191         jsr 0x91d1                  ; jump to new location saving return address
  |||||||   0x0000874c      a609           ldx 0x09                    ; load index x with memory
  |||||||   0x0000874e      e007           cpx #0x07                   ; compare memory and index x
  ========< 0x00008750      f03f           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008752      20f890         jsr 0x90f8                  ; jump to new location saving return address
  |||||||   0x00008755      a609           ldx 0x09                    ; load index x with memory
  |||||||   0x00008757      e8             inx                         ; increment index x by one
  |||||||   0x00008758      8609           stx 0x09                    ; store index x in memory
  |||||||   0x0000875a      202d91         jsr 0x912d                  ; jump to new location saving return address
  |||||||   0x0000875d      20ba91         jsr 0x91ba                  ; jump to new location saving return address
  |||||||   0x00008760      c990           cmp #0x90                   ; compare memory and accumulator
  ========< 0x00008762      b008           bcs 0x4b2108                ; branch on carry set
  |||||||   0x00008764      0908           ora #0x08                   ; "or" memory with accumulator
  |||||||   0x00008766      20d191         jsr 0x91d1                  ; jump to new location saving return address
  |||||||   0x00008769      20f890         jsr 0x90f8                  ; jump to new location saving return address
  --------> 0x0000876c      a905           lda #0x05                   ; load accumulator with memory
  |||||||   0x0000876e      8d4580         sta 0x8045                  ; store accumulator in memory
  |||||||   0x00008771      20a190         jsr 0x90a1                  ; jump to new location saving return address
  |||||||   0x00008774      203592         jsr 0x9235                  ; jump to new location saving return address
  |||||||   0x00008777      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x0000877a      a0a0           ldy #0xa0                   ; load index y with memory
  |||||||   0x0000877c      a0a0           ldy #0xa0                   ; load index y with memory
  |||||||   0x0000877e      a0a0           ldy #0xa0                   ; load index y with memory
  |||||||   0x00008780      aeaeae         ldx 0xaeae                  ; load index x with memory
  |||||||   0x00008783      f3f0           isb (0xf0),y
  |||||||   0x00008785      ece1f4         cpx 0xf4e1                  ; compare memory and index x
  |||||||   0x00008788      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x0000878a      00             brk                         ; force break
  |||||||   0x0000878b      20874c         jsr 0x4c87                  ; jump to new location saving return address
  ========< 0x0000878e      4ccb85         jmp 0x85cb                  ; jump to new location
  --------> 0x00008791      4c2c88         jmp 0x882c                  ; jump to new location
  --------> 0x00008794      a520           lda 0x20                    ; load accumulator with memory
  ========< 0x00008796      f010           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008798      c9d4           cmp #0xd4                   ; compare memory and accumulator
  ========< 0x0000879a      d003           bne 0x4b2108                ; branch on result not zero
  --------> 0x0000879c      4c2188         jmp 0x8821                  ; jump to new location
  --------> 0x0000879f      c9d1           cmp #0xd1                   ; compare memory and accumulator
  ========< 0x000087a1      d005           bne 0x4b2108                ; branch on result not zero
  |||||||   0x000087a3      ad1d80         lda 0x801d                  ; load accumulator with memory
  ========< 0x000087a6      d0f4           bne 0x4b2108                ; branch on result not zero
  --------> 0x000087a8      a908           lda #0x08                   ; load accumulator with memory
  |||||||   0x000087aa      8d1e80         sta 0x801e                  ; store accumulator in memory
  --------> 0x000087ad      20274c         jsr 0x4c27                  ; jump to new location saving return address
  |||||||   0x000087b0      2903           and #0x03                   ; "and" memory with accumulator
  |||||||   0x000087b2      aa             tax                         ; transfer accumulator to index x
  |||||||   0x000087b3      adf143         lda 0x43f1                  ; load accumulator with memory
  ========< 0x000087b6      3069           bmi 0x4b2108                ; branch on result minus
  |||||||   0x000087b8      18             clc                         ; clear carry flag
  |||||||   0x000087b9      7d3d80         adc 0x803d,x                ; add memory to accumulator with carry
  |||||||   0x000087bc      2907           and #0x07                   ; "and" memory with accumulator
  |||||||   0x000087be      85a9           sta 0xa9                    ; store accumulator in memory
  |||||||   0x000087c0      adf243         lda 0x43f2                  ; load accumulator with memory
  |||||||   0x000087c3      18             clc                         ; clear carry flag
  |||||||   0x000087c4      7d4180         adc 0x8041,x                ; add memory to accumulator with carry
  |||||||   0x000087c7      2907           and #0x07                   ; "and" memory with accumulator
  |||||||   0x000087c9      85aa           sta 0xaa                    ; store accumulator in memory
  |||||||   0x000087cb      209e91         jsr 0x919e                  ; jump to new location saving return address
  |||||||   0x000087ce      29f0           and #0xf0                   ; "and" memory with accumulator
  |||||||   0x000087d0      c960           cmp #0x60                   ; compare memory and accumulator
  ========< 0x000087d2      f004           beq 0x4b2108                ; branch on result zero
  |||||||   0x000087d4      c980           cmp #0x80                   ; compare memory and accumulator
  ========< 0x000087d6      9008           bcc 0x4b2108                ; branch on carry clear
  --------> 0x000087d8      ce1e80         dec 0x801e                  ; decrement memory by one
  ========< 0x000087db      f044           beq 0x4b2108                ; branch on result zero
  ========< 0x000087dd      4cad87         jmp 0x87ad                  ; jump to new location
  --------> 0x000087e0      a5a9           lda 0xa9                    ; load accumulator with memory
  |||||||   0x000087e2      c52d           cmp 0x2d                    ; compare memory and accumulator
  ========< 0x000087e4      d009           bne 0x4b2108                ; branch on result not zero
  |||||||   0x000087e6      a5aa           lda 0xaa                    ; load accumulator with memory
  |||||||   0x000087e8      c52e           cmp 0x2e                    ; compare memory and accumulator
  ========< 0x000087ea      d003           bne 0x4b2108                ; branch on result not zero
  ========< 0x000087ec      4cfa8f         jmp 0x8ffa                  ; jump to new location
  --------> 0x000087ef      adf043         lda 0x43f0                  ; load accumulator with memory
  |||||||   0x000087f2      c907           cmp #0x07                   ; compare memory and accumulator
  ========< 0x000087f4      f0e2           beq 0x4b2108                ; branch on result zero
  |||||||   0x000087f6      a5a9           lda 0xa9                    ; load accumulator with memory
  |||||||   0x000087f8      cdf343         cmp 0x43f3                  ; compare memory and accumulator
  ========< 0x000087fb      d00e           bne 0x4b2108                ; branch on result not zero
  |||||||   0x000087fd      a5aa           lda 0xaa                    ; load accumulator with memory
  |||||||   0x000087ff      cdf443         cmp 0x43f4                  ; compare memory and accumulator
  ========< 0x00008802      d007           bne 0x4b2108                ; branch on result not zero
  |||||||   0x00008804      20274c         jsr 0x4c27                  ; jump to new location saving return address
  |||||||   0x00008807      c920           cmp #0x20                   ; compare memory and accumulator
  ========< 0x00008809      b0cd           bcs 0x4b2108                ; branch on carry set
  --------> 0x0000880b      adf143         lda 0x43f1                  ; load accumulator with memory
  |||||||   0x0000880e      8df343         sta 0x43f3                  ; store accumulator in memory
  |||||||   0x00008811      a5a9           lda 0xa9                    ; load accumulator with memory
  |||||||   0x00008813      8df143         sta 0x43f1                  ; store accumulator in memory
  |||||||   0x00008816      adf243         lda 0x43f2                  ; load accumulator with memory
  |||||||   0x00008819      8df443         sta 0x43f4                  ; store accumulator in memory
  |||||||   0x0000881c      a5aa           lda 0xaa                    ; load accumulator with memory
  |||||||   0x0000881e      8df243         sta 0x43f2                  ; store accumulator in memory
  --------> 0x00008821      206f4c         jsr 0x4c6f                  ; jump to new location saving return address
  |||||||   0x00008824      a900           lda #0x00                   ; load accumulator with memory
  |||||||   0x00008826      8dde97         sta 0x97de                  ; store accumulator in memory
  ========< 0x00008829      4cc882         jmp 0x82c8                  ; jump to new location
  --------> 0x0000882c      a200           ldx #0x00                   ; load index x with memory
  |||||||   0x0000882e      20406c         jsr 0x6c40                  ; jump to new location saving return address
  |||||||   0x00008831      20b294         jsr 0x94b2                  ; jump to new location saving return address
  |||||||   0x00008834      20064c         jsr 0x4c06                  ; jump to new location saving return address
  |||||||   0x00008837      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x0000883a      c5f8           cmp 0xf8                    ; compare memory and accumulator
  |||||||   0x0000883c      e9f4           sbc #0xf4                   ; subtract memory from accumulator with borrow
  |||||||   0x0000883e      a0f4           ldy #0xf4                   ; load index y with memory
  |||||||   0x00008840      efa000         isb 0x00a0
  |||||||   0x00008843      a509           lda 0x09                    ; load accumulator with memory
  ========< 0x00008845      f017           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008847      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x0000884a      f4e8           nop 0xe8,x                  ; no operation
  |||||||   0x0000884c      e58d           sbc 0x8d                    ; subtract memory from accumulator with borrow
  |||||||   0x0000884e      d5ee           cmp 0xee,x                  ; compare memory and accumulator
  |||||||   0x00008850      e4e5           cpx 0xe5                    ; compare memory and index x
  |||||||   0x00008852      f2             hlt
  |||||||   0x00008853      f7ef           isb 0xef,x
  |||||||   0x00008855      f2             hlt
  |||||||   0x00008856      ece4a1         cpx 0xa1e4                  ; compare memory and index x
  |||||||   0x00008859      8d004c         sta 0x4c00                  ; store accumulator in memory
  |||||||   0x0000885c      6e8820         ror 0x2088                  ; rotate one bit right (memory or accumulator)
  |||||||   0x0000885f      00             brk                         ; force break
  ========< 0x00008860      4c8dc2         jmp 0xc28d                  ; jump to new location
  |||||||   0x00008863      f2             hlt
  |||||||   0x00008864      e9f4           sbc #0xf4                   ; subtract memory from accumulator with borrow
  |||||||   0x00008866      e1ee           sbc (0xee,x)                ; subtract memory from accumulator with borrow
  |||||||   0x00008868      eee9e1         inc 0xe1e9                  ; increment memory by one
  |||||||   0x0000886b      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x0000886d      00             brk                         ; force break
  |||||||   0x0000886e      a907           lda #0x07                   ; load accumulator with memory
  |||||||   0x00008870      20096c         jsr 0x6c09                  ; jump to new location saving return address
  |||||||   0x00008873      20b988         jsr 0x88b9                  ; jump to new location saving return address
  |||||||   0x00008876      a509           lda 0x09                    ; load accumulator with memory
  ========< 0x00008878      f005           beq 0x4b2108                ; branch on result zero
  |||||||   0x0000887a      a908           lda #0x08                   ; load accumulator with memory
  ========< 0x0000887c      4c8188         jmp 0x8881                  ; jump to new location
  --------> 0x0000887f      a902           lda #0x02                   ; load accumulator with memory
  --------> 0x00008881      20096c         jsr 0x6c09                  ; jump to new location saving return address
  |||||||   0x00008884      a506           lda 0x06                    ; load accumulator with memory
  |||||||   0x00008886      852d           sta 0x2d                    ; store accumulator in memory
  |||||||   0x00008888      a507           lda 0x07                    ; load accumulator with memory
  |||||||   0x0000888a      852e           sta 0x2e                    ; store accumulator in memory
  |||||||   0x0000888c      a509           lda 0x09                    ; load accumulator with memory
  ========< 0x0000888e      f005           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008890      a9ff           lda #0xff                   ; load accumulator with memory
  ========< 0x00008892      4c9788         jmp 0x8897                  ; jump to new location
  --------> 0x00008895      a900           lda #0x00                   ; load accumulator with memory
  --------> 0x00008897      8509           sta 0x09                    ; store accumulator in memory
  |||||||   0x00008899      a900           lda #0x00                   ; load accumulator with memory
  |||||||   0x0000889b      850a           sta 0x0a                    ; store accumulator in memory
  |||||||   0x0000889d      202a4c         jsr 0x4c2a                  ; jump to new location saving return address
  |||||||   0x000088a0      a200           ldx #0x00                   ; load index x with memory
  |||||||   0x000088a2      20246c         jsr 0x6c24                  ; jump to new location saving return address
  |||||||   0x000088a5      544c49535400                               ; TLIST
  |||||||   0x000088ab      a201           ldx #0x01                   ; load index x with memory
  |||||||   0x000088ad      20246c         jsr 0x6c24                  ; load
  |||||||   0x000088b0      4d41494e2e4f555400                         ; MAIN.OUT
  --------> 0x000088b9      a5c8           lda 0xc8                    ; load accumulator with memory
  ========< 0x000088bb      1008           bpl 0x4b2108                ; branch on result plus
  |||||||   0x000088bd      a574           lda 0x74                    ; load accumulator with memory
  |||||||   0x000088bf      200f77         jsr 0x770f                  ; jump to new location saving return address
  ========< 0x000088c2      4cf488         jmp 0x88f4                  ; jump to new location
  --------> 0x000088c5      a200           ldx #0x00                   ; load index x with memory
  |||||||   0x000088c7      20246c         jsr 0x6c24                  ; load
  |||||||   0x000088ca      5333                                       : S3
  |||||||   0x000088cd      a9f0           lda #0xf0                   ; load accumulator with memory
  |||||||   0x000088cf      205189         jsr 0x8951                  ; jump to new location saving return address
  |||||||   0x000088d2      a200           ldx #0x00                   ; load index x with memory
  |||||||   0x000088d4      20246c         jsr 0x6c24                  ; load
  |||||||   0x000088d7      5332                                       : S2
  |||||||   0x000088da      a9e0           lda #0xe0                   ; load accumulator with memory
  |||||||   0x000088dc      205189         jsr 0x8951                  ; jump to new location saving return address
  |||||||   0x000088df      a200           ldx #0x00                   ; load index x with memory
  |||||||   0x000088e1      20246c         jsr 0x6c24                  ; load
  |||||||   0x000088e4      5331                                       : S1
  |||||||   0x000088e7      a9d0           lda #0xd0                   ; load accumulator with memory
  |||||||   0x000088e9      205189         jsr 0x8951                  ; jump to new location saving return address
  |||||||   0x000088ec      a200           ldx #0x00                   ; load index x with memory
  |||||||   0x000088ee      20246c         jsr 0x6c24                  ; load
  |||||||   0x000088f1      5330                                       : S0
  --------> 0x000088f4      a200           ldx #0x00                   ; load index x with memory
  |||||||   0x000088f6      20246c         jsr 0x6c24                  ; load
  |||||||   0x000088f9      434f4c4f525300                             ; COLORS
  | |||||   0x00008900      78             sei                         ; set interrupt disable status
  | |||||   0x00008901      209e92         jsr 0x929e                  ; jump to new location saving return address
  | |||||   0x00008904      204b89         jsr 0x894b                  ; jump to new location saving return address
  | |||||   0x00008907      a5c8           lda 0xc8                    ; load accumulator with memory
  |,======< 0x00008909      1003           bpl 0x4b2108                ; branch on result plus
  |||||||   0x0000890b      20891d         jsr 0x1d89                  ; jump to new location saving return address
  |`------> 0x0000890e      a200           ldx #0x00                   ; load index x with memory
  |.------> 0x00008910      bd00b0         lda 0xb000,x                ; load accumulator with memory
  |||||||   0x00008913      9d0008         sta 0x0800,x                ; store accumulator in memory
  |||||||   0x00008916      bd00b1         lda 0xb100,x                ; load accumulator with memory
  |||||||   0x00008919      9d0009         sta 0x0900,x                ; store accumulator in memory
  |||||||   0x0000891c      bd00b2         lda 0xb200,x                ; load accumulator with memory
  |||||||   0x0000891f      9d000a         sta 0x0a00,x                ; store accumulator in memory
  |||||||   0x00008922      bd00b3         lda 0xb300,x                ; load accumulator with memory
  |||||||   0x00008925      9d000b         sta 0x0b00,x                ; store accumulator in memory
  |||||||   0x00008928      bd00b4         lda 0xb400,x                ; load accumulator with memory
  |||||||   0x0000892b      9d000c         sta 0x0c00,x                ; store accumulator in memory
  |||||||   0x0000892e      bd00b5         lda 0xb500,x                ; load accumulator with memory
  |||||||   0x00008931      9d000d         sta 0x0d00,x                ; store accumulator in memory
  |||||||   0x00008934      bd00b6         lda 0xb600,x                ; load accumulator with memory
  |||||||   0x00008937      9d000e         sta 0x0e00,x                ; store accumulator in memory
  |||||||   0x0000893a      bd00b7         lda 0xb700,x                ; load accumulator with memory
  |||||||   0x0000893d      9d000f         sta 0x0f00,x                ; store accumulator in memory
  |||||||   0x00008940      ca             dex                         ; decrement index x by one
  |`======< 0x00008941      d0cd           bne 0x4b2108                ; branch on result not zero
  | |||||   0x00008943      a5c8           lda 0xc8                    ; load accumulator with memory
  |,======< 0x00008945      1003           bpl 0x4b2108                ; branch on result plus
  |||||||   0x00008947      20891d         jsr 0x1d89                  ; jump to new location saving return address
  |`------> 0x0000894a      58             cli                         ; clear interrupt disable bit
  |.------> 0x0000894b      a900           lda #0x00                   ; load accumulator with memory
  |||||||   0x0000894d      8d15d0         sta 0xd015                  ; store accumulator in memory
  |||||||   0x00008950      60             rts                         ; return from subroutine

  |||||||   0x00008951      85fd           sta 0xfd                    ; store accumulator in memory
  |||||||   0x00008953      a9c0           lda #0xc0                   ; load accumulator with memory
  |||||||   0x00008955      85ff           sta 0xff                    ; store accumulator in memory
  |||||||   0x00008957      20066c         jsr 0x6c06                  ; jump to new location saving return address
  |||||||   0x0000895a      a000           ldy #0x00                   ; load index y with memory
  |||||||   0x0000895c      84fe           sty 0xfe                    ; store index y in memory
  |||||||   0x0000895e      84fc           sty 0xfc                    ; store index y in memory
  |||||||   0x00008960      a210           ldx #0x10                   ; load index x with memory
  --------> 0x00008962      b1fe           lda (0xfe),y                ; load accumulator with memory
  |||||||   0x00008964      91fc           sta (0xfc),y                ; store accumulator in memory
  |||||||   0x00008966      c8             iny                         ; increment index y by one
  ========< 0x00008967      d0f9           bne 0x4b2108                ; branch on result not zero
  |||||||   0x00008969      e6ff           inc 0xff                    ; increment memory by one
  |||||||   0x0000896b      e6fd           inc 0xfd                    ; increment memory by one
  |||||||   0x0000896d      ca             dex                         ; decrement index x by one
  ========< 0x0000896e      d0f2           bne 0x4b2108                ; branch on result not zero
  ========< 0x00008970      4c036c         jmp 0x6c03                  ; jump to new location

  |||||||   0x00008973      8df6a6         sta 0xa6f6                  ; store accumulator in memory
  ========< 0x00008976      f003           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008978      a90e           lda #0x0e                   ; load accumulator with memory
  |||||||   0x0000897a      2ca910         bit 0x10a9                  ; test bits in memory with accumulator
  |||||||   0x0000897d      8df7a6         sta 0xa6f7                  ; store accumulator in memory
  ========< 0x00008980      4c83a7         jmp 0xa783                  ; jump to new location
  |||||||   0x00008983      e090           cpx #0x90                   ; compare memory and index x
  ========< 0x00008985      f020           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008987      00             brk                         ; force break
  ========< 0x00008988      4cc1f4         jmp 0xf4c1                  ; jump to new location
  |||||||   0x0000898b      f4e1           nop 0xe1,x                  ; no operation
  |||||||   0x0000898d      e3eb           isb (0xeb,x)
  |||||||   0x0000898f      8d0020         sta 0x2000                  ; store accumulator in memory
  |||||||   0x00008992      88             dey                         ; decrement index y by one
  |||||||   0x00008993      9120           sta (0x20),y                ; store accumulator in memory
  |||||||   0x00008995      e8             inx                         ; increment index x by one
  |||||||   0x00008996      92             hlt
  ========< 0x00008997      b00d           bcs 0x4b2108                ; branch on carry set
  |||||||   0x00008999      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x0000899c      d7e8
  |||||||   0x0000899e      e1f4
  |||||||   0x000089a0      bf8d00
  |||||||   0x000089a3      4cc882         jmp 0x82c8                  ; jump to new location
  --------> 0x000089a6      20f890         jsr 0x90f8                  ; jump to new location saving return address
  |||||||   0x000089a9      206491         jsr 0x9164                  ; jump to new location saving return address
  |||||||   0x000089ac      208990         jsr 0x9089                  ; jump to new location saving return address
  |||||||   0x000089af      a200           ldx #0x00                   ; load index x with memory
  |||||||   0x000089b1      20246c         jsr 0x6c24                  ; jump to new location saving return address
  |||||||   0x000089b4      442a00                                     ; D*
  ========< 0x000089b7      4c00a7         jmp 0xa700                  ; jump to new location
  |||||||   0x000089ba      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000089bd      c2ef           nop #0xef                   ; no operation
  |||||||   0x000089bf      e1f2           sbc (0xf2,x)                ; subtract memory from accumulator with borrow
  |||||||   0x000089c1      e48d           cpx 0x8d                    ; compare memory and index x
  |||||||   0x000089c3      ceeff4         dec 0xf4ef                  ; decrement memory by one
  |||||||   0x000089c6      a0e8           ldy #0xe8                   ; load index y with memory
  |||||||   0x000089c8      e5f2           sbc 0xf2                    ; subtract memory from accumulator with borrow
  |||||||   0x000089ca      e5a1           sbc 0xa1                    ; subtract memory from accumulator with borrow
  |||||||   0x000089cc      8d00
  |||||||   0x000089ce      4cc882
  |||||||   0x000089cf      20           nop #0x20                   ; no operation
  |||||||   0x000089d2      00             brk                         ; force break
  |||||||   0x000089d3      4cc3e1         jmp 0xe1c3                  ; jump to new location
  |||||||   0x000089d6      f3f4           isb (0xf4),y
  |||||||   0x000089d8      8d00a9         sta 0xa900                  ; store accumulator in memory
  |||||||   0x000089db      4320           sre (0x20,x)
  |||||||   0x000089dd      e8             inx                         ; increment index x by one
  |||||||   0x000089de      8f2000         sax 0x0020
  |||||||   0x000089e1      a720           lax 0x20
  |||||||   0x000089e3      359b           and 0x9b,x                  ; "and" memory with accumulator
  ========< 0x000089e5      4ccb85         jmp 0x85cb                  ; jump to new location
  |||||||   0x000089e8      c6ca           dec 0xca                    ; decrement memory by one
  ========< 0x000089ea      4cc882         jmp 0x82c8                  ; jump to new location
  |||||||   0x000089ed      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000089f0      c5ee           cmp 0xee                    ; compare memory and accumulator
  |||||||   0x000089f2      f4e5           nop 0xe5,x                  ; no operation
  |||||||   0x000089f4      f2             hlt
  |||||||   0x000089f5      8dceef         sta 0xefce                  ; store accumulator in memory
  |||||||   0x000089f8      f4a0           nop 0xa0,x                  ; no operation
  |||||||   0x000089fa      e8             inx                         ; increment index x by one
  |||||||   0x000089fb      e5f2           sbc 0xf2                    ; subtract memory from accumulator with borrow
  |||||||   0x000089fd      e5a1           sbc 0xa1                    ; subtract memory from accumulator with borrow
  |||||||   0x000089ff      8d004c         sta 0x4c00                  ; store accumulator in memory
  |||||||   0x00008a02      c8             iny                         ; increment index y by one
  |||||||   0x00008a03      8220           nop #0x20                   ; no operation
  |||||||   0x00008a05      00             brk                         ; force break
  |||||||   0x00008a06      4cc6e9         jmp 0xe9c6                  ; jump to new location
  |||||||   0x00008a09      f2             hlt
  |||||||   0x00008a0a      e5ad           sbc 0xad                    ; subtract memory from accumulator with borrow
  |||||||   0x00008a0c      d7e8           dcp 0xe8,x
  |||||||   0x00008a0e      e1f4           sbc (0xf4,x)                ; subtract memory from accumulator with borrow
  |||||||   0x00008a10      bf8d00         lax 0x008d,y
  |||||||   0x00008a13      4cc882         jmp 0x82c8                  ; jump to new location
  |||||||   0x00008a16      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008a19      c7e5           dcp 0xe5
  |||||||   0x00008a1b      f48d           nop 0x8d,x                  ; no operation
  |||||||   0x00008a1d      00             brk                         ; force break
  |||||||   0x00008a1e      a200           ldx #0x00                   ; load index x with memory
  |||||||   0x00008a20      20246c         jsr 0x6c24                  ; load
  |||||||   0x00008a23      434d2a00                                   ; CM*
  |||||||   0x00008a27      2000a7         jsr 0xa700                  ; jump to new location saving return address
  ========< 0x00008a2a      4ce289         jmp 0x89e2                  ; jump to new location
  |||||||   0x00008a2d      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008a30      c8             iny                         ; increment index y by one
  |||||||   0x00008a31      efece5         isb 0xe5ec
  |||||||   0x00008a34      a0f5           ldy #0xf5                   ; load index y with memory
  |||||||   0x00008a36      f0a0           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008a38      a6a0           ldx 0xa0                    ; load index x with memory
  |||||||   0x00008a3a      e3e1           isb (0xe1,x)
  |||||||   0x00008a3c      edf0a1         sbc 0xa1f0                  ; subtract memory from accumulator with borrow
  |||||||   0x00008a3f      8d8dc6         sta 0xc68d                  ; store accumulator in memory
  |||||||   0x00008a42      eff2a0         isb 0xa0f2
  |||||||   0x00008a45      e8             inx                         ; increment index x by one
  |||||||   0x00008a46      eff7a0         isb 0xa0f7
  |||||||   0x00008a49      ede1ee         sbc 0xeee1                  ; subtract memory from accumulator with borrow
  |||||||   0x00008a4c      f98de8         sbc 0xe88d,y                ; subtract memory from accumulator with borrow
  |||||||   0x00008a4f      eff5f2         isb 0xf2f5
  |||||||   0x00008a52      f3bf           isb (0xbf),y
  |||||||   0x00008a54      a0a8           ldy #0xa8                   ; load index y with memory
  |||||||   0x00008a56      b1ad           lda (0xad),y                ; load accumulator with memory
  |||||||   0x00008a58      b9a9a0         lda 0xa0a9,y                ; load accumulator with memory
  |||||||   0x00008a5b      00             brk                         ; force break
  |||||||   0x00008a5c      20154c         jsr 0x4c15                  ; jump to new location saving return address
  |||||||   0x00008a5f      38             sec                         ; set carry flag
  |||||||   0x00008a60      e9b0           sbc #0xb0                   ; subtract memory from accumulator with borrow
  ========< 0x00008a62      f04e           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008a64      c90a           cmp #0x0a                   ; compare memory and accumulator
  ========< 0x00008a66      b04a           bcs 0x4b2108                ; branch on carry set
  |||||||   0x00008a68      858a           sta 0x8a                    ; store accumulator in memory
  |||||||   0x00008a6a      20094c         jsr 0x4c09                  ; jump to new location saving return address
  |||||||   0x00008a6d      20064c         jsr 0x4c06                  ; jump to new location saving return address
  |||||||   0x00008a70      20064c         jsr 0x4c06                  ; jump to new location saving return address
  |||||||   0x00008a73      38             sec                         ; set carry flag
  |||||||   0x00008a74      6688           ror 0x88                    ; rotate one bit right (memory or accumulator)
  |||||||   0x00008a76      ad9010         lda 0x1090                  ; load accumulator with memory
  ========< 0x00008a79      f003           beq 0x4b2108                ; branch on result zero
  ========< 0x00008a7b      4c0a8b         jmp 0x8b0a                  ; jump to new location
  --------> 0x00008a7e      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008a81      d7e9           dcp 0xe9,x
  |||||||   0x00008a83      ecf4a0         cpx 0xa0f4                  ; compare memory and index x
  |||||||   0x00008a86      f4e8           nop 0xe8,x                  ; no operation
  |||||||   0x00008a88      eff5a0         isb 0xa0f5
  |||||||   0x00008a8b      f3e5           isb (0xe5),y
  |||||||   0x00008a8d      f48d           nop 0x8d,x                  ; no operation
  |||||||   0x00008a8f      e1a0           sbc (0xa0,x)                ; subtract memory from accumulator with borrow
  |||||||   0x00008a91      f7e1           isb 0xe1,x
  |||||||   0x00008a93      f4e3           nop 0xe3,x                  ; no operation
  |||||||   0x00008a95      e8             inx                         ; increment index x by one
  |||||||   0x00008a96      bfa000         lax 0x00a0,y
  --------> 0x00008a99      20154c         jsr 0x4c15                  ; jump to new location saving return address
  |||||||   0x00008a9c      c9d9           cmp #0xd9                   ; compare memory and accumulator
  ========< 0x00008a9e      f018           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008aa0      c9ce           cmp #0xce                   ; compare memory and accumulator
  ========< 0x00008aa2      d00a           bne 0x4b2108                ; branch on result not zero
  |||||||   0x00008aa4      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008aa7      ceef8d         dec 0x8def                  ; decrement memory by one
  |||||||   0x00008aaa      00             brk                         ; force break
  ========< 0x00008aab      4c0a8b         jmp 0x8b0a                  ; jump to new location
  --------> 0x00008aae      c985           cmp #0x85                   ; compare memory and accumulator
  ========< 0x00008ab0      d0e7           bne 0x4b2108                ; branch on result not zero
  --------> 0x00008ab2      20064c         jsr 0x4c06                  ; jump to new location saving return address
  ========< 0x00008ab5      4cc882         jmp 0x82c8                  ; jump to new location
  --------> 0x00008ab8      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008abb      d9e5f3         cmp 0xf3e5,y                ; compare memory and accumulator
  |||||||   0x00008abe      8d8d00         sta 0x008d                  ; store accumulator in memory
  |||||||   0x00008ac1      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008ac4      d7e8           dcp 0xe8,x
  |||||||   0x00008ac6      efa0f7         isb 0xf7a0
  |||||||   0x00008ac9      e9ec           sbc #0xec                   ; subtract memory from accumulator with borrow
  |||||||   0x00008acb      ec8df3         cpx 0xf38d                  ; compare memory and index x
  |||||||   0x00008ace      f4e1           nop 0xe1,x                  ; no operation
  |||||||   0x00008ad0      eee4a0         inc 0xa0e4                  ; increment memory by one
  |||||||   0x00008ad3      e7f5           isb 0xf5
  |||||||   0x00008ad5      e1f2           sbc (0xf2,x)                ; subtract memory from accumulator with borrow
  |||||||   0x00008ad7      e4bf           cpx 0xbf                    ; compare memory and index x
  |||||||   0x00008ad9      a000           ldy #0x00                   ; load index y with memory
  |||||||   0x00008adb      207b4c         jsr 0x4c7b                  ; jump to new location saving return address
  |||||||   0x00008ade      20064c         jsr 0x4c06                  ; jump to new location saving return address
  |||||||   0x00008ae1      a57b           lda 0x7b                    ; load accumulator with memory
  |||||||   0x00008ae3      8588           sta 0x88                    ; store accumulator in memory
  ========< 0x00008ae5      3012           bmi 0x4b2108                ; branch on result minus
  |||||||   0x00008ae7      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x00008ae8      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x00008ae9      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x00008aea      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x00008aeb      a8             tay                         ; transfer accumulator to index y
  |||||||   0x00008aec      b98310         lda 0x1083,y                ; load accumulator with memory
  |||||||   0x00008aef      c9d3           cmp #0xd3                   ; compare memory and accumulator
  ========< 0x00008af1      f004           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008af3      c9c4           cmp #0xc4                   ; compare memory and accumulator
  ========< 0x00008af5      d013           bne 0x4b2108                ; branch on result not zero
  --------> 0x00008af7      6688           ror 0x88                    ; rotate one bit right (memory or accumulator)
  --------> 0x00008af9      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008afc      ceefee
  |||||||   0x00008aff      e5a0
  ========< 0x00008b01      f0ef
  |||||||   0x00008b03      f3f4
  |||||||   0x00008b05      e5e4
  |||||||   0x00008b07      a18d
  |||||||   0x00008b09      00
  --------> 0x00008b0a      20108b         jsr 0x8b10                  ; jump to new location saving return address
  ========< 0x00008b0d      4c06a7         jmp 0xa706                  ; jump to new location
  |||||||   0x00008b10      20f890         jsr 0x90f8                  ; jump to new location saving return address
  |||||||   0x00008b13      206491         jsr 0x9164                  ; jump to new location saving return address
  |||||||   0x00008b16      a200           ldx #0x00                   ; load index x with memory
  |||||||   0x00008b18      20406c         jsr 0x6c40                  ; jump to new location saving return address
  |||||||   0x00008b1b      a200           ldx #0x00                   ; load index x with memory
  |||||||   0x00008b1d      20246c         jsr 0x6c24                  ; load
  |||||||   0x00008b20      442a00                                     ; D*
  |||||||   0x00008b23      60             rts                         ; return from subroutine
  |||||||   0x00008b24      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008b27      c9e7           cmp #0xe7                   ; compare memory and accumulator
  |||||||   0x00008b29      eee9f4         inc 0xf4e9                  ; increment memory by one
  |||||||   0x00008b2c      e5a0           sbc 0xa0                    ; subtract memory from accumulator with borrow
  |||||||   0x00008b2e      d4ef           nop 0xef,x                  ; no operation
  |||||||   0x00008b30      f2             hlt
  |||||||   0x00008b31      e3e8           isb (0xe8,x)
  |||||||   0x00008b33      8d00ad         sta 0xad00                  ; store accumulator in memory
  |||||||   0x00008b36      8611           stx 0x11                    ; store index x in memory
  ========< 0x00008b38      f020           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008b3a      20274c         jsr 0x4c27                  ; jump to new location saving return address
  |||||||   0x00008b3d      290f           and #0x0f                   ; "and" memory with accumulator
  |||||||   0x00008b3f      6970           adc #0x70                   ; add memory to accumulator with carry
  |||||||   0x00008b41      18             clc                         ; clear carry flag
  |||||||   0x00008b42      6510           adc 0x10                    ; add memory to accumulator with carry
  ========< 0x00008b44      9002           bcc 0x4b2108                ; branch on carry clear
  |||||||   0x00008b46      a9ff           lda #0xff                   ; load accumulator with memory
  --------> 0x00008b48      8510           sta 0x10                    ; store accumulator in memory
  |||||||   0x00008b4a      ad8611         lda 0x1186                  ; load accumulator with memory
  ========< 0x00008b4d      f00b           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008b4f      f8             sed                         ; set decimal mode
  |||||||   0x00008b50      38             sec                         ; set carry flag
  |||||||   0x00008b51      e901           sbc #0x01                   ; subtract memory from accumulator with borrow
  |||||||   0x00008b53      8d8611         sta 0x1186                  ; store accumulator in memory
  |||||||   0x00008b56      d8             cld                         ; clear decimal mode
  ========< 0x00008b57      4ccb85         jmp 0x85cb                  ; jump to new location
  --------> 0x00008b5a      d8             cld                         ; clear decimal mode
  |||||||   0x00008b5b      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008b5e      ceefee         dec 0xeeef                  ; decrement memory by one
  |||||||   0x00008b61      e5a0           sbc 0xa0                    ; subtract memory from accumulator with borrow
  |||||||   0x00008b63      ece5e6         cpx 0xe6e5                  ; compare memory and index x
  |||||||   0x00008b66      f48d           nop 0x8d,x                  ; no operation
  |||||||   0x00008b68      00             brk                         ; force break
  |||||||   0x00008b69      4ccb85         jmp 0x85cb                  ; jump to new location
  |||||||   0x00008b6c      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008b6f      ca             dex                         ; decrement index x by one
  |||||||   0x00008b70      e9ed           sbc #0xed                   ; subtract memory from accumulator with borrow
  |||||||   0x00008b72      edf9ad         sbc 0xadf9                  ; subtract memory from accumulator with borrow
  |||||||   0x00008b75      00             brk                         ; force break
  |||||||   0x00008b76      a200           ldx #0x00                   ; load index x with memory
  |||||||   0x00008b78      20246c         jsr 0x6c24                  ; load
  |||||||   0x00008b7b      434d2a00                                   ; CM* (cmd.dng)
  |||||||   0x00008b7f      200ca7         jsr 0xa70c                  ; jump to new location saving return address
  ========< 0x00008b82      4ce289         jmp 0x89e2                  ; jump to new location
  |||||||   0x00008b85      a900           lda #0x00                   ; load accumulator with memory
  |||||||   0x00008b87      8dfd8c         sta 0x8cfd                  ; store accumulator in memory
  |||||||   0x00008b8a      a52d           lda 0x2d                    ; load accumulator with memory
  |||||||   0x00008b8c      85a9           sta 0xa9                    ; store accumulator in memory
  |||||||   0x00008b8e      a52e           lda 0x2e                    ; load accumulator with memory
  |||||||   0x00008b90      85aa           sta 0xaa                    ; store accumulator in memory
  |||||||   0x00008b92      209e91         jsr 0x919e                  ; jump to new location saving return address
  |||||||   0x00008b95      29f0           and #0xf0                   ; "and" memory with accumulator
  |||||||   0x00008b97      c910           cmp #0x10                   ; compare memory and accumulator
  ========< 0x00008b99      d003           bne 0x4b2108                ; branch on result not zero
  ========< 0x00008b9b      4c088c         jmp 0x8c08                  ; jump to new location
  --------> 0x00008b9e      c920           cmp #0x20                   ; compare memory and accumulator
  ========< 0x00008ba0      d003           bne 0x4b2108                ; branch on result not zero
  ========< 0x00008ba2      4c788c         jmp 0x8c78                  ; jump to new location
  --------> 0x00008ba5      c960           cmp #0x60                   ; compare memory and accumulator
  ========< 0x00008ba7      d003           bne 0x4b2108                ; branch on result not zero
  ========< 0x00008ba9      4c788c         jmp 0x8c78                  ; jump to new location
  --------> 0x00008bac      c930           cmp #0x30                   ; compare memory and accumulator
  ========< 0x00008bae      d003           bne 0x4b2108                ; branch on result not zero
  ========< 0x00008bb0      4cd08b         jmp 0x8bd0                  ; jump to new location
  --------> 0x00008bb3      20ba91         jsr 0x91ba                  ; jump to new location saving return address
  |||||||   0x00008bb6      2908           and #0x08                   ; "and" memory with accumulator
  ========< 0x00008bb8      f003           beq 0x4b2108                ; branch on result zero
  ========< 0x00008bba      4c088c         jmp 0x8c08                  ; jump to new location
  --------> 0x00008bbd      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008bc0      cbec           sbx 0xec
  |||||||   0x00008bc2      e9ed           sbc #0xed                   ; subtract memory from accumulator with borrow
  |||||||   0x00008bc4      e2ad           nop #0xad                   ; no operation
  |||||||   0x00008bc6      f7e8           isb 0xe8,x
  |||||||   0x00008bc8      e1f4           sbc (0xf4,x)                ; subtract memory from accumulator with borrow
  |||||||   0x00008bca      bf8d00         lax 0x008d,y
  |||||||   0x00008bcd      4cc882         jmp 0x82c8                  ; jump to new location
  --------> 0x00008bd0      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008bd3      cbec           sbx 0xec
  |||||||   0x00008bd5      e9ed           sbc #0xed                   ; subtract memory from accumulator with borrow
  |||||||   0x00008bd7      e2ad           nop #0xad                   ; no operation
  |||||||   0x00008bd9      d5af           cmp 0xaf,x                  ; compare memory and accumulator
  |||||||   0x00008bdb      c4ad           cpy 0xad                    ; compare memory and index y
  |||||||   0x00008bdd      00             brk                         ; force break
  --------> 0x00008bde      20154c         jsr 0x4c15                  ; jump to new location saving return address
  |||||||   0x00008be1      c9c0           cmp #0xc0                   ; compare memory and accumulator
  ========< 0x00008be3      f02d           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008be5      c9d5           cmp #0xd5                   ; compare memory and accumulator
  ========< 0x00008be7      f029           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008be9      c9af           cmp #0xaf                   ; compare memory and accumulator
  ========< 0x00008beb      f018           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008bed      c9c4           cmp #0xc4                   ; compare memory and accumulator
  ========< 0x00008bef      f014           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008bf1      c9a0           cmp #0xa0                   ; compare memory and accumulator
  ========< 0x00008bf3      f003           beq 0x4b2108                ; branch on result zero
  ========< 0x00008bf5      4cde8b         jmp 0x8bde                  ; jump to new location
  --------> 0x00008bf8      20004c         jsr 0x4c00                  ; jump to new location saving return address
  ========< 0x00008bfb      d0e1           bne 0x4b2108                ; branch on result not zero
  |||||||   0x00008bfd      f3f3           isb (0xf3),y
  |||||||   0x00008bff      8d8d00         sta 0x008d                  ; store accumulator in memory
  ========< 0x00008c02      4cc882         jmp 0x82c8                  ; jump to new location
  ========< 0x00008c05      4c8c8c         jmp 0x8c8c                  ; jump to new location
  --------> 0x00008c08      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008c0b      cbec           sbx 0xec
  |||||||   0x00008c0d      e9ed           sbc #0xed                   ; subtract memory from accumulator with borrow
  |||||||   0x00008c0f      e2ad           nop #0xad                   ; no operation
  |||||||   0x00008c11      00             brk                         ; force break
  --------> 0x00008c12      20359b         jsr 0x9b35                  ; jump to new location saving return address
  |||||||   0x00008c15      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008c18      d5f0           cmp 0xf0,x                  ; compare memory and accumulator
  |||||||   0x00008c1a      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x00008c1c      00             brk                         ; force break
  |||||||   0x00008c1d      adfd8c         lda 0x8cfd                  ; load accumulator with memory
  ========< 0x00008c20      d024           bne 0x4b2108                ; branch on result not zero
  |||||||   0x00008c22      209e91         jsr 0x919e                  ; jump to new location saving return address
  |||||||   0x00008c25      29f0           and #0xf0                   ; "and" memory with accumulator
  |||||||   0x00008c27      c910           cmp #0x10                   ; compare memory and accumulator
  ========< 0x00008c29      f01b           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008c2b      c930           cmp #0x30                   ; compare memory and accumulator
  ========< 0x00008c2d      f017           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008c2f      ad8711         lda 0x1187                  ; load accumulator with memory
  ========< 0x00008c32      d012           bne 0x4b2108                ; branch on result not zero
  |||||||   0x00008c34      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008c37      d7e9           dcp 0xe9,x
  |||||||   0x00008c39      f4e8           nop 0xe8,x                  ; no operation
  |||||||   0x00008c3b      a0f7           ldy #0xf7                   ; load index y with memory
  |||||||   0x00008c3d      e8             inx                         ; increment index x by one
  |||||||   0x00008c3e      e1f4           sbc (0xf4,x)                ; subtract memory from accumulator with borrow
  |||||||   0x00008c40      bf8d00         lax 0x008d,y
  |||||||   0x00008c43      4cc882         jmp 0x82c8                  ; jump to new location
  --------> 0x00008c46      a609           ldx 0x09                    ; load index x with memory
  ========< 0x00008c48      f01d           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008c4a      ca             dex                         ; decrement index x by one
  |||||||   0x00008c4b      8efe8c         stx 0x8cfe                  ; store index x in memory
  |||||||   0x00008c4e      20a193         jsr 0x93a1                  ; jump to new location saving return address
  ========< 0x00008c51      9014           bcc 0x4b2108                ; branch on carry clear
  |||||||   0x00008c53      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008c56      c6e1           dec 0xe1                    ; decrement memory by one
  |||||||   0x00008c58      e9ec           sbc #0xec                   ; subtract memory from accumulator with borrow
  |||||||   0x00008c5a      e5e4           sbc 0xe4                    ; subtract memory from accumulator with borrow
  |||||||   0x00008c5c      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x00008c5e      00             brk                         ; force break
  |||||||   0x00008c5f      a90f           lda #0x0f                   ; load accumulator with memory
  |||||||   0x00008c61      204b4c         jsr 0x4c4b                  ; jump to new location saving return address
  ========< 0x00008c64      4ccb85         jmp 0x85cb                  ; jump to new location
  --------> 0x00008c67      a609           ldx 0x09                    ; load index x with memory
  ========< 0x00008c69      f055           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008c6b      20f890         jsr 0x90f8                  ; jump to new location saving return address
  |||||||   0x00008c6e      a609           ldx 0x09                    ; load index x with memory
  |||||||   0x00008c70      ca             dex                         ; decrement index x by one
  |||||||   0x00008c71      8609           stx 0x09                    ; store index x in memory
  |||||||   0x00008c73      a904           lda #0x04                   ; load accumulator with memory
  ========< 0x00008c75      4ccc8c         jmp 0x8ccc                  ; jump to new location
  --------> 0x00008c78      20ba91         jsr 0x91ba                  ; jump to new location saving return address
  |||||||   0x00008c7b      2908           and #0x08                   ; "and" memory with accumulator
  ========< 0x00008c7d      f003           beq 0x4b2108                ; branch on result zero
  ========< 0x00008c7f      4cd08b         jmp 0x8bd0                  ; jump to new location
  --------> 0x00008c82      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008c85      cbec           sbx 0xec
  |||||||   0x00008c87      e9ed           sbc #0xed                   ; subtract memory from accumulator with borrow
  |||||||   0x00008c89      e2ad           nop #0xad                   ; no operation
  |||||||   0x00008c8b      00             brk                         ; force break
  --------> 0x00008c8c      20359b         jsr 0x9b35                  ; jump to new location saving return address
  |||||||   0x00008c8f      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008c92      c4ef           cpy 0xef                    ; compare memory and index y
  |||||||   0x00008c94      f7ee           isb 0xee,x
  |||||||   0x00008c96      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x00008c98      00             brk                         ; force break
  --------> 0x00008c99      a609           ldx 0x09                    ; load index x with memory
  |||||||   0x00008c9b      e007           cpx #0x07                   ; compare memory and index x
  ========< 0x00008c9d      b01d           bcs 0x4b2108                ; branch on carry set
  |||||||   0x00008c9f      e8             inx                         ; increment index x by one
  |||||||   0x00008ca0      8efe8c         stx 0x8cfe                  ; store index x in memory
  |||||||   0x00008ca3      20a193         jsr 0x93a1                  ; jump to new location saving return address
  ========< 0x00008ca6      9014           bcc 0x4b2108                ; branch on carry clear
  |||||||   0x00008ca8      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008cab      c6e1           dec 0xe1                    ; decrement memory by one
  |||||||   0x00008cad      e9ec           sbc #0xec                   ; subtract memory from accumulator with borrow
  |||||||   0x00008caf      e5e4           sbc 0xe4                    ; subtract memory from accumulator with borrow
  |||||||   0x00008cb1      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x00008cb3      00             brk                         ; force break
  |||||||   0x00008cb4      a90f           lda #0x0f                   ; load accumulator with memory
  |||||||   0x00008cb6      204b4c         jsr 0x4c4b                  ; jump to new location saving return address
  ========< 0x00008cb9      4ccb85         jmp 0x85cb                  ; jump to new location
  --------> 0x00008cbc      a609           ldx 0x09                    ; load index x with memory
  |||||||   0x00008cbe      e007           cpx #0x07                   ; compare memory and index x
  ========< 0x00008cc0      f016           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008cc2      20f890         jsr 0x90f8                  ; jump to new location saving return address
  |||||||   0x00008cc5      a609           ldx 0x09                    ; load index x with memory
  |||||||   0x00008cc7      e8             inx                         ; increment index x by one
  |||||||   0x00008cc8      8609           stx 0x09                    ; store index x in memory
  |||||||   0x00008cca      a905           lda #0x05                   ; load accumulator with memory
  --------> 0x00008ccc      8d4580         sta 0x8045                  ; store accumulator in memory
  |||||||   0x00008ccf      20a190         jsr 0x90a1                  ; jump to new location saving return address
  |||||||   0x00008cd2      203592         jsr 0x9235                  ; jump to new location saving return address
  ========< 0x00008cd5      4ccb85         jmp 0x85cb                  ; jump to new location
  ========< 0x00008cd8      4c2c88         jmp 0x882c                  ; jump to new location
  --------> 0x00008cdb      a9ff           lda #0xff                   ; load accumulator with memory
  |||||||   0x00008cdd      8dfd8c         sta 0x8cfd                  ; store accumulator in memory
  ========< 0x00008ce0      4c128c         jmp 0x8c12                  ; jump to new location
  --------> 0x00008ce3      a9ff           lda #0xff                   ; load accumulator with memory
  |||||||   0x00008ce5      8dfd8c         sta 0x8cfd                  ; store accumulator in memory
  ========< 0x00008ce8      4c8c8c         jmp 0x8c8c                  ; jump to new location
  --------> 0x00008ceb      20359b         jsr 0x9b35                  ; jump to new location saving return address
  |||||||   0x00008cee      209e92         jsr 0x929e                  ; jump to new location saving return address
  ========< 0x00008cf1      4c998c         jmp 0x8c99                  ; jump to new location
  --------> 0x00008cf4      20359b         jsr 0x9b35                  ; jump to new location saving return address
  |||||||   0x00008cf7      209e92         jsr 0x929e                  ; jump to new location saving return address
  ========< 0x00008cfa      4c468c         jmp 0x8c46                  ; jump to new location
  |||||||   0x00008cfd      00             brk                         ; force break
  |||||||   0x00008cfe      00             brk                         ; force break
  |||||||   0x00008cff      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008d02      ccefef         cpy 0xefef                  ; compare memory and index y
  |||||||   0x00008d05      ebae           sbc #0xae                   ; subtract memory from accumulator with borrow
  |||||||   0x00008d07      aeae8d         ldx 0x8dae                  ; load index x with memory
  |||||||   0x00008d0a      00             brk                         ; force break
  |||||||   0x00008d0b      a200           ldx #0x00                   ; load index x with memory
  |||||||   0x00008d0d      20246c         jsr 0x6c24                  ; jump to new location saving return address
  |||||||   0x00008d10      434d2a00                                   ; CM* (cmd.dng)
  |||||||   0x00008d14      2006a7         jsr 0xa706                  ; jump to new location saving return address
  ========< 0x00008d17      4ce289         jmp 0x89e2                  ; jump to new location
  |||||||   0x00008d1a      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008d1d      cde9f8         cmp 0xf8e9                  ; compare memory and accumulator
  |||||||   0x00008d20      a0f2           ldy #0xf2                   ; load index y with memory
  |||||||   0x00008d22      e5e1           sbc 0xe1                    ; subtract memory from accumulator with borrow
  |||||||   0x00008d24      e7e5           isb 0xe5
  |||||||   0x00008d26      eef4f3         inc 0xf3f4                  ; increment memory by one
  |||||||   0x00008d29      8d00a9         sta 0xa900                  ; store accumulator in memory
  |||||||   0x00008d2c      4d20e8         eor 0xe820                  ; "exclusive-or" memory with accumulator
  |||||||   0x00008d2f      8f2000         sax 0x0020
  |||||||   0x00008d32      a720           lax 0x20
  |||||||   0x00008d34      359b           and 0x9b,x                  ; "and" memory with accumulator
  ========< 0x00008d36      4cc882         jmp 0x82c8                  ; jump to new location
  |||||||   0x00008d39      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008d3c      cee5f7         dec 0xf7e5                  ; decrement memory by one
  |||||||   0x00008d3f      a0ef           ldy #0xef                   ; load index y with memory
  |||||||   0x00008d41      f2             hlt
  |||||||   0x00008d42      e4e5           cpx 0xe5                    ; compare memory and index x
  |||||||   0x00008d44      f2             hlt
  |||||||   0x00008d45      8d00a9         sta 0xa900                  ; store accumulator in memory
  |||||||   0x00008d48      4d20e8         eor 0xe820                  ; "exclusive-or" memory with accumulator
  |||||||   0x00008d4b      8f2003         sax 0x0320
  |||||||   0x00008d4e      a74c           lax 0x4c
  |||||||   0x00008d50      338d           rla (0x8d),y
  |||||||   0x00008d52      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008d55      cff0e5         dcp 0xe5f0
  |||||||   0x00008d58      eead00         inc 0x00ad                  ; increment memory by one
  --------> 0x00008d5b      a200           ldx #0x00                   ; load index x with memory
  |||||||   0x00008d5d      20246c         jsr 0x6c24                  ; load
  |||||||   0x00008d60      434d2a00                                   ; CM* (cmd.dng)
  ========< 0x00008d64      b0f5           bcs 0x4b2108                ; branch on carry set
  --------> 0x00008d66      2009a7         jsr 0xa709                  ; jump to new location saving return address
  ========< 0x00008d69      4ce289         jmp 0x89e2                  ; jump to new location
  |||||||   0x00008d6c      20004c         jsr 0x4c00                  ; jump to new location saving return address
  ========< 0x00008d6f      d0f5           bne 0x4b2108                ; branch on result not zero
  |||||||   0x00008d71      f3e8           isb (0xe8),y
  |||||||   0x00008d73      8dceef         sta 0xefce                  ; store accumulator in memory
  |||||||   0x00008d76      f4a0           nop 0xa0,x                  ; no operation
  |||||||   0x00008d78      e8             inx                         ; increment index x by one
  |||||||   0x00008d79      e5f2           sbc 0xf2                    ; subtract memory from accumulator with borrow
  |||||||   0x00008d7b      e5a1           sbc 0xa1                    ; subtract memory from accumulator with borrow
  |||||||   0x00008d7d      8d004c         sta 0x4c00                  ; store accumulator in memory
  |||||||   0x00008d80      c8             iny                         ; increment index y by one
  |||||||   0x00008d81      8220           nop #0x20                   ; no operation
  |||||||   0x00008d83      00             brk                         ; force break
  |||||||   0x00008d84      4cd1f5         jmp 0xf5d1                  ; jump to new location
  |||||||   0x00008d87      e9f4           sbc #0xf4                   ; subtract memory from accumulator with borrow
  |||||||   0x00008d89      ba             tsx                         ; transfer stack pointer to index x
  |||||||   0x00008d8a      8d0020         sta 0x2000                  ; store accumulator in memory
  |||||||   0x00008d8d      00             brk                         ; force break
  ========< 0x00008d8e      4cd3e1         jmp 0xe1d3                  ; jump to new location
  |||||||   0x00008d91      f6e5           inc 0xe5,x                  ; increment memory by one
  |||||||   0x00008d93      a0e7           ldy #0xe7                   ; load index y with memory
  |||||||   0x00008d95      e1ed           sbc (0xed,x)                ; subtract memory from accumulator with borrow
  |||||||   0x00008d97      e5bf           sbc 0xbf                    ; subtract memory from accumulator with borrow
  |||||||   0x00008d99      a000           ldy #0x00                   ; load index y with memory
  --------> 0x00008d9b      20154c         jsr 0x4c15                  ; jump to new location saving return address
  |||||||   0x00008d9e      c9d9           cmp #0xd9                   ; compare memory and accumulator
  ========< 0x00008da0      f00e           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008da2      c9ce           cmp #0xce                   ; compare memory and accumulator
  ========< 0x00008da4      d0f5           bne 0x4b2108                ; branch on result not zero
  |||||||   0x00008da6      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008da9      ceef8d         dec 0x8def                  ; decrement memory by one
  |||||||   0x00008dac      00             brk                         ; force break
  ========< 0x00008dad      4cc882         jmp 0x82c8                  ; jump to new location
  --------> 0x00008db0      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008db3      d9e5f3
  |||||||   0x00008db6      8d00
                            20f890         jsr 0x90f8
  20           bcc 0x4b2108                ; branch on carry clear
  |||||||   0x00008dbc      6491           nop 0x91                    ; no operation

  |||||||   0x00008dbe      adf143         lda 0x43f1                  ; load accumulator with memory
  |||||||   0x00008dc1      8dfa13         sta 0x13fa                  ; store accumulator in memory
  |||||||   0x00008dc4      adf243         lda 0x43f2                  ; load accumulator with memory
  |||||||   0x00008dc7      8dfb13         sta 0x13fb                  ; store accumulator in memory
  |||||||   0x00008dca      adf043         lda 0x43f0                  ; load accumulator with memory
  |||||||   0x00008dcd      8df913         sta 0x13f9                  ; store accumulator in memory
  |||||||   0x00008dd0      209e92         jsr 0x929e                  ; jump to new location saving return address
  |||||||   0x00008dd3      204b89         jsr 0x894b                  ; jump to new location saving return address
  |||||||   0x00008dd6      a902           lda #0x02                   ; load accumulator with memory
  |||||||   0x00008dd8      20096c         jsr 0x6c09                  ; jump to new location saving return address
  |||||||   0x00008ddb      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008dde      d3e1
  |||||||   0x00008de0      f6e9
  |||||||   0x00008de2      eee7ae
  |||||||   0x00008de5      aeae8d
  |||||||   0x00008de8      00
  |||||||   0x00008de9      a22f           ldx #0x2f                   ; load index x with memory
  --------> 0x00008deb      b502           lda 0x02,x                  ; load accumulator with memory
  |||||||   0x00008ded      9d00bc         sta 0xbc00,x                ; store accumulator in memory
  |||||||   0x00008df0      ca             dex                         ; decrement index x by one
  ========< 0x00008df1      10f8           bpl 0x4b2108                ; branch on result plus
  |||||||   0x00008df3      202d6c         jsr 0x6c2d                  ; jump to new location saving return address
  |||||||   0x00008df6      533a           sre (0x3a),y
  ========< 0x00008df8      5052           bvc 0x4b2108                ; branch on overflow clear
  |||||||   0x00008dfa      5459           nop 0x59,x                  ; no operation
  |||||||   0x00008dfc      2e4441         rol 0x4144                  ; rotate one bit left (memory or accumulator)
  |||||||   0x00008dff      5441           nop 0x41,x                  ; no operation
  |||||||   0x00008e01      00             brk                         ; force break
  |||||||   0x00008e02      00             brk                         ; force break
  |||||||   0x00008e03      bc3000         ldy 0x0030,x                ; load index y with memory
  |||||||   0x00008e06      202d6c         jsr 0x6c2d                  ; jump to new location saving return address
  |||||||   0x00008e09      533a           sre (0x3a),y
  ========< 0x00008e0b      4c4953         jmp 0x5349                  ; jump to new location
  |||||||   0x00008e0e      5400           nop 0x00,x                  ; no operation
  |||||||   0x00008e10      00             brk                         ; force break
  |||||||   0x00008e11      4a             lsr a                       ; shift right one bit (memory or accumulator)
  |||||||   0x00008e12      00             brk                         ; force break
  |||||||   0x00008e13      02             hlt
  |||||||   0x00008e14      a200           ldx #0x00                   ; load index x with memory
  |||||||   0x00008e16      20246c         jsr 0x6c24                  ; jump to new location saving return address
  |||||||   0x00008e19      544c2a00                                   ; TL*
  ||||||    0x00008e1d      202d6c         jsr 0x6c2d                  ; jump to new location saving return address
  ||||||    0x00008e20      533a           sre (0x3a),y
  ||||||    0x00008e22      534c           sre (0x4c),y
   |||||    0x00008e24      4953           eor #0x53                   ; "exclusive-or" memory with accumulator
   |||||    0x00008e26      5400           nop 0x00,x                  ; no operation
   |||||    0x00008e28      00             brk                         ; force break
   |||||    0x00008e29      4a             lsr a                       ; shift right one bit (memory or accumulator)
   |||||    0x00008e2a      00             brk                         ; force break
   |||||    0x00008e2b      02             hlt
   |||||    0x00008e2c      a200           ldx #0x00                   ; load index x with memory
   |||||    0x00008e2e      20246c         jsr 0x6c24                  ; jump to new location saving return address
   ||`====< 0x00008e31      4c492a00                                   ; LI*
   || ||    0x00008e35      202d6c         jsr 0x6c2d                  ; jump to new location saving return address
   || ||    0x00008e38      533a           sre (0x3a),y
   || ||    0x00008e3a      52             hlt
   || ||    0x00008e3b      4f5354         sre 0x5453
   || ||    0x00008e3e      4552           eor 0x52                    ; "exclusive-or" memory with accumulator
   || ||    0x00008e40      00             brk                         ; force break
   || ||    0x00008e41      00             brk                         ; force break
   || ||,=< 0x00008e42      1000           bpl 0x4b2108                ; branch on result plus
   || ||`-> 0x00008e44      0420           nop 0x20                    ; no operation
   || ||    0x00008e46      00             brk                         ; force break
   || ||    0x00008e47      4cc4ef         jmp 0xefc4                  ; jump to new location
   || ||    0x00008e4a      eee5ae         inc 0xaee5                  ; increment memory by one
   || ||    0x00008e4d      8d00a9         sta 0xa900                  ; store accumulator in memory
   || ||    0x00008e50      0720           slo 0x20
   || ||    0x00008e52      096c           ora #0x6c                   ; "or" memory with accumulator
  ========< 0x00008e54      4cc882         jmp 0x82c8                  ; jump to new location
   || ||    0x00008e57      20004c         jsr 0x4c00                  ; jump to new location saving return address
   || ||    0x00008e5a      d2             hlt
   || ||    0x00008e5b      e5e1           sbc 0xe1                    ; subtract memory from accumulator with borrow
   || ||    0x00008e5d      e4f9           cpx 0xf9                    ; compare memory and index x
   || ||    0x00008e5f      aeaeae         ldx 0xaeae                  ; load index x with memory
   || ||    0x00008e62      8d00a9         sta 0xa900                  ; store accumulator in memory
   || ||    0x00008e65      52             hlt
  ========< 0x00008e66      4c2d8d         jmp 0x8d2d                  ; jump to new location
   || ||    0x00008e69      20004c         jsr 0x4c00                  ; jump to new location saving return address
   || ||    0x00008e6c      d3e5           dcp (0xe5),y
   || ||    0x00008e6e      e1f2           sbc (0xf2,x)                ; subtract memory from accumulator with borrow
   || ||    0x00008e70      e3e8           isb (0xe8,x)
   || ||    0x00008e72      aeaeae         ldx 0xaeae                  ; load index x with memory
   || ||    0x00008e75      8d00a2         sta 0xa200                  ; store accumulator in memory
   || ||    0x00008e78      00             brk                         ; force break
   || ||    0x00008e79      20246c         jsr 0x6c24                  ; load
   || ||    0x00008e7c      434d2a00                                   ; CM* (cmd.dng)
   || ||    0x00008e80      2003a7         jsr 0xa703                  ; jump to new location saving return address
  ========< 0x00008e83      4ce289         jmp 0x89e2                  ; jump to new location
   || ||    0x00008e86      20004c         jsr 0x4c00                  ; jump to new location saving return address
   || ||    0x00008e89      d4e1           nop 0xe1,x                  ; no operation
   || ||    0x00008e8b      ecebad         cpx 0xadeb                  ; compare memory and index x
   || |||   0x00008e8e      c6f5           dec 0xf5                    ; decrement memory by one
   || |||   0x00008e90      eeeef9         inc 0xf9ee                  ; increment memory by one
   || |||   0x00008e93      ac8dee         ldy 0xee8d                  ; load index y with memory
   || |||   0x00008e96      efa0f2         isb 0xf2a0
   || |||   0x00008e99      e5f3           sbc 0xf3                    ; subtract memory from accumulator with borrow
   || ||`=< 0x00008e9b      f0ef           beq 0x4b2108                ; branch on result zero
   || ||    0x00008e9d      eef3e5         inc 0xe5f3                  ; increment memory by one
   || ||    0x00008ea0      a18d           lda (0x8d,x)                ; load accumulator with memory
   || ||    0x00008ea2      00             brk                         ; force break
  ========< 0x00008ea3      4cc882         jmp 0x82c8                  ; jump to new location
   || ||    0x00008ea6      20004c         jsr 0x4c00                  ; jump to new location saving return address
   || ||    0x00008ea9      d5f3           cmp 0xf3,x                  ; compare memory and accumulator
   || ||    0x00008eab      e58d           sbc 0x8d                    ; subtract memory from accumulator with borrow
   || ||    0x00008ead      00             brk                         ; force break
   || ||    0x00008eae      a955           lda #0x55                   ; load accumulator with memory
  ========< 0x00008eb0      4c2d8d         jmp 0x8d2d                  ; jump to new location

   || ||    0x00008eb3      20004c         jsr 0x4c00                  ; jump to new location saving return address
   || ||    0x00008eb6      d6e9
   || ||    0x00008eb8      e5f7
   || ||    0x00008eba      a0c7
   || ||    0x00008ebc      e5ed
   || ||    0x00008ebe      8d00
   || ||    0x00008ec0      ad8511         lda 0x1185
   || ||,=< 0x00008ec3      f016           beq 0x4b2108                ; branch on result zero
   || |||   0x00008ec5      f8             sed                         ; set decimal mode
   || |||   0x00008ec6      ad8511         lda 0x1185                  ; load accumulator with memory
   || |||   0x00008ec9      38             sec                         ; set carry flag
   || |||   0x00008eca      e901           sbc #0x01                   ; subtract memory from accumulator with borrow
   || |||   0x00008ecc      8d8511         sta 0x1185                  ; store accumulator in memory
   || |||   0x00008ecf      d8             cld                         ; clear decimal mode
   || |||   0x00008ed0      a200           ldx #0x00                   ; load index x with memory
   || |||   0x00008ed2      20246c         jsr 0x6c24                  ; jump to new location saving return address
   || |||   0x00008ed5      472a00                                     ; G*
  ========< 0x00008ed8      4cdf89         jmp 0x89df                  ; jump to new location
   || ||`-> 0x00008edb      20004c         jsr 0x4c00                  ; jump to new location saving return address
   || ||    0x00008ede      d9eff5a0e8e1f6e5a0eeefeee5ae8d00           ; 'You have none.'
   || ||    0x00008eee      4ccb85         jmp 0x85cb
   || ||    0x00008ef1      20004c         jsr 0x4c00                  ; jump to new location saving return address
   || |||   0x00008ef4      d8             cld                         ; clear decimal mode
   || |||   0x00008ef5      ade9f4         lda 0xf4e9                  ; load accumulator with memory
   || |||   0x00008ef8      8dceef         sta 0xefce                  ; store accumulator in memory
   || |||   0x00008efb      f4a0           nop 0xa0,x                  ; no operation
   || |||   0x00008efd      e8             inx                         ; increment index x by one
   || |||   0x00008efe      e5f2           sbc 0xf2                    ; subtract memory from accumulator with borrow
   || |||   0x00008f00      e5a1           sbc 0xa1                    ; subtract memory from accumulator with borrow
   || |||   0x00008f02      8d00
   || |||   0x00008f04      4cc882         jmp 0x82c8
   || |||   0x00008f07      20004c         jsr 0x4c00
   || |||   0x00008f0a      d9e5ecec a0 f7e8e1f4bf8dba00                 ; 'Yell what?[enter]:'
   || |||   0x00008f17      a200           ldx #0x00                   ; load index x with memory
   || |||   0x00008f19      8eca8f         stx 0x8fca                  ; store index x in memory
  .--.----> 0x00008f1c      20154c         jsr 0x4c15                  ; jump to new location saving return address
  |||||||   0x00008f1f      c985           cmp #0x85                   ; compare memory and accumulator
  ========< 0x00008f21      f027           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008f23      c988           cmp #0x88                   ; compare memory and accumulator
  ========< 0x00008f25      f01b           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008f27      c90d           cmp #0x0d                   ; compare memory and accumulator
  ========< 0x00008f29      f025           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008f2b      aeca8f         ldx 0x8fca                  ; load index x with memory
  |||||||   0x00008f2e      e00f           cpx #0x0f                   ; compare memory and index x
  ========< 0x00008f30      b0ea           bcs 0x4b2108                ; branch on carry set
  |||||||   0x00008f32      c9a0           cmp #0xa0                   ; compare memory and accumulator
  ========< 0x00008f34      90e6           bcc 0x4b2108                ; branch on carry clear
  |||||||   0x00008f36      20034c         jsr 0x4c03                  ; jump to new location saving return address
  |||||||   0x00008f39      9db98f         sta 0x8fb9,x                ; store accumulator in memory
  |||||||   0x00008f3c      eeca8f         inc 0x8fca                  ; increment memory by one
  ========< 0x00008f3f      4c1c8f         jmp 0x8f1c                  ; jump to new location
  --------> 0x00008f42      c6c9           dec 0xc9                    ; decrement memory by one
  |||||||   0x00008f44      ceca8f         dec 0x8fca                  ; decrement memory by one
  `=======< 0x00008f47      4c1c8f         jmp 0x8f1c                  ; jump to new location
  --------> 0x00008f4a      20064c         jsr 0x4c06                  ; jump to new location saving return address
  ========< 0x00008f4d      4ccb85         jmp 0x85cb                  ; jump to new location
  --------> 0x00008f50      aeca8f         ldx 0x8fca                  ; load index x with memory
   ||||||   0x00008f53      e000           cpx #0x00                   ; compare memory and index x
   ||`====< 0x00008f55      f0c5           beq 0x4b2108                ; branch on result zero
   || |||   0x00008f57      e010           cpx #0x10                   ; compare memory and index x
   ||,====< 0x00008f59      b006           bcs 0x4b2108                ; branch on carry set
   ||||||   0x00008f5b      a900           lda #0x00                   ; load accumulator with memory
   ||||||   0x00008f5d      e8             inx                         ; increment index x by one
   ||||||   0x00008f5e      9db98f         sta 0x8fb9,x                ; store accumulator in memory
   ||`----> 0x00008f61      20064c         jsr 0x4c06                  ; jump to new location saving return address
   || |||   0x00008f64      a200           ldx #0x00                   ; load index x with memory
   ||.----> 0x00008f66      bdcb8f         lda 0x8fcb,x                ; load accumulator with memory
  ,=======< 0x00008f69      f01b           beq 0x4b2108                ; branch on result zero
  |||||||   0x00008f6b      ddb98f         cmp 0x8fb9,x                ; compare memory and accumulator
  ========< 0x00008f6e      d004           bne 0x4b2108                ; branch on result not zero
  |||||||   0x00008f70      e8             inx                         ; increment index x by one
  |||`====< 0x00008f71      4c668f         jmp 0x8f66                  ; jump to new location
  --------> 0x00008f74      20004c         jsr 0x4c00                  ; jump to new location saving return address
  ||| |||   0x00008f77      ceefa0         dec 0xa0ef                  ; decrement memory by one
  ||| |||   0x00008f7a      e5e6           sbc 0xe6                    ; subtract memory from accumulator with borrow
  ||| |||   0x00008f7c      e6e5           inc 0xe5                    ; increment memory by one
  ||| |||   0x00008f7e      e3f4           isb (0xf4,x)
  ||| |||   0x00008f80      a18d           lda (0x8d,x)                ; load accumulator with memory
  ||| |||   0x00008f82      00             brk                         ; force break
  ========< 0x00008f83      4ccb85         jmp 0x85cb                  ; jump to new location
  `-------> 0x00008f86      a200           ldx #0x00                   ; load index x with memory
   || |||   0x00008f88      a08f           ldy #0x8f                   ; load index y with memory
   ||.----> 0x00008f8a      bd50a4         lda 0xa450,x                ; load accumulator with memory
   ||||||   0x00008f8d      48             pha                         ; push accumulator on stack
   ||||||   0x00008f8e      b950a4         lda 0xa450,y                ; load accumulator with memory
   ||||||   0x00008f91      9d50a4         sta 0xa450,x                ; store accumulator in memory
   ||||||   0x00008f94      68             pla                         ; pull accumulator from stack
   ||||||   0x00008f95      9950a4         sta 0xa450,y                ; store accumulator in memory
   ||||||   0x00008f98      bdc0a3         lda 0xa3c0,x                ; load accumulator with memory
   ||||||   0x00008f9b      48             pha                         ; push accumulator on stack
   ||||||   0x00008f9c      b9c0a3         lda 0xa3c0,y                ; load accumulator with memory
   ||||||   0x00008f9f      9dc0a3         sta 0xa3c0,x                ; store accumulator in memory
   ||||||   0x00008fa2      68             pla                         ; pull accumulator from stack
   ||||||   0x00008fa3      99c0a3         sta 0xa3c0,y                ; store accumulator in memory
   ||||||   0x00008fa6      88             dey                         ; decrement index y by one
   ||||||   0x00008fa7      e8             inx                         ; increment index x by one
   ||||||   0x00008fa8      e048           cpx #0x48                   ; compare memory and index x
   ||`====< 0x00008faa      90de           bcc 0x4b2108                ; branch on carry clear
   || |||   0x00008fac      20004c         jsr 0x4c00                  ; jump to new location saving return address
   || |||   0x00008faf      c4ef           cpy 0xef                    ; compare memory and index y
   || |||   0x00008fb1      eee5ae         inc 0xaee5                  ; increment memory by one
   || |||   0x00008fb4      8d004c         sta 0x4c00                  ; store accumulator in memory
   || |||   0x00008fb7      cb85           sbx 0x85
   || |||   0x00008fb9      00             brk                         ; force break
   || |||   0x00008fba      00             brk                         ; force break
   || |||   0x00008fbb      00             brk                         ; force break
   || |||   0x00008fbc      00             brk                         ; force break
   || |||   0x00008fbd      00             brk                         ; force break
   || |||   0x00008fbe      00             brk                         ; force break
   || |||   0x00008fbf      00             brk                         ; force break
   || |||   0x00008fc0      00             brk                         ; force break
   || |||   0x00008fc1      00             brk                         ; force break
   || |||   0x00008fc2      00             brk                         ; force break
   || |||   0x00008fc3      00             brk                         ; force break
   || |||   0x00008fc4      00             brk                         ; force break
   || |||   0x00008fc5      00             brk                         ; force break
   || |||   0x00008fc6      00             brk                         ; force break
   || |||   0x00008fc7      00             brk                         ; force break
   || |||   0x00008fc8      00             brk                         ; force break
   || |||   0x00008fc9      00             brk                         ; force break
   || |||   0x00008fca      00             brk                         ; force break
   || |||   0x00008fcb      c6cc           dec 0xcc                    ; decrement memory by one
   || |||   0x00008fcd      c9d0           cmp #0xd0                   ; compare memory and accumulator
   || |||   0x00008fcf      c6cc           dec 0xcc                    ; decrement memory by one
   || |||   0x00008fd1      cfd000         dcp 0x00d0
   ||`----> 0x00008fd4      20004c         jsr 0x4c00                  ; jump to new location saving return address
   || |||   0x00008fd7      da             nop                         ; no operation
   || |||   0x00008fd8      adf3f4         lda 0xf4f3                  ; load accumulator with memory
   || |||   0x00008fdb      e1f4           sbc (0xf4,x)                ; subtract memory from accumulator with borrow
   || |||   0x00008fdd      f3ae           isb (0xae),y
   || |||   0x00008fdf      aeae8d         ldx 0x8dae                  ; load index x with memory
   || |||   0x00008fe2      00             brk                         ; force break
   || |||   0x00008fe3      a95a           lda #0x5a                   ; load accumulator with memory
  ========< 0x00008fe5      4c2d8d         jmp 0x8d2d                  ; jump to new location
   || |||   0x00008fe8      8df78f         sta 0x8ff7                  ; store accumulator in memory
   || |||   0x00008feb      a6c8           ldx 0xc8                    ; load index x with memory
   ||,====< 0x00008fed      1003           bpl 0x4b2108                ; branch on result plus
  ========< 0x00008fef      4c0077         jmp 0x7700                  ; jump to new location
   ||`----> 0x00008ff2      a200           ldx #0x00                   ; load index x with memory
   || |||   0x00008ff4      20246c         jsr 0x6c24                  ; jump to new location saving return address
   || |||   0x00008ff7      4300                                       ; C
   || |||   0x00008ff9      60             rts                         ; return from subroutine
  --------> 0x00008ffa      8a             txa                         ; transfer index x to accumulator
   || |||   0x00008ffb      4902           eor #0x02                   ; "exclusive-or" memory with accumulator
   || |||   0x00008ffd      c50f           cmp 0x0f                    ; compare memory and accumulator
   ||,====< 0x00008fff      d011           bne 0x4b2108                ; branch on result not zero
   ||||||   0x00009001      20004c         jsr 0x4c00                  ; jump to new location saving return address
   ||||||   0x00009004      c1f4           cmp (0xf4,x)                ; compare memory and accumulator
   ||||||   0x00009006      f4e1           nop 0xe1,x                  ; no operation
   ||||||   0x00009008      e3eb           isb (0xeb,x)
   ||||||   0x0000900a      e5e4           sbc 0xe4                    ; subtract memory from accumulator with borrow
   ||||||   0x0000900c      a18d           lda (0x8d,x)                ; load accumulator with memory
   ||||||   0x0000900e      00             brk                         ; force break
  ,=======< 0x0000900f      4c7190         jmp 0x9071                  ; jump to new location
  |||`----> 0x00009012      48             pha                         ; push accumulator on stack
  ||| |||   0x00009013      20004c         jsr 0x4c00                  ; jump to new location saving return address
  ||| |||   0x00009016      c1f4           cmp (0xf4,x)                ; compare memory and accumulator
  ||| |||   0x00009018      f4e1           nop 0xe1,x                  ; no operation
  ||| |||   0x0000901a      e3eb           isb (0xeb,x)
  ||| |||   0x0000901c      e5e4           sbc 0xe4                    ; subtract memory from accumulator with borrow
  ||| |||   0x0000901e      a0e6           ldy #0xe6                   ; load index y with memory
  ||| |||   0x00009020      f2             hlt
  ||| |||   0x00009021      efed8d         isb 0x8ded
  ||| |||   0x00009024      f4e8           nop 0xe8,x                  ; no operation
  ||| |||   0x00009026      e5a0           sbc 0xa0                    ; subtract memory from accumulator with borrow
  ||| |||   0x00009028      00             brk                         ; force break
  ||| |||   0x00009029      68             pla                         ; pull accumulator from stack
  ||| |||   0x0000902a      48             pha                         ; push accumulator on stack
  |||,====< 0x0000902b      f015           beq 0x4b2108                ; branch on result zero
  |||||||   0x0000902d      c901           cmp #0x01                   ; compare memory and accumulator
  ========< 0x0000902f      f01f           beq 0x4b2108                ; branch on result zero
  |||||||   0x00009031      c902           cmp #0x02                   ; compare memory and accumulator
  ========< 0x00009033      f028           beq 0x4b2108                ; branch on result zero
  |||||||   0x00009035      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00009038      f7e5           isb 0xe5,x
  |||||||   0x0000903a      f3f4           isb (0xf4),y
  |||||||   0x0000903c      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x0000903e      00             brk                         ; force break
  ========< 0x0000903f      4c6890         jmp 0x9068                  ; jump to new location
  |||`----> 0x00009042      20004c         jsr 0x4c00                  ; jump to new location saving return address
  ||| |||   0x00009045      eeeff2         inc 0xf2ef                  ; increment memory by one
  ||| |||   0x00009048      f4e8           nop 0xe8,x                  ; no operation
  ||| |||   0x0000904a      a18d           lda (0x8d,x)                ; load accumulator with memory
  ||| |||   0x0000904c      00             brk                         ; force break
  |||,====< 0x0000904d      4c6890         jmp 0x9068                  ; jump to new location
  --------> 0x00009050      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00009053      e5e1           sbc 0xe1                    ; subtract memory from accumulator with borrow
  |||||||   0x00009055      f3f4           isb (0xf4),y
  |||||||   0x00009057      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x00009059      00             brk                         ; force break
  ========< 0x0000905a      4c6890         jmp 0x9068                  ; jump to new location
  --------> 0x0000905d      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00009060      f3ef           isb (0xef),y
  |||||||   0x00009062      f5f4           sbc 0xf4,x                  ; subtract memory from accumulator with borrow
  |||||||   0x00009064      e8             inx                         ; increment index x by one
  |||||||   0x00009065      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x00009067      00             brk                         ; force break
  ---`----> 0x00009068      203592         jsr 0x9235                  ; jump to new location saving return address
  ||| |||   0x0000906b      68             pla                         ; pull accumulator from stack
  ||| |||   0x0000906c      850f           sta 0x0f                    ; store accumulator in memory
  ||| |||   0x0000906e      203592         jsr 0x9235                  ; jump to new location saving return address
  `-------> 0x00009071      20f890         jsr 0x90f8                  ; jump to new location saving return address
   || |||   0x00009074      206491         jsr 0x9164                  ; jump to new location saving return address
   || |||   0x00009077      208990         jsr 0x9089                  ; jump to new location saving return address
   || |||   0x0000907a      a200           ldx #0x00                   ; load index x with memory
   || |||   0x0000907c      20246c         jsr 0x6c24                  ; jump to new location saving return address
   || |||   0x0000907f      444e472e502a00                             ; DNG.P*
  ,=======< 0x00009086      4c00a7         jmp 0xa700                  ; jump to new location
  |||||||   0x00009089      a200           ldx #0x00                   ; load index x with memory
  |||||||   0x0000908b      20406c         jsr 0x6c40                  ; jump to new location saving return address
  |||||||   0x0000908e      ade4a6         lda 0xa6e4                  ; load accumulator with memory
  ========< 0x00009091      f062           beq 0x4b2108                ; branch on result zero
  |||||||   0x00009093      a22a           ldx #0x2a                   ; load index x with memory
  --------> 0x00009095      20a84c         jsr 0x4ca8                  ; jump to new location saving return address
  |||||||   0x00009098      ca             dex                         ; decrement index x by one
  ========< 0x00009099      d0fa           bne 0x4b2108                ; branch on result not zero
  |||||||   0x0000909b      209e92         jsr 0x929e                  ; jump to new location saving return address
  |`======< 0x0000909e      4c4b89         jmp 0x894b                  ; jump to new location
  | |||||   0x000090a1      202d91         jsr 0x912d                  ; jump to new location saving return address
  | |||||   0x000090a4      ad1c80         lda 0x801c                  ; load accumulator with memory
  | |||||   0x000090a7      c901           cmp #0x01                   ; compare memory and accumulator
  |,======< 0x000090a9      f04a           beq 0x4b2108                ; branch on result zero
  |||||||   0x000090ab      a008           ldy #0x08                   ; load index y with memory
  --------> 0x000090ad      20274c         jsr 0x4c27                  ; jump to new location saving return address
  ||| |||   0x000090b0      293f           and #0x3f                   ; "and" memory with accumulator
  ||| |||   0x000090b2      aa             tax                         ; transfer accumulator to index x
  ||| |||   0x000090b3      bd0047         lda 0x4700,x                ; load accumulator with memory
  ||| |||   0x000090b6      29f0           and #0xf0                   ; "and" memory with accumulator
  ||| |||   0x000090b8      c951           cmp #0x51                   ; compare memory and accumulator
  |||,====< 0x000090ba      9017           bcc 0x4b2108                ; branch on carry clear
  |||||||   0x000090bc      c970           cmp #0x70                   ; compare memory and accumulator
  ========< 0x000090be      f013           beq 0x4b2108                ; branch on result zero
  --------> 0x000090c0      88             dey                         ; decrement index y by one
  ========< 0x000090c1      d0ea           bne 0x4b2108                ; branch on result not zero
  |||||||   0x000090c3      a9ff           lda #0xff                   ; load accumulator with memory
  |||||||   0x000090c5      8df143         sta 0x43f1                  ; store accumulator in memory
  |||||||   0x000090c8      8df343         sta 0x43f3                  ; store accumulator in memory
  |||||||   0x000090cb      8df243         sta 0x43f2                  ; store accumulator in memory
  |||||||   0x000090ce      8df443         sta 0x43f4                  ; store accumulator in memory
  ========< 0x000090d1      d022           bne 0x4b2108                ; branch on result not zero
  ---`----> 0x000090d3      8a             txa                         ; transfer index x to accumulator
  ||| |||   0x000090d4      2907           and #0x07                   ; "and" memory with accumulator
  ||| |||   0x000090d6      c52d           cmp 0x2d                    ; compare memory and accumulator
  ========< 0x000090d8      f0e6           beq 0x4b2108                ; branch on result zero
  ||| |||   0x000090da      8a             txa                         ; transfer index x to accumulator
  ||| |||   0x000090db      4a             lsr a                       ; shift right one bit (memory or accumulator)
  ||| |||   0x000090dc      4a             lsr a                       ; shift right one bit (memory or accumulator)
  ||| |||   0x000090dd      4a             lsr a                       ; shift right one bit (memory or accumulator)
  ||| |||   0x000090de      c52e           cmp 0x2e                    ; compare memory and accumulator
  ========< 0x000090e0      f0de           beq 0x4b2108                ; branch on result zero
  ||| |||   0x000090e2      8a             txa                         ; transfer index x to accumulator
  ||| |||   0x000090e3      2907           and #0x07                   ; "and" memory with accumulator
  ||| |||   0x000090e5      8df143         sta 0x43f1                  ; store accumulator in memory
  ||| |||   0x000090e8      8df343         sta 0x43f3                  ; store accumulator in memory
  ||| |||   0x000090eb      8a             txa                         ; transfer index x to accumulator
  ||| |||   0x000090ec      4a             lsr a                       ; shift right one bit (memory or accumulator)
  ||| |||   0x000090ed      4a             lsr a                       ; shift right one bit (memory or accumulator)
  ||| |||   0x000090ee      4a             lsr a                       ; shift right one bit (memory or accumulator)
  ||| |||   0x000090ef      8df243         sta 0x43f2                  ; store accumulator in memory
  ||| |||   0x000090f2      8df443         sta 0x43f4                  ; store accumulator in memory
  -`------> 0x000090f5      60             rts                         ; return from subroutine
  | | |||   0x000090f6      00             brk                         ; force break
  | | |||   0x000090f7      00             brk                         ; force break
  | | |||   0x000090f8      a509           lda 0x09                    ; load accumulator with memory
  | | |||   0x000090fa      2903           and #0x03                   ; "and" memory with accumulator
  | | |||   0x000090fc      209c93         jsr 0x939c                  ; jump to new location saving return address
  | | |||   0x000090ff      0a             asl a                       ; shift left one bit (memory or accumulator)
  | | |||   0x00009100      0a             asl a                       ; shift left one bit (memory or accumulator)
  | | |||   0x00009101      a8             tay                         ; transfer accumulator to index y
  | | |||   0x00009102      18             clc                         ; clear carry flag
  | | |||   0x00009103      6940           adc #0x40                   ; add memory to accumulator with carry
  | | |||   0x00009105      8d1c91         sta 0x911c                  ; store accumulator in memory
  | | |||   0x00009108      8d2991         sta 0x9129                  ; store accumulator in memory
  | | |||   0x0000910b      a200           ldx #0x00                   ; load index x with memory
  | | |||   0x0000910d      a509           lda 0x09                    ; load accumulator with memory
  | | |||   0x0000910f      c904           cmp #0x04                   ; compare memory and accumulator
  | |,====< 0x00009111      b00d           bcs 0x4b2108                ; branch on carry set
  |.------> 0x00009113      bd0047         lda 0x4700,x                ; load accumulator with memory
  |||||||   0x00009116      990044         sta 0x4400,y                ; store accumulator in memory
  |||||||   0x00009119      e8             inx                         ; increment index x by one
  |||||||   0x0000911a      c8             iny                         ; increment index y by one
  |||||||   0x0000911b      c0ff           cpy #0xff                   ; compare memory and index y
  |`======< 0x0000911d      d0f4           bne 0x4b2108                ; branch on result not zero
  | |||||   0x0000911f      60             rts                         ; return from subroutine
  |.-`----> 0x00009120      bd0047         lda 0x4700,x                ; load accumulator with memory
  ||| |||   0x00009123      990045         sta 0x4500,y                ; store accumulator in memory
  ||| |||   0x00009126      e8             inx                         ; increment index x by one
  ||| |||   0x00009127      c8             iny                         ; increment index y by one
  ||| |||   0x00009128      c0ff           cpy #0xff                   ; compare memory and index y
  |`======< 0x0000912a      d0f4           bne 0x4b2108                ; branch on result not zero
  | | |||   0x0000912c      60             rts                         ; return from subroutine
  | | |||   0x0000912d      a509           lda 0x09                    ; load accumulator with memory
  | | |||   0x0000912f      2903           and #0x03                   ; "and" memory with accumulator
  | | |||   0x00009131      209c93         jsr 0x939c                  ; jump to new location saving return address
  | | |||   0x00009134      0a             asl a                       ; shift left one bit (memory or accumulator)
  | | |||   0x00009135      0a             asl a                       ; shift left one bit (memory or accumulator)
  | | |||   0x00009136      a8             tay                         ; transfer accumulator to index y
  | | |||   0x00009137      18             clc                         ; clear carry flag
  | | |||   0x00009138      6940           adc #0x40                   ; add memory to accumulator with carry
  | | |||   0x0000913a      8d5191         sta 0x9151                  ; store accumulator in memory
  | | |||   0x0000913d      8d6091         sta 0x9160                  ; store accumulator in memory
  | | |||   0x00009140      a200           ldx #0x00                   ; load index x with memory
  | | |||   0x00009142      a509           lda 0x09                    ; load accumulator with memory
  | | |||   0x00009144      c904           cmp #0x04                   ; compare memory and accumulator
  | |,====< 0x00009146      b00f           bcs 0x4b2108                ; branch on carry set
  |.------> 0x00009148      b90044         lda 0x4400,y                ; load accumulator with memory
  |||||||   0x0000914b      9d0047         sta 0x4700,x                ; store accumulator in memory
  |||||||   0x0000914e      e8             inx                         ; increment index x by one
  |||||||   0x0000914f      c8             iny                         ; increment index y by one
  |||||||   0x00009150      c0ff           cpy #0xff                   ; compare memory and index y
  |`======< 0x00009152      d0f4           bne 0x4b2108                ; branch on result not zero
  |,======< 0x00009154      4c6391         jmp 0x9163                  ; jump to new location
  ---`----> 0x00009157      b90045         lda 0x4500,y                ; load accumulator with memory
  ||| |||   0x0000915a      9d0047         sta 0x4700,x                ; store accumulator in memory
  ||| |||   0x0000915d      e8             inx                         ; increment index x by one
  ||| |||   0x0000915e      c8             iny                         ; increment index y by one
  ||| |||   0x0000915f      c0ff           cpy #0xff                   ; compare memory and index y
  ========< 0x00009161      d0f4           bne 0x4b2108                ; branch on result not zero
  |`------> 0x00009163      60             rts                         ; return from subroutine
  | | |||   0x00009164      a000           ldy #0x00                   ; load index y with memory
  | |.----> 0x00009166      b90044         lda 0x4400,y                ; load accumulator with memory
  | |||||   0x00009169      99004a         sta 0x4a00,y                ; store accumulator in memory
  | |||||   0x0000916c      b90045         lda 0x4500,y                ; load accumulator with memory
  | |||||   0x0000916f      99004b         sta 0x4b00,y                ; store accumulator in memory
  | |||||   0x00009172      c8             iny                         ; increment index y by one
  | |`====< 0x00009173      d0f1           bne 0x4b2108                ; branch on result not zero
  | | |||   0x00009175      60             rts                         ; return from subroutine
  | |.----> 0x00009176      a000           ldy #0x00                   ; load index y with memory
  |.------> 0x00009178      b9004a         lda 0x4a00,y                ; load accumulator with memory
  |||||||   0x0000917b      990044         sta 0x4400,y                ; store accumulator in memory
  |||||||   0x0000917e      b9004b         lda 0x4b00,y                ; load accumulator with memory
  |||||||   0x00009181      990045         sta 0x4500,y                ; store accumulator in memory
  |||||||   0x00009184      c8             iny                         ; increment index y by one
  |`======< 0x00009185      d0f1           bne 0x4b2108                ; branch on result not zero
  | |||||   0x00009187      60             rts                         ; return from subroutine
  | |||||   0x00009188      a60f           ldx 0x0f                    ; load index x with memory
  | |||||   0x0000918a      a52d           lda 0x2d                    ; load accumulator with memory
  | |||||   0x0000918c      18             clc                         ; clear carry flag
  | |||||   0x0000918d      7d3d80         adc 0x803d,x                ; add memory to accumulator with carry
  | |||||   0x00009190      2907           and #0x07                   ; "and" memory with accumulator
  | |||||   0x00009192      85a9           sta 0xa9                    ; store accumulator in memory
  | |||||   0x00009194      a52e           lda 0x2e                    ; load accumulator with memory
  | |||||   0x00009196      18             clc                         ; clear carry flag
  | |||||   0x00009197      7d4180         adc 0x8041,x                ; add memory to accumulator with carry
  | |||||   0x0000919a      2907           and #0x07                   ; "and" memory with accumulator
  | |||||   0x0000919c      85aa           sta 0xaa                    ; store accumulator in memory
  | |||||   0x0000919e      98             tya                         ; transfer index y to accumulator
  | |||||   0x0000919f      48             pha                         ; push accumulator on stack
  | |||||   0x000091a0      a5aa           lda 0xaa                    ; load accumulator with memory
  | |||||   0x000091a2      0a             asl a                       ; shift left one bit (memory or accumulator)
  | |||||   0x000091a3      0a             asl a                       ; shift left one bit (memory or accumulator)
  | |||||   0x000091a4      0a             asl a                       ; shift left one bit (memory or accumulator)
  | |||||   0x000091a5      05a9           ora 0xa9                    ; "or" memory with accumulator
  | |||||   0x000091a7      a8             tay                         ; transfer accumulator to index y
  | |||||   0x000091a8      b90047         lda 0x4700,y                ; load accumulator with memory
  | |||||   0x000091ab      c990           cmp #0x90                   ; compare memory and accumulator
  |,======< 0x000091ad      b002           bcs 0x4b2108                ; branch on carry set
  |||||||   0x000091af      29f7           and #0xf7                   ; "and" memory with accumulator
  |`------> 0x000091b1      8dd091         sta 0x91d0                  ; store accumulator in memory
  | |||||   0x000091b4      68             pla                         ; pull accumulator from stack
  | |||||   0x000091b5      a8             tay                         ; transfer accumulator to index y
  | |||||   0x000091b6      add091         lda 0x91d0                  ; load accumulator with memory
  | |||||   0x000091b9      60             rts                         ; return from subroutine
  | |||||   0x000091ba      98             tya                         ; transfer index y to accumulator
  | |||||   0x000091bb      48             pha                         ; push accumulator on stack
  | |||||   0x000091bc      a5aa           lda 0xaa                    ; load accumulator with memory
  | |||||   0x000091be      0a             asl a                       ; shift left one bit (memory or accumulator)
  | |||||   0x000091bf      0a             asl a                       ; shift left one bit (memory or accumulator)
  | |||||   0x000091c0      0a             asl a                       ; shift left one bit (memory or accumulator)
  | |||||   0x000091c1      05a9           ora 0xa9                    ; "or" memory with accumulator
  | |||||   0x000091c3      a8             tay                         ; transfer accumulator to index y
  | |||||   0x000091c4      b90047         lda 0x4700,y                ; load accumulator with memory
  | |||||   0x000091c7      8dd091         sta 0x91d0                  ; store accumulator in memory
  | |||||   0x000091ca      68             pla                         ; pull accumulator from stack
  | |||||   0x000091cb      a8             tay                         ; transfer accumulator to index y
  | |||||   0x000091cc      add091         lda 0x91d0                  ; load accumulator with memory
  | |||||   0x000091cf      60             rts                         ; return from subroutine
  | |||||   0x000091d0      00             brk                         ; force break
  | |||||   0x000091d1      8dd091         sta 0x91d0                  ; store accumulator in memory
  | |||||   0x000091d4      98             tya                         ; transfer index y to accumulator
  | |||||   0x000091d5      48             pha                         ; push accumulator on stack
  | |||||   0x000091d6      8a             txa                         ; transfer index x to accumulator
  | |||||   0x000091d7      48             pha                         ; push accumulator on stack
  | |||||   0x000091d8      add091         lda 0x91d0                  ; load accumulator with memory
  | |||||   0x000091db      c990           cmp #0x90                   ; compare memory and accumulator
  |,======< 0x000091dd      b016           bcs 0x4b2108                ; branch on carry set
  |||||||   0x000091df      a5aa           lda 0xaa                    ; load accumulator with memory
  |||||||   0x000091e1      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x000091e2      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x000091e3      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x000091e4      05a9           ora 0xa9                    ; "or" memory with accumulator
  |||||||   0x000091e6      a8             tay                         ; transfer accumulator to index y
  |||||||   0x000091e7      b90047         lda 0x4700,y                ; load accumulator with memory
  |||||||   0x000091ea      2908           and #0x08                   ; "and" memory with accumulator
  |||||||   0x000091ec      0dd091         ora 0x91d0                  ; "or" memory with accumulator
  |||||||   0x000091ef      990047         sta 0x4700,y                ; store accumulator in memory
  ========< 0x000091f2      4c0392         jmp 0x9203                  ; jump to new location
  |`------> 0x000091f5      a5aa           lda 0xaa                    ; load accumulator with memory
  | |||||   0x000091f7      0a             asl a                       ; shift left one bit (memory or accumulator)
  | |||||   0x000091f8      0a             asl a                       ; shift left one bit (memory or accumulator)
  | |||||   0x000091f9      0a             asl a                       ; shift left one bit (memory or accumulator)
  | |||||   0x000091fa      05a9           ora 0xa9                    ; "or" memory with accumulator
  | |||||   0x000091fc      a8             tay                         ; transfer accumulator to index y
  | |||||   0x000091fd      add091         lda 0x91d0                  ; load accumulator with memory
  | |||||   0x00009200      990047         sta 0x4700,y                ; store accumulator in memory
  --------> 0x00009203      68             pla                         ; pull accumulator from stack
  | |||||   0x00009204      aa             tax                         ; transfer accumulator to index x
  | |||||   0x00009205      68             pla                         ; pull accumulator from stack
  | |||||   0x00009206      a8             tay                         ; transfer accumulator to index y
  | |||||   0x00009207      add091         lda 0x91d0                  ; load accumulator with memory
  | |||||   0x0000920a      60             rts                         ; return from subroutine
  | |||||   0x0000920b      ad3e96         lda 0x963e                  ; load accumulator with memory
  | |||||   0x0000920e      0d3f96         ora 0x963f                  ; "or" memory with accumulator
  | |||||   0x00009211      0d4096         ora 0x9640                  ; "or" memory with accumulator
  | |||||   0x00009214      0d4196         ora 0x9641                  ; "or" memory with accumulator
  | |||||   0x00009217      0d4296         ora 0x9642                  ; "or" memory with accumulator
  |,======< 0x0000921a      1018           bpl 0x4b2108                ; branch on result plus
  |||||||   0x0000921c      a578           lda 0x78                    ; load accumulator with memory
  ========< 0x0000921e      1014           bpl 0x4b2108                ; branch on result plus
  |||||||   0x00009220      a00a           ldy #0x0a                   ; load index y with memory
  --------> 0x00009222      20274c         jsr 0x4c27                  ; jump to new location saving return address
  |||||||   0x00009225      2907           and #0x07                   ; "and" memory with accumulator
  |||||||   0x00009227      aa             tax                         ; transfer accumulator to index x
  |||||||   0x00009228      209c4c         jsr 0x4c9c                  ; jump to new location saving return address
  --------> 0x0000922b      ca             dex                         ; decrement index x by one
  ========< 0x0000922c      10fd           bpl 0x4b2108                ; branch on result plus
  |||||||   0x0000922e      209c4c         jsr 0x4c9c                  ; jump to new location saving return address
  |||||||   0x00009231      88             dey                         ; decrement index y by one
  ========< 0x00009232      10ee           bpl 0x4b2108                ; branch on result plus
  -`------> 0x00009234      60             rts                         ; return from subroutine
  | |||||   0x00009235      20304c         jsr 0x4c30                  ; jump to new location saving return address
  | |||||   0x00009238      205896         jsr 0x9658                  ; jump to new location saving return address
  | |||||   0x0000923b      2081a1         jsr 0xa181                  ; jump to new location saving return address
  | |||||   0x0000923e      200b92         jsr 0x920b                  ; jump to new location saving return address
  | |||||   0x00009241      a5c9           lda 0xc9                    ; load accumulator with memory
  | |||||   0x00009243      48             pha                         ; push accumulator on stack
  | |||||   0x00009244      a5ca           lda 0xca                    ; load accumulator with memory
  | |||||   0x00009246      48             pha                         ; push accumulator on stack
  | |||||   0x00009247      a90c           lda #0x0c                   ; load accumulator with memory
  | |||||   0x00009249      85c9           sta 0xc9                    ; store accumulator in memory
  | |||||   0x0000924b      a917           lda #0x17                   ; load accumulator with memory
  | |||||   0x0000924d      85ca           sta 0xca                    ; store accumulator in memory
  | |||||   0x0000924f      a50f           lda 0x0f                    ; load accumulator with memory
  |,======< 0x00009251      f014           beq 0x4b2108                ; branch on result zero
  |||||||   0x00009253      c901           cmp #0x01                   ; compare memory and accumulator
  ========< 0x00009255      f01c           beq 0x4b2108                ; branch on result zero
  |||||||   0x00009257      c902           cmp #0x02                   ; compare memory and accumulator
  ========< 0x00009259      f024           beq 0x4b2108                ; branch on result zero
  |||||||   0x0000925b      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x0000925e      a0d7           ldy #0xd7                   ; load index y with memory
  |||||||   0x00009260      e5f3           sbc 0xf3                    ; subtract memory from accumulator with borrow
  |||||||   0x00009262      f400           nop 0x00,x                  ; no operation
  ========< 0x00009264      4c8892         jmp 0x9288                  ; jump to new location
  |`------> 0x00009267      20004c         jsr 0x4c00                  ; jump to new location saving return address
  | |||||   0x0000926a      ceeff2         dec 0xf2ef                  ; decrement memory by one
  | |||||   0x0000926d      f4e8           nop 0xe8,x                  ; no operation
  | |||||   0x0000926f      00             brk                         ; force break
  |,======< 0x00009270      4c8892         jmp 0x9288                  ; jump to new location
  --------> 0x00009273      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00009276      a0c5           ldy #0xc5                   ; load index y with memory
  |||||||   0x00009278      e1f3           sbc (0xf3,x)                ; subtract memory from accumulator with borrow
  |||||||   0x0000927a      f400           nop 0x00,x                  ; no operation
  ========< 0x0000927c      4c8892         jmp 0x9288                  ; jump to new location
  --------> 0x0000927f      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00009282      d3ef           dcp (0xef),y
  |||||||   0x00009284      f5f4           sbc 0xf4,x                  ; subtract memory from accumulator with borrow
  |||||||   0x00009286      e8             inx                         ; increment index x by one
  |||||||   0x00009287      00             brk                         ; force break
  -`------> 0x00009288      a90c           lda #0x0c                   ; load accumulator with memory
  | |||||   0x0000928a      85c9           sta 0xc9                    ; store accumulator in memory
  | |||||   0x0000928c      a900           lda #0x00                   ; load accumulator with memory
  | |||||   0x0000928e      85ca           sta 0xca                    ; store accumulator in memory
  | |||||   0x00009290      a609           ldx 0x09                    ; load index x with memory
  | |||||   0x00009292      e8             inx                         ; increment index x by one
  | |||||   0x00009293      8a             txa                         ; transfer index x to accumulator
  | |||||   0x00009294      20094c         jsr 0x4c09                  ; jump to new location saving return address
  | |||||   0x00009297      68             pla                         ; pull accumulator from stack
  | |||||   0x00009298      85ca           sta 0xca                    ; store accumulator in memory
  | |||||   0x0000929a      68             pla                         ; pull accumulator from stack
  | |||||   0x0000929b      85c9           sta 0xc9                    ; store accumulator in memory
  | |||||   0x0000929d      60             rts                         ; return from subroutine
  |.------> 0x0000929e      a008           ldy #0x08                   ; load index y with memory
  --------> 0x000092a0      b90014         lda 0x1400,y                ; load accumulator with memory
  |||||||   0x000092a3      8db192         sta 0x92b1                  ; store accumulator in memory
  |||||||   0x000092a6      b9c014         lda 0x14c0,y                ; load accumulator with memory
  |||||||   0x000092a9      8db292         sta 0x92b2                  ; store accumulator in memory
  |||||||   0x000092ac      a900           lda #0x00                   ; load accumulator with memory
  |||||||   0x000092ae      a208           ldx #0x08                   ; load index x with memory
  --------> 0x000092b0      9dffff         sta 0xffff,x                ; store accumulator in memory
  |||||||   0x000092b3      e8             inx                         ; increment index x by one
  |||||||   0x000092b4      e0b8           cpx #0xb8                   ; compare memory and index x
  ========< 0x000092b6      d0f8           bne 0x4b2108                ; branch on result not zero
  |||||||   0x000092b8      98             tya                         ; transfer index y to accumulator
  |||||||   0x000092b9      18             clc                         ; clear carry flag
  |||||||   0x000092ba      6908           adc #0x08                   ; add memory to accumulator with carry
  |||||||   0x000092bc      a8             tay                         ; transfer accumulator to index y
  |||||||   0x000092bd      c0b8           cpy #0xb8                   ; compare memory and index y
  ========< 0x000092bf      d0df           bne 0x4b2108                ; branch on result not zero
  |||||||   0x000092c1      a018           ldy #0x18                   ; load index y with memory
  --------> 0x000092c3      a200           ldx #0x00                   ; load index x with memory
  --------> 0x000092c5      ca             dex                         ; decrement index x by one
  ========< 0x000092c6      d0fd           bne 0x4b2108                ; branch on result not zero
  |||||||   0x000092c8      88             dey                         ; decrement index y by one
  ========< 0x000092c9      d0f8           bne 0x4b2108                ; branch on result not zero
  |||||||   0x000092cb      a201           ldx #0x01                   ; load index x with memory
  --------> 0x000092cd      bdd003         lda 0x03d0,x                ; load accumulator with memory
  |||||||   0x000092d0      85fc           sta 0xfc                    ; store accumulator in memory
  |||||||   0x000092d2      bde803         lda 0x03e8,x                ; load accumulator with memory
  |||||||   0x000092d5      85fd           sta 0xfd                    ; store accumulator in memory
  |||||||   0x000092d7      a001           ldy #0x01                   ; load index y with memory
  |||||||   0x000092d9      a9ff           lda #0xff                   ; load accumulator with memory
  --------> 0x000092db      91fc           sta (0xfc),y                ; store accumulator in memory
  |||||||   0x000092dd      c8             iny                         ; increment index y by one
  |||||||   0x000092de      c017           cpy #0x17                   ; compare memory and index y
  ========< 0x000092e0      d0f9           bne 0x4b2108                ; branch on result not zero
  |||||||   0x000092e2      e8             inx                         ; increment index x by one
  |||||||   0x000092e3      e017           cpx #0x17                   ; compare memory and index x
  ========< 0x000092e5      d0e6           bne 0x4b2108                ; branch on result not zero
  |||||||   0x000092e7      60             rts                         ; return from subroutine
  |||||||   0x000092e8      adf143         lda 0x43f1                  ; load accumulator with memory
  |||||||   0x000092eb      c5a9           cmp 0xa9                    ; compare memory and accumulator
  ========< 0x000092ed      d007           bne 0x4b2108                ; branch on result not zero
  |||||||   0x000092ef      adf243         lda 0x43f2                  ; load accumulator with memory
  |||||||   0x000092f2      c5aa           cmp 0xaa                    ; compare memory and accumulator
  ========< 0x000092f4      f002           beq 0x4b2108                ; branch on result zero
  --------> 0x000092f6      18             clc                         ; clear carry flag
  |||||||   0x000092f7      60             rts                         ; return from subroutine
  --------> 0x000092f8      38             sec                         ; set carry flag
  |||||||   0x000092f9      60             rts                         ; return from subroutine
  --------> 0x000092fa      a52d           lda 0x2d                    ; load accumulator with memory
  |||||||   0x000092fc      48             pha                         ; push accumulator on stack
  |||||||   0x000092fd      a52e           lda 0x2e                    ; load accumulator with memory
  |||||||   0x000092ff      48             pha                         ; push accumulator on stack
  |||||||   0x00009300      a5a9           lda 0xa9                    ; load accumulator with memory
  |||||||   0x00009302      852d           sta 0x2d                    ; store accumulator in memory
  |||||||   0x00009304      a5aa           lda 0xaa                    ; load accumulator with memory
  |||||||   0x00009306      852e           sta 0x2e                    ; store accumulator in memory
  |||||||   0x00009308      205896         jsr 0x9658                  ; jump to new location saving return address
  |||||||   0x0000930b      2081a1         jsr 0xa181                  ; jump to new location saving return address
  |||||||   0x0000930e      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00009311      cff5e3         dcp 0xe3f5
  |||||||   0x00009314      e8             inx                         ; increment index x by one
  |||||||   0x00009315      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x00009317      c5ec           cmp 0xec                    ; compare memory and accumulator
  |||||||   0x00009319      e5e3           sbc 0xe3                    ; subtract memory from accumulator with borrow
  |||||||   0x0000931b      f4f2           nop 0xf2,x                  ; no operation
  |||||||   0x0000931d      e9e3           sbc #0xe3                   ; subtract memory from accumulator with borrow
  |||||||   0x0000931f      a0e6           ldy #0xe6                   ; load index y with memory
  |||||||   0x00009321      e9e5           sbc #0xe5                   ; subtract memory from accumulator with borrow
  |||||||   0x00009323      ece4a1         cpx 0xa1e4                  ; compare memory and index x
  |||||||   0x00009326      8d0020         sta 0x2000                  ; store accumulator in memory
  |||||||   0x00009329      3a             nop                         ; no operation
  |||||||   0x0000932a      93203a         sha 0x3a20,x
  |||||||   0x0000932d      936885         sha 0x8568,x
  |||||||   0x00009330      2e6885         rol 0x8568                  ; rotate one bit left (memory or accumulator)
  |||||||   0x00009333      2d2087         and 0x8720                  ; "and" memory with accumulator
  |||||||   0x00009336      4c4ccb         jmp 0xcb4c                  ; jump to new location
  |||||||   0x00009339      85a0           sta 0xa0                    ; store accumulator in memory
  |||||||   0x0000933b      18             clc                         ; clear carry flag
  --------> 0x0000933c      b90014         lda 0x1400,y                ; load accumulator with memory
  |||||||   0x0000933f      8d5193         sta 0x9351                  ; store accumulator in memory
  |||||||   0x00009342      8d5693         sta 0x9356                  ; store accumulator in memory
  |||||||   0x00009345      b9c014         lda 0x14c0,y                ; load accumulator with memory
  |||||||   0x00009348      8d5293         sta 0x9352                  ; store accumulator in memory
  |||||||   0x0000934b      8d5793         sta 0x9357                  ; store accumulator in memory
  |||||||   0x0000934e      a210           ldx #0x10                   ; load index x with memory
  --------> 0x00009350      bdffff         lda 0xffff,x                ; load accumulator with memory
  |||||||   0x00009353      49ff           eor #0xff                   ; "exclusive-or" memory with accumulator
  |||||||   0x00009355      9dffff         sta 0xffff,x                ; store accumulator in memory
  |||||||   0x00009358      c98f           cmp #0x8f                   ; compare memory and accumulator
  ========< 0x0000935a      9007           bcc 0x4b2108                ; branch on carry clear
  |||||||   0x0000935c      2478           bit 0x78                    ; test bits in memory with accumulator
  ========< 0x0000935e      1003           bpl 0x4b2108                ; branch on result plus
  |||||||   0x00009360      209c4c         jsr 0x4c9c                  ; jump to new location saving return address
  --------> 0x00009363      e8             inx                         ; increment index x by one
  |||||||   0x00009364      e0b0           cpx #0xb0                   ; compare memory and index x
  ========< 0x00009366      d0e8           bne 0x4b2108                ; branch on result not zero
  |||||||   0x00009368      98             tya                         ; transfer index y to accumulator
  |||||||   0x00009369      18             clc                         ; clear carry flag
  |||||||   0x0000936a      6908           adc #0x08                   ; add memory to accumulator with carry
  |||||||   0x0000936c      a8             tay                         ; transfer accumulator to index y
  |||||||   0x0000936d      c0a8           cpy #0xa8                   ; compare memory and index y
  ========< 0x0000936f      d0cb           bne 0x4b2108                ; branch on result not zero
  |||||||   0x00009371      60             rts                         ; return from subroutine
  |||||||   0x00009372      209c93         jsr 0x939c                  ; jump to new location saving return address
  |||||||   0x00009375      aa             tax                         ; transfer accumulator to index x
  |||||||   0x00009376      98             tya                         ; transfer index y to accumulator
  |||||||   0x00009377      9d8310         sta 0x1083,x                ; store accumulator in memory
  |||||||   0x0000937a      60             rts                         ; return from subroutine
  |||||||   0x0000937b      8e8693         stx 0x9386                  ; store index x in memory
  |||||||   0x0000937e      209b93         jsr 0x939b                  ; jump to new location saving return address
  |||||||   0x00009381      aa             tax                         ; transfer accumulator to index x
  |||||||   0x00009382      bd8310         lda 0x1083,x                ; load accumulator with memory
  |||||||   0x00009385      a2ff           ldx #0xff                   ; load index x with memory
  |||||||   0x00009387      60             rts                         ; return from subroutine
  |||||||   0x00009388      209b93         jsr 0x939b                  ; jump to new location saving return address
  |||||||   0x0000938b      a8             tay                         ; transfer accumulator to index y
  |||||||   0x0000938c      b98010         lda 0x1080,y                ; load accumulator with memory
  |||||||   0x0000938f      60             rts                         ; return from subroutine
  |||||||   0x00009390      209b93         jsr 0x939b                  ; jump to new location saving return address
  |||||||   0x00009393      a8             tay                         ; transfer accumulator to index y
  |||||||   0x00009394      b98510         lda 0x1085,y                ; load accumulator with memory
  |||||||   0x00009397      20574c         jsr 0x4c57                  ; jump to new location saving return address
  |||||||   0x0000939a      60             rts                         ; return from subroutine
  |||||||   0x0000939b      8a             txa                         ; transfer index x to accumulator
  |||||||   0x0000939c      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x0000939d      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x0000939e      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x0000939f      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x000093a0      60             rts                         ; return from subroutine
  |||||||   0x000093a1      adfe8c         lda 0x8cfe                  ; load accumulator with memory
  |||||||   0x000093a4      2903           and #0x03                   ; "and" memory with accumulator
  |||||||   0x000093a6      209c93         jsr 0x939c                  ; jump to new location saving return address
  |||||||   0x000093a9      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x000093aa      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x000093ab      8dc193         sta 0x93c1                  ; store accumulator in memory
  |||||||   0x000093ae      8dd293         sta 0x93d2                  ; store accumulator in memory
  |||||||   0x000093b1      adfe8c         lda 0x8cfe                  ; load accumulator with memory
  |||||||   0x000093b4      c904           cmp #0x04                   ; compare memory and accumulator
  ========< 0x000093b6      b011           bcs 0x4b2108                ; branch on carry set
  |||||||   0x000093b8      a52e           lda 0x2e                    ; load accumulator with memory
  |||||||   0x000093ba      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x000093bb      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x000093bc      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x000093bd      052d           ora 0x2d                    ; "or" memory with accumulator
  |||||||   0x000093bf      18             clc                         ; clear carry flag
  |||||||   0x000093c0      69ff           adc #0xff                   ; add memory to accumulator with carry
  |||||||   0x000093c2      a8             tay                         ; transfer accumulator to index y
  |||||||   0x000093c3      b90044         lda 0x4400,y                ; load accumulator with memory
  ========< 0x000093c6      4cd793         jmp 0x93d7                  ; jump to new location
  --------> 0x000093c9      a52e           lda 0x2e                    ; load accumulator with memory
  |||||||   0x000093cb      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x000093cc      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x000093cd      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x000093ce      052d           ora 0x2d                    ; "or" memory with accumulator
  |||||||   0x000093d0      18             clc                         ; clear carry flag
  |||||||   0x000093d1      69ff           adc #0xff                   ; add memory to accumulator with carry
  |||||||   0x000093d3      a8             tay                         ; transfer accumulator to index y
  |||||||   0x000093d4      b90045         lda 0x4500,y                ; load accumulator with memory
  --------> 0x000093d7      aefd8c         ldx 0x8cfd                  ; load index x with memory
  ========< 0x000093da      d016           bne 0x4b2108                ; branch on result not zero
  |||||||   0x000093dc      29f0           and #0xf0                   ; "and" memory with accumulator
  |||||||   0x000093de      c9e0           cmp #0xe0                   ; compare memory and accumulator
  ========< 0x000093e0      f00e           beq 0x4b2108                ; branch on result zero
  |||||||   0x000093e2      c9d0           cmp #0xd0                   ; compare memory and accumulator
  ========< 0x000093e4      f00a           beq 0x4b2108                ; branch on result zero
  |||||||   0x000093e6      c9c0           cmp #0xc0                   ; compare memory and accumulator
  ========< 0x000093e8      f006           beq 0x4b2108                ; branch on result zero
  |||||||   0x000093ea      c9b0           cmp #0xb0                   ; compare memory and accumulator
  ========< 0x000093ec      f002           beq 0x4b2108                ; branch on result zero
  |||||||   0x000093ee      18             clc                         ; clear carry flag
  |||||||   0x000093ef      60             rts                         ; return from subroutine
  --------> 0x000093f0      38             sec                         ; set carry flag
  |||||||   0x000093f1      60             rts                         ; return from subroutine
  --------> 0x000093f2      29f0           and #0xf0                   ; "and" memory with accumulator
  |||||||   0x000093f4      c900           cmp #0x00                   ; compare memory and accumulator
  ========< 0x000093f6      d0f8           bne 0x4b2108                ; branch on result not zero
  |||||||   0x000093f8      18             clc                         ; clear carry flag
  |||||||   0x000093f9      60             rts                         ; return from subroutine
  --------> 0x000093fa      20304c         jsr 0x4c30                  ; jump to new location saving return address
  |||||||   0x000093fd      20b988         jsr 0x88b9                  ; jump to new location saving return address
  |||||||   0x00009400      20b294         jsr 0x94b2                  ; jump to new location saving return address
  |||||||   0x00009403      a900           lda #0x00                   ; load accumulator with memory
  |||||||   0x00009405      850a           sta 0x0a                    ; store accumulator in memory
  |||||||   0x00009407      8509           sta 0x09                    ; store accumulator in memory
  |||||||   0x00009409      20514c         jsr 0x4c51                  ; jump to new location saving return address
  |||||||   0x0000940c      20994c         jsr 0x4c99                  ; jump to new location saving return address
  |||||||   0x0000940f      a905           lda #0x05                   ; load accumulator with memory
  |||||||   0x00009411      20096c         jsr 0x6c09                  ; request disc 0x05
  |||||||   0x00009414      a91c           lda #0x1c                   ; load accumulator with memory
  |||||||   0x00009416      850c           sta 0x0c                    ; store accumulator in memory
  |||||||   0x00009418      20304c         jsr 0x4c30                  ; jump to new location saving return address
  |||||||   0x0000941b      a200           ldx #0x00                   ; load index x with memory
  |||||||   0x0000941d      20246c         jsr 0x6c24                  ; jump to new location saving return address
  |||||||   0x00009420      442a00                                     ; D* (death on castle disk?)
  ========< 0x00009423      4c00a7         jmp 0xa700                  ; jump to new location
  |||||||   0x00009426      ad1c80         lda 0x801c                  ; load accumulator with memory
  ========< 0x00009429      f003           beq 0x4b2108                ; branch on result zero
  |||`====< 0x0000942b      4c7691         jmp 0x9176                  ; jump to new location
  --------> 0x0000942e      a901           lda #0x01                   ; load accumulator with memory
  ||| |||   0x00009430      8df790         sta 0x90f7                  ; store accumulator in memory
  ||| |||   0x00009433      a50a           lda 0x0a                    ; load accumulator with memory
  ||| |||   0x00009435      290f           and #0x0f                   ; "and" memory with accumulator
  ||| |||   0x00009437      18             clc                         ; clear carry flag
  ||| |||   0x00009438      6917           adc #0x17                   ; add memory to accumulator with carry
  ||| |||   0x0000943a      8df690         sta 0x90f6                  ; store accumulator in memory
  |||.----> 0x0000943d      adf690         lda 0x90f6                  ; load accumulator with memory
  |||||||   0x00009440      aef790         ldx 0x90f7                  ; load index x with memory
  |||||||   0x00009443      20306c         jsr 0x6c30                  ; jump to new location saving return address
  |||`====< 0x00009446      b0f5           bcs 0x4b2108                ; branch on carry set
  ||| |||   0x00009448      a000           ldy #0x00                   ; load index y with memory
  |||.----> 0x0000944a      b9007e         lda 0x7e00,y                ; load accumulator with memory
  |||||||   0x0000944d      990044         sta 0x4400,y                ; store accumulator in memory
  |||||||   0x00009450      b9007f         lda 0x7f00,y                ; load accumulator with memory
  |||||||   0x00009453      990045         sta 0x4500,y                ; store accumulator in memory
  |||||||   0x00009456      c8             iny                         ; increment index y by one
  |||`====< 0x00009457      d0f1           bne 0x4b2108                ; branch on result not zero
  ||| |||   0x00009459      a50a           lda 0x0a                    ; load accumulator with memory
  ||| |||   0x0000945b      290f           and #0x0f                   ; "and" memory with accumulator
  ||| |||   0x0000945d      38             sec                         ; set carry flag
  ||| |||   0x0000945e      e901           sbc #0x01                   ; subtract memory from accumulator with borrow
  ||| |||   0x00009460      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||| |||   0x00009461      a8             tay                         ; transfer accumulator to index y
  ||| |||   0x00009462      8daa94         sta 0x94aa                  ; store accumulator in memory
  ||| |||   0x00009465      b9c013         lda 0x13c0,y                ; load accumulator with memory
  ||| |||   0x00009468      a200           ldx #0x00                   ; load index x with memory
  ---.----> 0x0000946a      6a             ror a                       ; rotate one bit right (memory or accumulator)
  ========< 0x0000946b      9031           bcc 0x4b2108                ; branch on carry clear
  |||||||   0x0000946d      48             pha                         ; push accumulator on stack
  |||||||   0x0000946e      8a             txa                         ; transfer index x to accumulator
  |||||||   0x0000946f      09f0           ora #0xf0                   ; "or" memory with accumulator
  |||||||   0x00009471      8d8394         sta 0x9483                  ; store accumulator in memory
  |||||||   0x00009474      8d8f94         sta 0x948f                  ; store accumulator in memory
  |||||||   0x00009477      8a             txa                         ; transfer index x to accumulator
  |||||||   0x00009478      09a0           ora #0xa0                   ; "or" memory with accumulator
  |||||||   0x0000947a      8d8a94         sta 0x948a                  ; store accumulator in memory
  |||||||   0x0000947d      8d9694         sta 0x9496                  ; store accumulator in memory
  |||||||   0x00009480      a000           ldy #0x00                   ; load index y with memory
  --------> 0x00009482      a9ff           lda #0xff                   ; load accumulator with memory
  |||||||   0x00009484      d90044         cmp 0x4400,y                ; compare memory and accumulator
  ========< 0x00009487      d005           bne 0x4b2108                ; branch on result not zero
  |||||||   0x00009489      a9ff           lda #0xff                   ; load accumulator with memory
  |||||||   0x0000948b      990044         sta 0x4400,y                ; store accumulator in memory
  --------> 0x0000948e      a9ff           lda #0xff                   ; load accumulator with memory
  |||||||   0x00009490      d90045         cmp 0x4500,y                ; compare memory and accumulator
  ========< 0x00009493      d005           bne 0x4b2108                ; branch on result not zero
  |||||||   0x00009495      a9ff           lda #0xff                   ; load accumulator with memory
  |||||||   0x00009497      990045         sta 0x4500,y                ; store accumulator in memory
  --------> 0x0000949a      c8             iny                         ; increment index y by one
  ========< 0x0000949b      d0e5           bne 0x4b2108                ; branch on result not zero
  |||||||   0x0000949d      68             pla                         ; pull accumulator from stack
  --------> 0x0000949e      e8             inx                         ; increment index x by one
  |||||||   0x0000949f      e010           cpx #0x10                   ; compare memory and index x
  ========< 0x000094a1      f00e           beq 0x4b2108                ; branch on result zero
  |||||||   0x000094a3      e008           cpx #0x08                   ; compare memory and index x
  ========< 0x000094a5      90c3           bcc 0x4b2108                ; branch on carry clear
  ========< 0x000094a7      d0c1           bne 0x4b2108                ; branch on result not zero
  |||||||   0x000094a9      a0ff           ldy #0xff                   ; load index y with memory
  |||||||   0x000094ab      b9c113         lda 0x13c1,y                ; load accumulator with memory
  |||`====< 0x000094ae      4c6a94         jmp 0x946a                  ; jump to new location
  --------> 0x000094b1      60             rts                         ; return from subroutine
  ||| |||   0x000094b2      a5c9           lda 0xc9                    ; load accumulator with memory
  ||| |||   0x000094b4      48             pha                         ; push accumulator on stack
  ||| |||   0x000094b5      a5ca           lda 0xca                    ; load accumulator with memory
  ||| |||   0x000094b7      48             pha                         ; push accumulator on stack
  ||| |||   0x000094b8      a905           lda #0x05                   ; load accumulator with memory
  ||| |||   0x000094ba      85c9           sta 0xc9                    ; store accumulator in memory
  ||| |||   0x000094bc      a900           lda #0x00                   ; load accumulator with memory
  ||| |||   0x000094be      85ca           sta 0xca                    ; store accumulator in memory
  ||| |||   0x000094c0      20004c         jsr 0x4c00                  ; jump to new location saving return address
  ||| |||   0x000094c3      1ea0a0         asl 0xa0a0,x                ; shift left one bit (memory or accumulator)
  ||| |||   0x000094c6      a0a0           ldy #0xa0                   ; load index y with memory
  ||| |||   0x000094c8      a0a0           ldy #0xa0                   ; load index y with memory
  ||| |||   0x000094ca      a0a0           ldy #0xa0                   ; load index y with memory
  ||| |||   0x000094cc      a0a0           ldy #0xa0                   ; load index y with memory
  ||| |||   0x000094ce      a0a0           ldy #0xa0                   ; load index y with memory
  ||| |||   0x000094d0      1c00a9         nop 0xa900,x                ; no operation
  ||| |||   0x000094d3      0185           ora (0x85,x)                ; "or" memory with accumulator
  ||| |||   0x000094d5      c9a9           cmp #0xa9                   ; compare memory and accumulator
  ||| |||   0x000094d7      1785           slo 0x85,x
  ||| |||   0x000094d9      ca             dex                         ; decrement index x by one
  ||| |||   0x000094da      20004c         jsr 0x4c00                  ; jump to new location saving return address
  ||| |||   0x000094dd      02             hlt
  ||| |||   0x000094de      02             hlt
  ||| |||   0x000094df      02             hlt
  ||| |||   0x000094e0      02             hlt
  ||| |||   0x000094e1      02             hlt
  ||| |||   0x000094e2      02             hlt
  ||| |||   0x000094e3      02             hlt
  ||| |||   0x000094e4      02             hlt
  ||| |||   0x000094e5      02             hlt
  ||| |||   0x000094e6      02             hlt
  ||| |||   0x000094e7      02             hlt
  ||| |||   0x000094e8      02             hlt
  ||| |||   0x000094e9      02             hlt
  ||| |||   0x000094ea      02             hlt
  ||| |||   0x000094eb      02             hlt
  ||| |||   0x000094ec      02             hlt
  ||| |||   0x000094ed      02             hlt
  ||| |||   0x000094ee      02             hlt
  ||| |||   0x000094ef      02             hlt
  ||| |||   0x000094f0      02             hlt
  ||| |||   0x000094f1      02             hlt
  ||| |||   0x000094f2      02             hlt
  ||| |||   0x000094f3      00             brk                         ; force break
  ||| |||   0x000094f4      68             pla                         ; pull accumulator from stack
  ||| |||   0x000094f5      85ca           sta 0xca                    ; store accumulator in memory
  ||| |||   0x000094f7      68             pla                         ; pull accumulator from stack
  ||| |||   0x000094f8      85c9           sta 0xc9                    ; store accumulator in memory
  ||| |||   0x000094fa      60             rts                         ; return from subroutine
  --------> 0x000094fb      20004c         jsr 0x4c00                  ; jump to new location saving return address
  ||| |||   0x000094fe      d3ef           dcp (0xef),y
  ||| |||   0x00009500      f5ee           sbc 0xee,x                  ; subtract memory from accumulator with borrow
  ||| |||   0x00009502      e4f3           cpx 0xf3                    ; compare memory and index x
  ||| |||   0x00009504      a0cf           ldy #0xcf                   ; load index y with memory
  ||| |||   0x00009506      00             brk                         ; force break
  ||| |||   0x00009507      a578           lda 0x78                    ; load accumulator with memory
  |||,====< 0x00009509      f00e           beq 0x4b2108                ; branch on result zero
  |||||||   0x0000950b      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x0000950e      e6e6           inc 0xe6                    ; increment memory by one
  |||||||   0x00009510      8d00a9         sta 0xa900                  ; store accumulator in memory
  |||||||   0x00009513      00             brk                         ; force break
  --------> 0x00009514      8578           sta 0x78                    ; store accumulator in memory
  ========< 0x00009516      4cc882         jmp 0x82c8                  ; jump to new location
  |||`----> 0x00009519      20004c         jsr 0x4c00                  ; jump to new location saving return address
  ||| |||   0x0000951c      ee8d00         inc 0x008d                  ; increment memory by one
  ||| |||   0x0000951f      a9ff           lda #0xff                   ; load accumulator with memory
  ========< 0x00009521      d0f1           bne 0x4b2108                ; branch on result not zero
CTRL+V
  --------> 0x00009523      20436c         jsr 0x6c43                  ; jump to new location saving return address
  ||`=====< 0x00009526      4cc882         jmp 0x82c8                  ; jump to new location

  ||  |||   0x00009529      a520           lda 0x20                    ; load accumulator with memory
  ||  |||   0x0000952b      c9d4           cmp #0xd4                   ; compare memory and accumulator
  || ,====< 0x0000952d      d001           bne 0x4b2108                ; branch on result not zero
  || ||||   0x0000952f      60             rts                         ; return from subroutine
  || `----> 0x00009530      a574           lda 0x74                    ; load accumulator with memory
  ||  |||   0x00009532      c903           cmp #0x03                   ; compare memory and accumulator
  || ,====< 0x00009534      f005           beq 0x4b2108                ; branch on result zero
  || ||||   0x00009536      c902           cmp #0x02                   ; compare memory and accumulator
  ||,=====< 0x00009538      d004           bne 0x4b2108                ; branch on result not zero
  |||||||   0x0000953a      60             rts                         ; return from subroutine
  ===`----> 0x0000953b      4c4396         jmp 0x9643                  ; jump to new location
  ||`-----> 0x0000953e      a200           ldx #0x00                   ; load index x with memory
  ||  |||   0x00009540      8e3e96         stx 0x963e                  ; store index x in memory
  ||  |||   0x00009543      8e3f96         stx 0x963f                  ; store index x in memory
  ||  |||   0x00009546      8e4096         stx 0x9640                  ; store index x in memory
  ||  |||   0x00009549      8e4196         stx 0x9641                  ; store index x in memory
  ||  |||   0x0000954c      8e4296         stx 0x9642                  ; store index x in memory
  ||  |||   0x0000954f      a203           ldx #0x03                   ; load index x with memory
  || .----> 0x00009551      208295         jsr 0x9582                  ; jump to new location saving return address
  || ||||   0x00009554      bdd495         lda 0x95d4,x                ; load accumulator with memory
  ||,=====< 0x00009557      f006           beq 0x4b2108                ; branch on result zero
  |||||||   0x00009559      20a795         jsr 0x95a7                  ; jump to new location saving return address
  ========< 0x0000955c      4c6295         jmp 0x9562                  ; jump to new location
  ||`-----> 0x0000955f      209695         jsr 0x9596                  ; jump to new location saving return address
  --------> 0x00009562      ca             dex                         ; decrement index x by one
  || `====< 0x00009563      10ec           bpl 0x4b2108                ; branch on result plus
  ||  |||   0x00009565      20b695         jsr 0x95b6                  ; jump to new location saving return address
  ||  |||   0x00009568      a203           ldx #0x03                   ; load index x with memory
  || .----> 0x0000956a      208295         jsr 0x9582                  ; jump to new location saving return address
  || ||||   0x0000956d      bdd495         lda 0x95d4,x                ; load accumulator with memory
  ||,=====< 0x00009570      f006           beq 0x4b2108                ; branch on result zero
  |||||||   0x00009572      209695         jsr 0x9596                  ; jump to new location saving return address
  ========< 0x00009575      4c7e95         jmp 0x957e                  ; jump to new location
  ||`-----> 0x00009578      20a795         jsr 0x95a7                  ; jump to new location saving return address
  || ||||   0x0000957b      fe3e96         inc 0x963e,x                ; increment memory by one
  --------> 0x0000957e      ca             dex                         ; decrement index x by one
  || `====< 0x0000957f      10e9           bpl 0x4b2108                ; branch on result plus
  ||  |||   0x00009581      60             rts                         ; return from subroutine
  ||  |||   0x00009582      8a             txa                         ; transfer index x to accumulator
  ||  |||   0x00009583      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||  |||   0x00009584      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||  |||   0x00009585      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||  |||   0x00009586      18             clc                         ; clear carry flag
  ||  |||   0x00009587      7dd495         adc 0x95d4,x                ; add memory to accumulator with carry
  ||  |||   0x0000958a      a8             tay                         ; transfer accumulator to index y
  ||  |||   0x0000958b      b9dd95         lda 0x95dd,y                ; load accumulator with memory
  ||  |||   0x0000958e      85fe           sta 0xfe                    ; store accumulator in memory
  ||  |||   0x00009590      b9fd95         lda 0x95fd,y                ; load accumulator with memory
  ||  |||   0x00009593      85ff           sta 0xff                    ; store accumulator in memory
  ||  |||   0x00009595      60             rts                         ; return from subroutine
  ||  |||   0x00009596      20066c         jsr 0x6c06                  ; jump to new location saving return address
  ||  |||   0x00009599      bdd895         lda 0x95d8,x                ; load accumulator with memory
  ||  |||   0x0000959c      49ff           eor #0xff                   ; "exclusive-or" memory with accumulator
  ||  |||   0x0000959e      a000           ldy #0x00                   ; load index y with memory
  ||  |||   0x000095a0      31fe           and (0xfe),y                ; "and" memory with accumulator
  ||  |||   0x000095a2      91fe           sta (0xfe),y                ; store accumulator in memory
  ========< 0x000095a4      4c036c         jmp 0x6c03                  ; jump to new location
  ||  |||   0x000095a7      20066c         jsr 0x6c06                  ; jump to new location saving return address
  ||  |||   0x000095aa      bdd895         lda 0x95d8,x                ; load accumulator with memory
  ||  |||   0x000095ad      a000           ldy #0x00                   ; load index y with memory
  ||  |||   0x000095af      11fe           ora (0xfe),y                ; "or" memory with accumulator
  ||  |||   0x000095b1      91fe           sta (0xfe),y                ; store accumulator in memory
  ========< 0x000095b3      4c036c         jmp 0x6c03                  ; jump to new location
  ||  |||   0x000095b6      a203           ldx #0x03                   ; load index x with memory
  || .----> 0x000095b8      bdd495         lda 0x95d4,x                ; load accumulator with memory
  || ||||   0x000095bb      c907           cmp #0x07                   ; compare memory and accumulator
  ||,=====< 0x000095bd      d007           bne 0x4b2108                ; branch on result not zero
  |||||||   0x000095bf      20274c         jsr 0x4c27                  ; jump to new location saving return address
  |||||||   0x000095c2      2907           and #0x07                   ; "and" memory with accumulator
  ========< 0x000095c4      d00a           bne 0x4b2108                ; branch on result not zero
  ||`-----> 0x000095c6      ded495         dec 0x95d4,x                ; decrement memory by one
  ||,=====< 0x000095c9      1005           bpl 0x4b2108                ; branch on result plus
  |||||||   0x000095cb      a907           lda #0x07                   ; load accumulator with memory
  |||||||   0x000095cd      9dd495         sta 0x95d4,x                ; store accumulator in memory
  --`-----> 0x000095d0      ca             dex                         ; decrement index x by one
  || `====< 0x000095d1      10e5           bpl 0x4b2108                ; branch on result plus
  ||  |||   0x000095d3      60             rts                         ; return from subroutine
  ||  |||   0x000095d4      0707           slo 0x07
  ||  |||   0x000095d6      0707           slo 0x07
  ||  |||   0x000095d8      0120           ora (0x20,x)                ; "or" memory with accumulator
  ||  |||   0x000095da      0402           nop 0x02                    ; no operation
  ||  |||   0x000095dc      04f6           nop 0xf6                    ; no operation
  ||  |||   0x000095de      51f2           eor (0xf2),y                ; "exclusive-or" memory with accumulator
  ||  |||   0x000095e0      77e0           rra 0xe0,x
  ||  |||   0x000095e2      2d5e73         and 0x735e                  ; "and" memory with accumulator
  ||  |||   0x000095e5      eb21           sbc #0x21                   ; subtract memory from accumulator with borrow
  ||  |||   0x000095e7      6cc314         jmp (0x14c3)                ; jump to new location
  ||  |||   0x000095ea      4762           sre 0x62
  ||  |||   0x000095ec      68             pla                         ; pull accumulator from stack
  ||  |||   0x000095ed      2f5f7f         rla 0x7f5f
  ||  |||   0x000095f0      afd303         lax 0x03d3
  ||  |||   0x000095f3      1b3f02         slo 0x023f,y
  ||  |||   0x000095f6      2c506b         bit 0x6b50                  ; test bits in memory with accumulator
  ||  |||   0x000095f9      808f           nop #0x8f                   ; no operation
  ||  |||   0x000095fb      9ba4e8         shs 0xe8a4,y
  ||  |||   0x000095fe      e9e9           sbc #0xe9                   ; subtract memory from accumulator with borrow
  ||  |||   0x00009600      ea             nop                         ; no operation
  ||  |||   0x00009601      ea             nop                         ; no operation
  ||  |||   0x00009602      ebeb           sbc #0xeb                   ; subtract memory from accumulator with borrow
  ||  |||   0x00009604      ebe2           sbc #0xe2                   ; subtract memory from accumulator with borrow
  ||  |||   0x00009606      e3e3           isb (0xe3,x)
  ||  |||   0x00009608      e3e4           isb (0xe4,x)
  ||  |||   0x0000960a      e4e4           cpx 0xe4                    ; compare memory and index x
  ||  |||   0x0000960c      e4e5           cpx 0xe5                    ; compare memory and index x
  ||  |||   0x0000960e      e5e5           sbc 0xe5                    ; subtract memory from accumulator with borrow
  ||  |||   0x00009610      e5e5           sbc 0xe5                    ; subtract memory from accumulator with borrow
  ||  |||   0x00009612      e6e6           inc 0xe6                    ; increment memory by one
  ||  |||   0x00009614      e6ed           inc 0xed                    ; increment memory by one
  ||  |||   0x00009616      ededed         sbc 0xeded                  ; subtract memory from accumulator with borrow
  ||  |||   0x00009619      ededed         sbc 0xeded                  ; subtract memory from accumulator with borrow
  ||  |||   0x0000961c      ed0000         sbc 0x0000                  ; subtract memory from accumulator with borrow
  ||  |||   0x0000961f      00             brk                         ; force break
  ||  |||   0x00009620      00             brk                         ; force break
  ||  |||   0x00009621      00             brk                         ; force break
  ||  |||   0x00009622      00             brk                         ; force break
  ||  |||   0x00009623      00             brk                         ; force break
  ||  |||   0x00009624      00             brk                         ; force break
  ||  |||   0x00009625      00             brk                         ; force break
  ||  |||   0x00009626      00             brk                         ; force break
  ||  |||   0x00009627      00             brk                         ; force break
  ||  |||   0x00009628      00             brk                         ; force break
  ||  |||   0x00009629      00             brk                         ; force break
  ||  |||   0x0000962a      00             brk                         ; force break
  ||  |||   0x0000962b      00             brk                         ; force break
  ||  |||   0x0000962c      00             brk                         ; force break
  ||  |||   0x0000962d      00             brk                         ; force break
  ||  |||   0x0000962e      00             brk                         ; force break
  ||  |||   0x0000962f      00             brk                         ; force break
  ||  |||   0x00009630      00             brk                         ; force break
  ||  |||   0x00009631      02             hlt
  ||  |||   0x00009632      0300           slo (0x00,x)
  ||  |||   0x00009634      00             brk                         ; force break
  ||  |||   0x00009635      00             brk                         ; force break
  ||  |||   0x00009636      0104           ora (0x04,x)                ; "or" memory with accumulator
  ||  |||   0x00009638      00             brk                         ; force break
  ||  |||   0x00009639      00             brk                         ; force break
  ||  |||   0x0000963a      00             brk                         ; force break
  ||  |||   0x0000963b      00             brk                         ; force break
  ||  |||   0x0000963c      00             brk                         ; force break
  ||  |||   0x0000963d      00             brk                         ; force break
  ||  |||   0x0000963e      00             brk                         ; force break
  ||  |||   0x0000963f      00             brk                         ; force break
  ||  |||   0x00009640      00             brk                         ; force break
  ||  |||   0x00009641      00             brk                         ; force break
  ||  |||   0x00009642      00             brk                         ; force break
  --------> 0x00009643      20274c         jsr 0x4c27                  ; jump to new location saving return address
  ||  |||   0x00009646      c9e0           cmp #0xe0                   ; compare memory and accumulator
  || ,====< 0x00009648      9008           bcc 0x4b2108                ; branch on carry clear
  || ||||   0x0000964a      a98b           lda #0x8b                   ; load accumulator with memory
  || ||||   0x0000964c      8da8ea         sta 0xeaa8                  ; store accumulator in memory
  ||,=====< 0x0000964f      4c5796         jmp 0x9657                  ; jump to new location
  |||`----> 0x00009652      a993           lda #0x93                   ; load accumulator with memory
  ||| |||   0x00009654      8da8ea         sta 0xeaa8                  ; store accumulator in memory
  ||`-----> 0x00009657      60             rts                         ; return from subroutine
  --------> 0x00009658      a900           lda #0x00                   ; load accumulator with memory
  ||  |||   0x0000965a      8d1980         sta 0x8019                  ; store accumulator in memory
  ||  |||   0x0000965d      202995         jsr 0x9529                  ; jump to new location saving return address
  ||  |||   0x00009660      a9ff           lda #0xff                   ; load accumulator with memory
  ||  |||   0x00009662      8dc098         sta 0x98c0                  ; store accumulator in memory
  ||  |||   0x00009665      a900           lda #0x00                   ; load accumulator with memory
  ||  |||   0x00009667      8d1980         sta 0x8019                  ; store accumulator in memory
  ||  |||   0x0000966a      858b           sta 0x8b                    ; store accumulator in memory
  ||  |||   0x0000966c      a52d           lda 0x2d                    ; load accumulator with memory
  ||  |||   0x0000966e      85a9           sta 0xa9                    ; store accumulator in memory
  ||  |||   0x00009670      48             pha                         ; push accumulator on stack
  ||  |||   0x00009671      a52e           lda 0x2e                    ; load accumulator with memory
  ||  |||   0x00009673      85aa           sta 0xaa                    ; store accumulator in memory
  ||  |||   0x00009675      48             pha                         ; push accumulator on stack
  || .----> 0x00009676      ad1980         lda 0x8019                  ; load accumulator with memory
  || ||||   0x00009679      209e91         jsr 0x919e                  ; jump to new location saving return address
  || ||||   0x0000967c      8db496         sta 0x96b4                  ; store accumulator in memory
  || ||||   0x0000967f      4a             lsr a                       ; shift right one bit (memory or accumulator)
  || ||||   0x00009680      4a             lsr a                       ; shift right one bit (memory or accumulator)
  || ||||   0x00009681      4a             lsr a                       ; shift right one bit (memory or accumulator)
  || ||||   0x00009682      4a             lsr a                       ; shift right one bit (memory or accumulator)
  || ||||   0x00009683      c90a           cmp #0x0a                   ; compare memory and accumulator
  ||,=====< 0x00009685      9054           bcc 0x4b2108                ; branch on carry clear
  |||||||   0x00009687      48             pha                         ; push accumulator on stack
  |||||||   0x00009688      aa             tax                         ; transfer accumulator to index x
  |||||||   0x00009689      ad1980         lda 0x8019                  ; load accumulator with memory
  |||||||   0x0000968c      18             clc                         ; clear carry flag
  |||||||   0x0000968d      7dce97         adc 0x97ce,x                ; add memory to accumulator with carry
  |||||||   0x00009690      48             pha                         ; push accumulator on stack
  |||||||   0x00009691      aa             tax                         ; transfer accumulator to index x
  |||||||   0x00009692      48             pha                         ; push accumulator on stack
  |||||||   0x00009693      bc1d96         ldy 0x961d,x                ; load index y with memory
  ========< 0x00009696      f00b           beq 0x4b2108                ; branch on result zero
  |||||||   0x00009698      88             dey                         ; decrement index y by one
  |||||||   0x00009699      b93e96         lda 0x963e,y                ; load accumulator with memory
  ========< 0x0000969c      f005           beq 0x4b2108                ; branch on result zero
  |||||||   0x0000969e      a9f8           lda #0xf8                   ; load accumulator with memory
  |||||||   0x000096a0      993e96         sta 0x963e,y                ; store accumulator in memory
  --------> 0x000096a3      68             pla                         ; pull accumulator from stack
  |||||||   0x000096a4      20f09e         jsr 0x9ef0                  ; jump to new location saving return address
  |||||||   0x000096a7      68             pla                         ; pull accumulator from stack
  |||||||   0x000096a8      aa             tax                         ; transfer accumulator to index x
  |||||||   0x000096a9      20889d         jsr 0x9d88                  ; jump to new location saving return address
  |||||||   0x000096ac      ad1980         lda 0x8019                  ; load accumulator with memory
  |||||||   0x000096af      c901           cmp #0x01                   ; compare memory and accumulator
  ========< 0x000096b1      d011           bne 0x4b2108                ; branch on result not zero
  |||||||   0x000096b3      a9ff           lda #0xff                   ; load accumulator with memory
  |||||||   0x000096b5      aa             tax                         ; transfer accumulator to index x
  |||||||   0x000096b6      29f0           and #0xf0                   ; "and" memory with accumulator
  |||||||   0x000096b8      c9b0           cmp #0xb0                   ; compare memory and accumulator
  ========< 0x000096ba      d008           bne 0x4b2108                ; branch on result not zero
  |||||||   0x000096bc      8a             txa                         ; transfer index x to accumulator
  |||||||   0x000096bd      290f           and #0x0f                   ; "and" memory with accumulator
  ========< 0x000096bf      f003           beq 0x4b2108                ; branch on result zero
  |||||||   0x000096c1      20cfa2         jsr 0xa2cf                  ; jump to new location saving return address
  --------> 0x000096c4      68             pla                         ; pull accumulator from stack
  |||||||   0x000096c5      c90e           cmp #0x0e                   ; compare memory and accumulator
  ========< 0x000096c7      f003           beq 0x4b2108                ; branch on result zero
  ========< 0x000096c9      4cdf97         jmp 0x97df                  ; jump to new location
  --------> 0x000096cc      ad1980         lda 0x8019                  ; load accumulator with memory
  ========< 0x000096cf      f003           beq 0x4b2108                ; branch on result zero
  ========< 0x000096d1      4cdf97         jmp 0x97df                  ; jump to new location
  --------> 0x000096d4      a916           lda #0x16                   ; load accumulator with memory
  |||||||   0x000096d6      858b           sta 0x8b                    ; store accumulator in memory
  ========< 0x000096d8      4ca597         jmp 0x97a5                  ; jump to new location
  ||`-----> 0x000096db      a60f           ldx 0x0f                    ; load index x with memory
  || ||||   0x000096dd      bda898         lda 0x98a8,x                ; load accumulator with memory
  || ||||   0x000096e0      8dde97         sta 0x97de                  ; store accumulator in memory
  || ||||   0x000096e3      20c198         jsr 0x98c1                  ; jump to new location saving return address
  || ||||   0x000096e6      20d998         jsr 0x98d9                  ; jump to new location saving return address
  || ||||   0x000096e9      c90a           cmp #0x0a                   ; compare memory and accumulator
  ||,=====< 0x000096eb      9045           bcc 0x4b2108                ; branch on carry clear
  |||||||   0x000096ed      c90c           cmp #0x0c                   ; compare memory and accumulator
  ========< 0x000096ef      d01f           bne 0x4b2108                ; branch on result not zero
  |||||||   0x000096f1      18             clc                         ; clear carry flag
  |||||||   0x000096f2      ad1980         lda 0x8019                  ; load accumulator with memory
  |||||||   0x000096f5      6914           adc #0x14                   ; add memory to accumulator with carry
  |||||||   0x000096f7      aa             tax                         ; transfer accumulator to index x
  |||||||   0x000096f8      48             pha                         ; push accumulator on stack
  |||||||   0x000096f9      bc1d96         ldy 0x961d,x                ; load index y with memory
  ========< 0x000096fc      f00b           beq 0x4b2108                ; branch on result zero
  |||||||   0x000096fe      88             dey                         ; decrement index y by one
  |||||||   0x000096ff      b93e96         lda 0x963e,y                ; load accumulator with memory
  ========< 0x00009702      f005           beq 0x4b2108                ; branch on result zero
  |||||||   0x00009704      a9f8           lda #0xf8                   ; load accumulator with memory
  |||||||   0x00009706      993e96         sta 0x963e,y                ; store accumulator in memory
  --------> 0x00009709      68             pla                         ; pull accumulator from stack
  |||||||   0x0000970a      20f09e         jsr 0x9ef0                  ; jump to new location saving return address
  ========< 0x0000970d      4c3c97         jmp 0x973c                  ; jump to new location
  --------> 0x00009710      c90e           cmp #0x0e                   ; compare memory and accumulator
  ========< 0x00009712      d00d           bne 0x4b2108                ; branch on result not zero
  --------> 0x00009714      18             clc                         ; clear carry flag
  |||||||   0x00009715      ad1980         lda 0x8019                  ; load accumulator with memory
  |||||||   0x00009718      6904           adc #0x04                   ; add memory to accumulator with carry
  |||||||   0x0000971a      aa             tax                         ; transfer accumulator to index x
  |||||||   0x0000971b      20f09e         jsr 0x9ef0                  ; jump to new location saving return address
  ========< 0x0000971e      4c3c97         jmp 0x973c                  ; jump to new location
  --------> 0x00009721      c90f           cmp #0x0f                   ; compare memory and accumulator
  ========< 0x00009723      f0ef           beq 0x4b2108                ; branch on result zero
  |||||||   0x00009725      c90a           cmp #0x0a                   ; compare memory and accumulator
  ========< 0x00009727      f0eb           beq 0x4b2108                ; branch on result zero
  |||||||   0x00009729      ae1980         ldx 0x8019                  ; load index x with memory
  |||||||   0x0000972c      20f09e         jsr 0x9ef0                  ; jump to new location saving return address
  ========< 0x0000972f      4c3c97         jmp 0x973c                  ; jump to new location
  ||`-----> 0x00009732      ad1980         lda 0x8019                  ; load accumulator with memory
  || ||||   0x00009735      18             clc                         ; clear carry flag
  || ||||   0x00009736      6910           adc #0x10                   ; add memory to accumulator with carry
  || ||||   0x00009738      aa             tax                         ; transfer accumulator to index x
  || ||||   0x00009739      20f09e         jsr 0x9ef0                  ; jump to new location saving return address
  --------> 0x0000973c      a52d           lda 0x2d                    ; load accumulator with memory
  || ||||   0x0000973e      85a9           sta 0xa9                    ; store accumulator in memory
  || ||||   0x00009740      a52e           lda 0x2e                    ; load accumulator with memory
  || ||||   0x00009742      85aa           sta 0xaa                    ; store accumulator in memory
  || ||||   0x00009744      a60f           ldx 0x0f                    ; load index x with memory
  || ||||   0x00009746      bdac98         lda 0x98ac,x                ; load accumulator with memory
  || ||||   0x00009749      8dde97         sta 0x97de                  ; store accumulator in memory
  || ||||   0x0000974c      20c198         jsr 0x98c1                  ; jump to new location saving return address
  || ||||   0x0000974f      20d998         jsr 0x98d9                  ; jump to new location saving return address
  || ||||   0x00009752      c90a           cmp #0x0a                   ; compare memory and accumulator
  ||,=====< 0x00009754      9045           bcc 0x4b2108                ; branch on carry clear
  |||||||   0x00009756      c90c           cmp #0x0c                   ; compare memory and accumulator
  ========< 0x00009758      d01f           bne 0x4b2108                ; branch on result not zero
  |||||||   0x0000975a      18             clc                         ; clear carry flag
  |||||||   0x0000975b      ad1980         lda 0x8019                  ; load accumulator with memory
  |||||||   0x0000975e      6914           adc #0x14                   ; add memory to accumulator with carry
  |||||||   0x00009760      aa             tax                         ; transfer accumulator to index x
  |||||||   0x00009761      48             pha                         ; push accumulator on stack
  |||||||   0x00009762      bc1d96         ldy 0x961d,x                ; load index y with memory
  ========< 0x00009765      f00b           beq 0x4b2108                ; branch on result zero
  |||||||   0x00009767      88             dey                         ; decrement index y by one
  |||||||   0x00009768      b93e96         lda 0x963e,y                ; load accumulator with memory
  ========< 0x0000976b      f005           beq 0x4b2108                ; branch on result zero
  |||||||   0x0000976d      a9f8           lda #0xf8                   ; load accumulator with memory
  |||||||   0x0000976f      993e96         sta 0x963e,y                ; store accumulator in memory
  --------> 0x00009772      68             pla                         ; pull accumulator from stack
  |||||||   0x00009773      20889d         jsr 0x9d88                  ; jump to new location saving return address
  ========< 0x00009776      4ca597         jmp 0x97a5                  ; jump to new location
  --------> 0x00009779      c90e           cmp #0x0e                   ; compare memory and accumulator
  ========< 0x0000977b      d00d           bne 0x4b2108                ; branch on result not zero
  --------> 0x0000977d      ad1980         lda 0x8019                  ; load accumulator with memory
  |||||||   0x00009780      18             clc                         ; clear carry flag
  |||||||   0x00009781      6904           adc #0x04                   ; add memory to accumulator with carry
  |||||||   0x00009783      aa             tax                         ; transfer accumulator to index x
  |||||||   0x00009784      20889d         jsr 0x9d88                  ; jump to new location saving return address
  ========< 0x00009787      4ca597         jmp 0x97a5                  ; jump to new location
  --------> 0x0000978a      c90f           cmp #0x0f                   ; compare memory and accumulator
  ========< 0x0000978c      f0ef           beq 0x4b2108                ; branch on result zero
  |||||||   0x0000978e      c90a           cmp #0x0a                   ; compare memory and accumulator
  ========< 0x00009790      f0eb           beq 0x4b2108                ; branch on result zero
  |||||||   0x00009792      ae1980         ldx 0x8019                  ; load index x with memory
  |||||||   0x00009795      20889d         jsr 0x9d88                  ; jump to new location saving return address
  ========< 0x00009798      4ca597         jmp 0x97a5                  ; jump to new location
  ||`-----> 0x0000979b      ad1980         lda 0x8019                  ; load accumulator with memory
  || ||||   0x0000979e      18             clc                         ; clear carry flag
  || ||||   0x0000979f      6910           adc #0x10                   ; add memory to accumulator with carry
  || ||||   0x000097a1      aa             tax                         ; transfer accumulator to index x
  || ||||   0x000097a2      20889d         jsr 0x9d88                  ; jump to new location saving return address
  --------> 0x000097a5      20b297         jsr 0x97b2                  ; jump to new location saving return address
  || ||||   0x000097a8      ad1980         lda 0x8019                  ; load accumulator with memory
  || ||||   0x000097ab      c904           cmp #0x04                   ; compare memory and accumulator
  ||,=====< 0x000097ad      b030           bcs 0x4b2108                ; branch on carry set
  |||`====< 0x000097af      4c7696         jmp 0x9676                  ; jump to new location
  ||| |||   0x000097b2      a50f           lda 0x0f                    ; load accumulator with memory
  ||| |||   0x000097b4      8dde97         sta 0x97de                  ; store accumulator in memory
  ||| |||   0x000097b7      a52d           lda 0x2d                    ; load accumulator with memory
  ||| |||   0x000097b9      85a9           sta 0xa9                    ; store accumulator in memory
  ||| |||   0x000097bb      a52e           lda 0x2e                    ; load accumulator with memory
  ||| |||   0x000097bd      85aa           sta 0xaa                    ; store accumulator in memory
  ||| |||   0x000097bf      20c198         jsr 0x98c1                  ; jump to new location saving return address
  ||| |||   0x000097c2      a5a9           lda 0xa9                    ; load accumulator with memory
  ||| |||   0x000097c4      852d           sta 0x2d                    ; store accumulator in memory
  ||| |||   0x000097c6      a5aa           lda 0xaa                    ; load accumulator with memory
  ||| |||   0x000097c8      852e           sta 0x2e                    ; store accumulator in memory
  ||| |||   0x000097ca      ee1980         inc 0x8019                  ; increment memory by one
  ||| |||   0x000097cd      60             rts                         ; return from subroutine
  ||| |||   0x000097ce      00             brk                         ; force break
  ||| |||   0x000097cf      00             brk                         ; force break
  ||| |||   0x000097d0      00             brk                         ; force break
  ||| |||   0x000097d1      00             brk                         ; force break
  ||| |||   0x000097d2      00             brk                         ; force break
  ||| |||   0x000097d3      00             brk                         ; force break
  ||| |||   0x000097d4      00             brk                         ; force break
  ||| |||   0x000097d5      00             brk                         ; force break
  ||| |||   0x000097d6      00             brk                         ; force break
  ||| |||   0x000097d7      00             brk                         ; force break
  ||| |||   0x000097d8      0c0818         nop 0x1808                  ; no operation
  ||| |||   0x000097db      08             php                         ; push processor status on stack
  ||| |||   0x000097dc      0c0c00         nop 0x000c                  ; no operation
  --`-----> 0x000097df      a52d           lda 0x2d                    ; load accumulator with memory
  ||  |||   0x000097e1      85a9           sta 0xa9                    ; store accumulator in memory
  ||  |||   0x000097e3      a52e           lda 0x2e                    ; load accumulator with memory
  ||  |||   0x000097e5      85aa           sta 0xaa                    ; store accumulator in memory
  ||  |||   0x000097e7      a60f           ldx 0x0f                    ; load index x with memory
  ||  |||   0x000097e9      bda898         lda 0x98a8,x                ; load accumulator with memory
  ||  |||   0x000097ec      aa             tax                         ; transfer accumulator to index x
  ||  |||   0x000097ed      bda898         lda 0x98a8,x                ; load accumulator with memory
  ||  |||   0x000097f0      8dde97         sta 0x97de                  ; store accumulator in memory
  || .----> 0x000097f3      ce1980         dec 0x8019                  ; decrement memory by one
  ||,=====< 0x000097f6      1003           bpl 0x4b2108                ; branch on result plus
  ========< 0x000097f8      4ca198         jmp 0x98a1                  ; jump to new location
  ||`-----> 0x000097fb      20c198         jsr 0x98c1                  ; jump to new location saving return address
  || ||||   0x000097fe      20d998         jsr 0x98d9                  ; jump to new location saving return address
  ||,=====< 0x00009801      f061           beq 0x4b2108                ; branch on result zero
  |||||||   0x00009803      c906           cmp #0x06                   ; compare memory and accumulator
  ========< 0x00009805      f00f           beq 0x4b2108                ; branch on result zero
  |||||||   0x00009807      c908           cmp #0x08                   ; compare memory and accumulator
  ========< 0x00009809      9017           bcc 0x4b2108                ; branch on carry clear
  ========< 0x0000980b      d078           bne 0x4b2108                ; branch on result not zero
  |||||||   0x0000980d      209e91         jsr 0x919e                  ; jump to new location saving return address
  |||||||   0x00009810      20e198         jsr 0x98e1                  ; jump to new location saving return address
  ========< 0x00009813      4c6498         jmp 0x9864                  ; jump to new location
  --------> 0x00009816      209e91         jsr 0x919e                  ; jump to new location saving return address
  |||||||   0x00009819      c960           cmp #0x60                   ; compare memory and accumulator
  ========< 0x0000981b      f003           beq 0x4b2108                ; branch on result zero
  ========< 0x0000981d      4c6498         jmp 0x9864                  ; jump to new location
  --------> 0x00009820      a906           lda #0x06                   ; load accumulator with memory
  --------> 0x00009822      48             pha                         ; push accumulator on stack
  |||||||   0x00009823      aa             tax                         ; transfer accumulator to index x
  |||||||   0x00009824      bdb098         lda 0x98b0,x                ; load accumulator with memory
  ========< 0x00009827      f012           beq 0x4b2108                ; branch on result zero
  |||||||   0x00009829      ad1980         lda 0x8019                  ; load accumulator with memory
  |||||||   0x0000982c      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x0000982d      18             clc                         ; clear carry flag
  |||||||   0x0000982e      7db098         adc 0x98b0,x                ; add memory to accumulator with carry
  |||||||   0x00009831      48             pha                         ; push accumulator on stack
  |||||||   0x00009832      aa             tax                         ; transfer accumulator to index x
  |||||||   0x00009833      20fba0         jsr 0xa0fb                  ; jump to new location saving return address
  |||||||   0x00009836      68             pla                         ; pull accumulator from stack
  |||||||   0x00009837      aa             tax                         ; transfer accumulator to index x
  |||||||   0x00009838      207b9e         jsr 0x9e7b                  ; jump to new location saving return address
  --------> 0x0000983b      68             pla                         ; pull accumulator from stack
  |||||||   0x0000983c      aa             tax                         ; transfer accumulator to index x
  |||||||   0x0000983d      bdb898         lda 0x98b8,x                ; load accumulator with memory
  ========< 0x00009840      f022           beq 0x4b2108                ; branch on result zero
  |||||||   0x00009842      ad1980         lda 0x8019                  ; load accumulator with memory
  |||||||   0x00009845      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x00009846      18             clc                         ; clear carry flag
  |||||||   0x00009847      7db898         adc 0x98b8,x                ; add memory to accumulator with carry
  |||||||   0x0000984a      48             pha                         ; push accumulator on stack
  |||||||   0x0000984b      aa             tax                         ; transfer accumulator to index x
  |||||||   0x0000984c      20279f         jsr 0x9f27                  ; jump to new location saving return address
  |||||||   0x0000984f      68             pla                         ; pull accumulator from stack
  |||||||   0x00009850      aa             tax                         ; transfer accumulator to index x
  |||||||   0x00009851      20e69d         jsr 0x9de6                  ; jump to new location saving return address
  |||||||   0x00009854      20d998         jsr 0x98d9                  ; jump to new location saving return address
  |||||||   0x00009857      c905           cmp #0x05                   ; compare memory and accumulator
  ========< 0x00009859      d009           bne 0x4b2108                ; branch on result not zero
  |||||||   0x0000985b      ae1980         ldx 0x8019                  ; load index x with memory
  |||||||   0x0000985e      8ec098         stx 0x98c0                  ; store index x in memory
  |||||||   0x00009861      20509a         jsr 0x9a50                  ; jump to new location saving return address
  --`-----> 0x00009864      20ba91         jsr 0x91ba                  ; jump to new location saving return address
  || ||||   0x00009867      a8             tay                         ; transfer accumulator to index y
  || ||||   0x00009868      c990           cmp #0x90                   ; compare memory and accumulator
  ||,=====< 0x0000986a      b019           bcs 0x4b2108                ; branch on carry set
  |||||||   0x0000986c      98             tya                         ; transfer index y to accumulator
  |||||||   0x0000986d      2908           and #0x08                   ; "and" memory with accumulator
  ========< 0x0000986f      f014           beq 0x4b2108                ; branch on result zero
  |||||||   0x00009871      a206           ldx #0x06                   ; load index x with memory
  |||||||   0x00009873      ad1980         lda 0x8019                  ; load accumulator with memory
  |||||||   0x00009876      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x00009877      18             clc                         ; clear carry flag
  |||||||   0x00009878      7db898         adc 0x98b8,x                ; add memory to accumulator with carry
  |||||||   0x0000987b      48             pha                         ; push accumulator on stack
  |||||||   0x0000987c      aa             tax                         ; transfer accumulator to index x
  |||||||   0x0000987d      20fba0         jsr 0xa0fb                  ; jump to new location saving return address
  |||||||   0x00009880      68             pla                         ; pull accumulator from stack
  |||||||   0x00009881      aa             tax                         ; transfer accumulator to index x
  |||||||   0x00009882      207b9e         jsr 0x9e7b                  ; jump to new location saving return address
  --`-----> 0x00009885      ad1980         lda 0x8019                  ; load accumulator with memory
  ||,=====< 0x00009888      f014           beq 0x4b2108                ; branch on result zero
  |||||||   0x0000988a      adf143         lda 0x43f1                  ; load accumulator with memory
  |||||||   0x0000988d      c5a9           cmp 0xa9                    ; compare memory and accumulator
  ========< 0x0000988f      d00d           bne 0x4b2108                ; branch on result not zero
  |||||||   0x00009891      adf243         lda 0x43f2                  ; load accumulator with memory
  |||||||   0x00009894      c5aa           cmp 0xaa                    ; compare memory and accumulator
  ========< 0x00009896      d006           bne 0x4b2108                ; branch on result not zero
  |||||||   0x00009898      204d99         jsr 0x994d                  ; jump to new location saving return address
  ========< 0x0000989b      4c9e98         jmp 0x989e                  ; jump to new location
  --``====< 0x0000989e      4cf397         jmp 0x97f3                  ; jump to new location
  --------> 0x000098a1      68             pla                         ; pull accumulator from stack
  ||  |||   0x000098a2      852e           sta 0x2e                    ; store accumulator in memory
  ||  |||   0x000098a4      68             pla                         ; pull accumulator from stack
  ||  |||   0x000098a5      852d           sta 0x2d                    ; store accumulator in memory
  ||  |||   0x000098a7      60             rts                         ; return from subroutine
  ||  |||   0x000098a8      0300           slo (0x00,x)
  ||  |||   0x000098aa      0102           ora (0x02,x)                ; "or" memory with accumulator
  ||  |||   0x000098ac      0102           ora (0x02,x)                ; "or" memory with accumulator
  ||  |||   0x000098ae      0300           slo (0x00,x)
  ||  |||   0x000098b0      00             brk                         ; force break
  ||  |||   0x000098b1      1f001f         slo 0x1f00,x
  ||  |||   0x000098b4      00             brk                         ; force break
  ||  |||   0x000098b5      00             brk                         ; force break
  ||  |||   0x000098b6      00             brk                         ; force break
  ||  |||   0x000098b7      00             brk                         ; force break
  ||  |||   0x000098b8      00             brk                         ; force break
  ||  |||   0x000098b9      00             brk                         ; force break
  ||  |||   0x000098ba      1f1f37         slo 0x371f,x
  ||  |||   0x000098bd      272f           rla 0x2f
  ||  |||   0x000098bf      3f00ae         rla 0xae00,x
  ||  |||   0x000098c2      de97a5         dec 0xa597,x                ; decrement memory by one
  ||  |||   0x000098c5      a918           lda #0x18                   ; load accumulator with memory
  ||  |||   0x000098c7      7d3d80         adc 0x803d,x                ; add memory to accumulator with carry
  ||  |||   0x000098ca      2907           and #0x07                   ; "and" memory with accumulator
  ||  |||   0x000098cc      85a9           sta 0xa9                    ; store accumulator in memory
  ||  |||   0x000098ce      a5aa           lda 0xaa                    ; load accumulator with memory
  ||  |||   0x000098d0      18             clc                         ; clear carry flag
  ||  |||   0x000098d1      7d4180         adc 0x8041,x                ; add memory to accumulator with carry
  ||  |||   0x000098d4      2907           and #0x07                   ; "and" memory with accumulator
  ||  |||   0x000098d6      85aa           sta 0xaa                    ; store accumulator in memory
  ||  |||   0x000098d8      60             rts                         ; return from subroutine
  ||  |||   0x000098d9      209e91         jsr 0x919e                  ; jump to new location saving return address
  ||  |||   0x000098dc      4a             lsr a                       ; shift right one bit (memory or accumulator)
  ||  |||   0x000098dd      4a             lsr a                       ; shift right one bit (memory or accumulator)
  ||  |||   0x000098de      4a             lsr a                       ; shift right one bit (memory or accumulator)
  ||  |||   0x000098df      4a             lsr a                       ; shift right one bit (memory or accumulator)
  ||  |||   0x000098e0      60             rts                         ; return from subroutine
  ||  |||   0x000098e1      a520           lda 0x20                    ; load accumulator with memory
  ||  |||   0x000098e3      c9d4           cmp #0xd4                   ; compare memory and accumulator
  || ,====< 0x000098e5      f003           beq 0x4b2108                ; branch on result zero
  || ||||   0x000098e7      eeeb98         inc 0x98eb                  ; increment memory by one
  || `----> 0x000098ea      a901           lda #0x01                   ; load accumulator with memory
  ||  |||   0x000098ec      c9b8           cmp #0xb8                   ; compare memory and accumulator
  || ,====< 0x000098ee      9005           bcc 0x4b2108                ; branch on carry clear
  || ||||   0x000098f0      a901           lda #0x01                   ; load accumulator with memory
  || ||||   0x000098f2      8dea98         sta 0x98ea                  ; store accumulator in memory
  || `----> 0x000098f5      8d4399         sta 0x9943                  ; store accumulator in memory
  ||  |||   0x000098f8      ac1980         ldy 0x8019                  ; load index y with memory
  ||  |||   0x000098fb      b93a99         lda 0x993a,y                ; load accumulator with memory
  ||  |||   0x000098fe      8d1c99         sta 0x991c                  ; store accumulator in memory
  ||  |||   0x00009901      b93e99         lda 0x993e,y                ; load accumulator with memory
  ||  |||   0x00009904      8d2899         sta 0x9928                  ; store accumulator in memory
  ||  |||   0x00009907      b93699         lda 0x9936,y                ; load accumulator with memory
  ||  |||   0x0000990a      8d2e99         sta 0x992e                  ; store accumulator in memory
  ||  |||   0x0000990d      b93299         lda 0x9932,y                ; load accumulator with memory
  ||  |||   0x00009910      aa             tax                         ; transfer accumulator to index x
  || .----> 0x00009911      bd50a4         lda 0xa450,x                ; load accumulator with memory
  || ||||   0x00009914      85fe           sta 0xfe                    ; store accumulator in memory
  || ||||   0x00009916      bdc0a3         lda 0xa3c0,x                ; load accumulator with memory
  || ||||   0x00009919      85ff           sta 0xff                    ; store accumulator in memory
  || ||||   0x0000991b      a0ff           ldy #0xff                   ; load index y with memory
  ||.-----> 0x0000991d      204299         jsr 0x9942                  ; jump to new location saving return address
  ========< 0x00009920      3004           bmi 0x4b2108                ; branch on result minus
  |||||||   0x00009922      a9aa           lda #0xaa                   ; load accumulator with memory
  |||||||   0x00009924      91fe           sta (0xfe),y                ; store accumulator in memory
  --------> 0x00009926      c8             iny                         ; increment index y by one
  |||||||   0x00009927      c0ff           cpy #0xff                   ; compare memory and index y
  ||`=====< 0x00009929      90f2           bcc 0x4b2108                ; branch on carry clear
  || ||||   0x0000992b      ca             dex                         ; decrement index x by one
  || ||||   0x0000992c      ca             dex                         ; decrement index x by one
  || ||||   0x0000992d      e0ff           cpx #0xff                   ; compare memory and index x
  || `====< 0x0000992f      b0e0           bcs 0x4b2108                ; branch on carry set
  ||  |||   0x00009931      60             rts                         ; return from subroutine
  ||  |||   0x00009932      8b6a           ane #0x6a
  ||  |||   0x00009934      58             cli                         ; clear interrupt disable bit
  ||  `===< 0x00009935      4c0425         jmp 0x2504                  ; jump to new location
  ||   ||   0x00009938      3440           nop 0x40,x                  ; no operation
  ||   ||   0x0000993a      0105           ora (0x05,x)                ; "or" memory with accumulator
  ||   ||   0x0000993c      08             php                         ; push processor status on stack
  ||   ||   0x0000993d      0913           ora #0x13                   ; "or" memory with accumulator
  ||   ||   0x0000993f      0f0c0b         slo 0x0b0c
  ||   ||   0x00009942      a901           lda #0x01                   ; load accumulator with memory
  ||   ||   0x00009944      6a             ror a                       ; rotate one bit right (memory or accumulator)
  ||  ,===< 0x00009945      9002           bcc 0x4b2108                ; branch on carry clear
  ||  |||   0x00009947      49b8           eor #0xb8                   ; "exclusive-or" memory with accumulator
  ||  `---> 0x00009949      8d4399         sta 0x9943                  ; store accumulator in memory
  ||   ||   0x0000994c      60             rts                         ; return from subroutine
  ||   ||   0x0000994d      38             sec                         ; set carry flag
  ||   ||   0x0000994e      6e419d         ror 0x9d41                  ; rotate one bit right (memory or accumulator)
  ||   ||   0x00009951      a520           lda 0x20                    ; load accumulator with memory
  ||   ||   0x00009953      c9d4           cmp #0xd4                   ; compare memory and accumulator
  ||  ,===< 0x00009955      d00e           bne 0x4b2108                ; branch on result not zero
  ||  |||   0x00009957      aef043         ldx 0x43f0                  ; load index x with memory
  ||  |||   0x0000995a      bdeea6         lda 0xa6ee,x                ; load accumulator with memory
  ||  |||   0x0000995d      8df543         sta 0x43f5                  ; store accumulator in memory
  ||  |||   0x00009960      a901           lda #0x01                   ; load accumulator with memory
  ||  |||   0x00009962      8d469a         sta 0x9a46                  ; store accumulator in memory
  ||  `---> 0x00009965      adf543         lda 0x43f5                  ; load accumulator with memory
  ||   ||   0x00009968      2990           and #0x90                   ; "and" memory with accumulator
  ||  ,===< 0x0000996a      3008           bmi 0x4b2108                ; branch on result minus
  ||  |||   0x0000996c      a980           lda #0x80                   ; load accumulator with memory
  ||  |||   0x0000996e      8d3b9a         sta 0x9a3b                  ; store accumulator in memory
  || ,====< 0x00009971      4c8999         jmp 0x9989                  ; jump to new location
  || |`---> 0x00009974      0a             asl a                       ; shift left one bit (memory or accumulator)
  || | ||   0x00009975      0a             asl a                       ; shift left one bit (memory or accumulator)
  || | ||   0x00009976      0a             asl a                       ; shift left one bit (memory or accumulator)
  || |,===< 0x00009977      3008           bmi 0x4b2108                ; branch on result minus
  || ||||   0x00009979      a900           lda #0x00                   ; load accumulator with memory
  || ||||   0x0000997b      8d3b9a         sta 0x9a3b                  ; store accumulator in memory
  ||,=====< 0x0000997e      4c8999         jmp 0x9989                  ; jump to new location
  ||||`---> 0x00009981      a901           lda #0x01                   ; load accumulator with memory
  |||| ||   0x00009983      8d3b9a         sta 0x9a3b                  ; store accumulator in memory
  ||||,===< 0x00009986      4cfe99         jmp 0x99fe                  ; jump to new location
  ||``----> 0x00009989      adf543         lda 0x43f5                  ; load accumulator with memory
  ||  |||   0x0000998c      29f0           and #0xf0                   ; "and" memory with accumulator
  ||  |||   0x0000998e      8d3a9a         sta 0x9a3a                  ; store accumulator in memory
  ||  |||   0x00009991      0a             asl a                       ; shift left one bit (memory or accumulator)
  || ,====< 0x00009992      3006           bmi 0x4b2108                ; branch on result minus
  || ||||   0x00009994      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||,=====< 0x00009995      3028           bmi 0x4b2108                ; branch on result minus
  ========< 0x00009997      4cfe99         jmp 0x99fe                  ; jump to new location
  |||`----> 0x0000999a      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||,====< 0x0000999b      3032           bmi 0x4b2108                ; branch on result minus
  |||||||   0x0000999d      adf543         lda 0x43f5                  ; load accumulator with memory
  |||||||   0x000099a0      290f           and #0x0f                   ; "and" memory with accumulator
  |||||||   0x000099a2      38             sec                         ; set carry flag
  |||||||   0x000099a3      e901           sbc #0x01                   ; subtract memory from accumulator with borrow
  ========< 0x000099a5      100d           bpl 0x4b2108                ; branch on result plus
  |||||||   0x000099a7      a90f           lda #0x0f                   ; load accumulator with memory
  |||||||   0x000099a9      0d3a9a         ora 0x9a3a                  ; "or" memory with accumulator
  |||||||   0x000099ac      8df543         sta 0x43f5                  ; store accumulator in memory
  |||||||   0x000099af      a900           lda #0x00                   ; load accumulator with memory
  ========< 0x000099b1      4c019a         jmp 0x9a01                  ; jump to new location
  --------> 0x000099b4      0d3a9a         ora 0x9a3a                  ; "or" memory with accumulator
  |||||||   0x000099b7      8df543         sta 0x43f5                  ; store accumulator in memory
  |||||||   0x000099ba      a901           lda #0x01                   ; load accumulator with memory
  ========< 0x000099bc      4c019a         jmp 0x9a01                  ; jump to new location
  ||`-----> 0x000099bf      adf543         lda 0x43f5                  ; load accumulator with memory
  || ||||   0x000099c2      2901           and #0x01                   ; "and" memory with accumulator
  || ||||   0x000099c4      4901           eor #0x01                   ; "exclusive-or" memory with accumulator
  || ||||   0x000099c6      0d3a9a         ora 0x9a3a                  ; "or" memory with accumulator
  || ||||   0x000099c9      8df543         sta 0x43f5                  ; store accumulator in memory
  ||,=====< 0x000099cc      4c019a         jmp 0x9a01                  ; jump to new location
  |||`----> 0x000099cf      adf543         lda 0x43f5                  ; load accumulator with memory
  ||| |||   0x000099d2      290f           and #0x0f                   ; "and" memory with accumulator
  ||| |||   0x000099d4      38             sec                         ; set carry flag
  ||| |||   0x000099d5      e901           sbc #0x01                   ; subtract memory from accumulator with borrow
  |||,====< 0x000099d7      1002           bpl 0x4b2108                ; branch on result plus
  |||||||   0x000099d9      a903           lda #0x03                   ; load accumulator with memory
  |||`----> 0x000099db      0d3a9a         ora 0x9a3a                  ; "or" memory with accumulator
  ||| |||   0x000099de      8df543         sta 0x43f5                  ; store accumulator in memory
  ||| |||   0x000099e1      290f           and #0x0f                   ; "and" memory with accumulator
  ||| |||   0x000099e3      aa             tax                         ; transfer accumulator to index x
  ||| |||   0x000099e4      bd3d9a         lda 0x9a3d,x                ; load accumulator with memory
  ||| |||   0x000099e7      48             pha                         ; push accumulator on stack
  ||| |||   0x000099e8      dd419a         cmp 0x9a41,x                ; compare memory and accumulator
  |||,====< 0x000099eb      f008           beq 0x4b2108                ; branch on result zero
  |||||||   0x000099ed      a901           lda #0x01                   ; load accumulator with memory
  |||||||   0x000099ef      8d3b9a         sta 0x9a3b                  ; store accumulator in memory
  ========< 0x000099f2      4cfa99         jmp 0x99fa                  ; jump to new location
  |||`----> 0x000099f5      a900           lda #0x00                   ; load accumulator with memory
  ||| |||   0x000099f7      8d3b9a         sta 0x9a3b                  ; store accumulator in memory
  --------> 0x000099fa      68             pla                         ; pull accumulator from stack
  |||,====< 0x000099fb      4c019a         jmp 0x9a01                  ; jump to new location
  ----`---> 0x000099fe      20459a         jsr 0x9a45                  ; jump to new location saving return address
  --``----> 0x00009a01      2901           and #0x01                   ; "and" memory with accumulator
  ||   ||   0x00009a03      aa             tax                         ; transfer accumulator to index x
  ||   ||   0x00009a04      ad1980         lda 0x8019                  ; load accumulator with memory
  ||   ||   0x00009a07      38             sec                         ; set carry flag
  ||   ||   0x00009a08      e901           sbc #0x01                   ; subtract memory from accumulator with borrow
  ||  ,===< 0x00009a0a      902b           bcc 0x4b2108                ; branch on carry clear
  ||  |||   0x00009a0c      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||  |||   0x00009a0d      48             pha                         ; push accumulator on stack
  ||  |||   0x00009a0e      7d389a         adc 0x9a38,x                ; add memory to accumulator with carry
  ||  |||   0x00009a11      8e219a         stx 0x9a21                  ; store index x in memory
  ||  |||   0x00009a14      aa             tax                         ; transfer accumulator to index x
  ||  |||   0x00009a15      207f9f         jsr 0x9f7f                  ; jump to new location saving return address
  ||  |||   0x00009a18      20279f         jsr 0x9f27                  ; jump to new location saving return address
  ||  |||   0x00009a1b      ad3b9a         lda 0x9a3b                  ; load accumulator with memory
  || ,====< 0x00009a1e      3005           bmi 0x4b2108                ; branch on result minus
  || ||||   0x00009a20      49ff           eor #0xff                   ; "exclusive-or" memory with accumulator
  ||,=====< 0x00009a22      4c289a         jmp 0x9a28                  ; jump to new location
  |||`----> 0x00009a25      20459a         jsr 0x9a45                  ; jump to new location saving return address
  ||`-----> 0x00009a28      2901           and #0x01                   ; "and" memory with accumulator
  ||  |||   0x00009a2a      aa             tax                         ; transfer accumulator to index x
  ||  |||   0x00009a2b      68             pla                         ; pull accumulator from stack
  ||  |||   0x00009a2c      18             clc                         ; clear carry flag
  ||  |||   0x00009a2d      7d389a         adc 0x9a38,x                ; add memory to accumulator with carry
  ||  |||   0x00009a30      aa             tax                         ; transfer accumulator to index x
  ||  |||   0x00009a31      201ba0         jsr 0xa01b                  ; jump to new location saving return address
  ||  |||   0x00009a34      20e69d         jsr 0x9de6                  ; jump to new location saving return address
  ||  `---> 0x00009a37      60             rts                         ; return from subroutine
  ||   ||   0x00009a38      474d           sre 0x4d
  ||   ||   0x00009a3a      00             brk                         ; force break
  ||   ||   0x00009a3b      00             brk                         ; force break
  ||   ||   0x00009a3c      00             brk                         ; force break
  ||   ||   0x00009a3d      00             brk                         ; force break
  ||   ||   0x00009a3e      0101           ora (0x01,x)                ; "or" memory with accumulator
  ||   ||   0x00009a40      0101           ora (0x01,x)                ; "or" memory with accumulator
  ||   ||   0x00009a42      0100           ora (0x00,x)                ; "or" memory with accumulator
  ||   ||   0x00009a44      01a9           ora (0xa9,x)                ; "or" memory with accumulator
  ||   ||   0x00009a46      ff6a90         isb 0x906a,x
  ||  |||   0x00009a49      02             hlt
  ||  |||   0x00009a4a      49b8           eor #0xb8                   ; "exclusive-or" memory with accumulator
  ||  `---> 0x00009a4c      8d469a         sta 0x9a46                  ; store accumulator in memory
  ||   ||   0x00009a4f      60             rts                         ; return from subroutine
  ||   ||   0x00009a50      aec098         ldx 0x98c0                  ; load index x with memory
  ||   ||   0x00009a53      bdbe9a         lda 0x9abe,x                ; load accumulator with memory
  ||   ||   0x00009a56      8dbd9a         sta 0x9abd                  ; store accumulator in memory
  ||   ||   0x00009a59      a520           lda 0x20                    ; load accumulator with memory
  ||   ||   0x00009a5b      c9d4           cmp #0xd4                   ; compare memory and accumulator
  ||  ,===< 0x00009a5d      f00f           beq 0x4b2108                ; branch on result zero
  ||  |||   0x00009a5f      febe9a         inc 0x9abe,x                ; increment memory by one
  ||  |||   0x00009a62      bdbe9a         lda 0x9abe,x                ; load accumulator with memory
  ||  |||   0x00009a65      c903           cmp #0x03                   ; compare memory and accumulator
  || ,====< 0x00009a67      9005           bcc 0x4b2108                ; branch on carry clear
  || ||||   0x00009a69      a900           lda #0x00                   ; load accumulator with memory
  || ||||   0x00009a6b      9dbe9a         sta 0x9abe,x                ; store accumulator in memory
  ||.``---> 0x00009a6e      aec098         ldx 0x98c0                  ; load index x with memory
  |||  ||   0x00009a71      bdc29a         lda 0x9ac2,x                ; load accumulator with memory
  |||  ||   0x00009a74      18             clc                         ; clear carry flag
  |||  ||   0x00009a75      6dbd9a         adc 0x9abd                  ; add memory to accumulator with carry
  |||  ||   0x00009a78      a8             tay                         ; transfer accumulator to index y
  |||  ||   0x00009a79      b9e69a         lda 0x9ae6,y                ; load accumulator with memory
  ||| ,===< 0x00009a7c      d001           bne 0x4b2108                ; branch on result not zero
  ||| |||   0x00009a7e      60             rts                         ; return from subroutine
  ||| `---> 0x00009a7f      48             pha                         ; push accumulator on stack
  |||  ||   0x00009a80      291f           and #0x1f                   ; "and" memory with accumulator
  |||  ||   0x00009a82      18             clc                         ; clear carry flag
  |||  ||   0x00009a83      aec098         ldx 0x98c0                  ; load index x with memory
  |||  ||   0x00009a86      7dc69a         adc 0x9ac6,x                ; add memory to accumulator with carry
  |||  ||   0x00009a89      a8             tay                         ; transfer accumulator to index y
  |||  ||   0x00009a8a      b950a4         lda 0xa450,y                ; load accumulator with memory
  |||  ||   0x00009a8d      85fe           sta 0xfe                    ; store accumulator in memory
  |||  ||   0x00009a8f      b9c0a3         lda 0xa3c0,y                ; load accumulator with memory
  |||  ||   0x00009a92      85ff           sta 0xff                    ; store accumulator in memory
  |||  ||   0x00009a94      68             pla                         ; pull accumulator from stack
  |||  ||   0x00009a95      4a             lsr a                       ; shift right one bit (memory or accumulator)
  |||  ||   0x00009a96      4a             lsr a                       ; shift right one bit (memory or accumulator)
  |||  ||   0x00009a97      4a             lsr a                       ; shift right one bit (memory or accumulator)
  |||  ||   0x00009a98      4a             lsr a                       ; shift right one bit (memory or accumulator)
  |||  ||   0x00009a99      4a             lsr a                       ; shift right one bit (memory or accumulator)
  |||  ||   0x00009a9a      aa             tax                         ; transfer accumulator to index x
  |||  ||   0x00009a9b      bdca9a         lda 0x9aca,x                ; load accumulator with memory
  |||  ||   0x00009a9e      a8             tay                         ; transfer accumulator to index y
  |||  ||   0x00009a9f      bdd89a         lda 0x9ad8,x                ; load accumulator with memory
  |||  ||   0x00009aa2      31fe           and (0xfe),y                ; "and" memory with accumulator
  |||  ||   0x00009aa4      91fe           sta (0xfe),y                ; store accumulator in memory
  |||  ||   0x00009aa6      bdd19a         lda 0x9ad1,x                ; load accumulator with memory
  |||  ||   0x00009aa9      a8             tay                         ; transfer accumulator to index y
  |||  ||   0x00009aaa      bddf9a         lda 0x9adf,x                ; load accumulator with memory
  |||  ||   0x00009aad      31fe           and (0xfe),y                ; "and" memory with accumulator
  |||  ||   0x00009aaf      91fe           sta (0xfe),y                ; store accumulator in memory
  |||  ||   0x00009ab1      eebd9a         inc 0x9abd                  ; increment memory by one
  |||  ||   0x00009ab4      eebd9a         inc 0x9abd                  ; increment memory by one
  |||  ||   0x00009ab7      eebd9a         inc 0x9abd                  ; increment memory by one
  ||`=====< 0x00009aba      4c6e9a         jmp 0x9a6e                  ; jump to new location
  ||   ||   0x00009abd      00             brk                         ; force break
  ||   ||   0x00009abe      00             brk                         ; force break
  ||   ||   0x00009abf      00             brk                         ; force break
  ||   ||   0x00009ac0      00             brk                         ; force break
  ||   ||   0x00009ac1      00             brk                         ; force break
  ||   ||   0x00009ac2      00             brk                         ; force break
  ||   ||   0x00009ac3      213c           and (0x3c,x)                ; "and" memory with accumulator
  ||   ||   0x00009ac5      4659           lsr 0x59                    ; shift right one bit (memory or accumulator)
  ||   ||   0x00009ac7      4d4947         eor 0x4749                  ; "exclusive-or" memory with accumulator
  ||   ||   0x00009aca      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009acc      0908           ora #0x08                   ; "or" memory with accumulator
  ||   ||   0x00009ace      08             php                         ; push processor status on stack
  ||   ||   0x00009acf      08             php                         ; push processor status on stack
  ||   ||   0x00009ad0      08             php                         ; push processor status on stack
  ||   ||   0x00009ad1      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009ad2      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009ad3      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009ad4      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009ad5      0b0b           anc #0x0b
  ||   ||   0x00009ad7      0bdf           anc #0xdf
  ||   ||   0x00009ad9      f7fd           isb 0xfd,x
  ||   ||   0x00009adb      bfeffb         lax 0xfbef,y
  ||   ||   0x00009ade      fefefb         inc 0xfbfe,x                ; increment memory by one
  ||   ||   0x00009ae1      efbffd         isb 0xfdbf
  ||   ||   0x00009ae4      f7df           isb 0xdf,x
  ||   ||   0x00009ae6      110f           ora (0x0f),y                ; "or" memory with accumulator
  ||   ||   0x00009ae8      0d0b09         ora 0x090b                  ; "or" memory with accumulator
  ||   ||   0x00009aeb      0705           slo 0x05
  ||   ||   0x00009aed      0321           slo (0x21,x)
  ||   ||   0x00009aef      40             rti                         ; return from interrupt
  ||   ||   0x00009af0      60             rts                         ; return from subroutine
  ||   ||   0x00009af1      81a3           sta (0xa3,x)                ; store accumulator in memory
  ||   ||   0x00009af3      c6c9           dec 0xc9                    ; decrement memory by one
  ||   ||   0x00009af5      cfd5d9         dcp 0xd9d5
  ||   ||   0x00009af8      28             plp                         ; pull processor status from stack
  ||   ||   0x00009af9      4768           sre 0x68
  ||   ||   0x00009afb      8a             txa                         ; transfer index x to accumulator
  ||   ||   0x00009afc      8d9298         sta 0x9892                  ; store accumulator in memory
  ||   ||   0x00009aff      2e5154         rol 0x5451                  ; rotate one bit left (memory or accumulator)
  ||   ||   0x00009b02      7a             nop                         ; no operation
  ||   ||   0x00009b03      00             brk                         ; force break
  ||   ||   0x00009b04      00             brk                         ; force break
  ||   ||   0x00009b05      00             brk                         ; force break
  ||   ||   0x00009b06      00             brk                         ; force break
  ||   ||   0x00009b07      0c0a08         nop 0x080a                  ; no operation
  ||   ||   0x00009b0a      0604           asl 0x04                    ; shift left one bit (memory or accumulator)
  ||   ||   0x00009b0c      02             hlt
  ||   ||   0x00009b0d      2140           and (0x40,x)                ; "and" memory with accumulator
  ||   ||   0x00009b0f      60             rts                         ; return from subroutine
  ||   ||   0x00009b10      82a5           nop #0xa5                   ; no operation
  ||   ||   0x00009b12      a9ad           lda #0xad                   ; load accumulator with memory
  ||   ||   0x00009b14      b2             hlt
  ||   ||   0x00009b15      2544           and 0x44                    ; "and" memory with accumulator
  ||   ||   0x00009b17      6668           ror 0x68                    ; rotate one bit right (memory or accumulator)
  ||   ||   0x00009b19      6c732b         jmp (0x2b73)                ; jump to new location
  ||   ||   0x00009b1c      2d3100         and 0x0031                  ; "and" memory with accumulator
  ||   ||   0x00009b1f      00             brk                         ; force break
  ||   ||   0x00009b20      00             brk                         ; force break
  ||   ||   0x00009b21      00             brk                         ; force break
  ||   ||   0x00009b22      0301           slo (0x01,x)
  ||   ||   0x00009b24      204244         jsr 0x4442                  ; jump to new location saving return address
  ||   ||   0x00009b27      4700           sre 0x00
  ||   ||   0x00009b29      00             brk                         ; force break
  ||   ||   0x00009b2a      00             brk                         ; force break
  ||   ||   0x00009b2b      00             brk                         ; force break
  ||   ||   0x00009b2c      0302           slo (0x02,x)
  ||   ||   0x00009b2e      0122           ora (0x22,x)                ; "or" memory with accumulator
  ||   ||   0x00009b30      2300           rla (0x00,x)
  ||   ||   0x00009b32      00             brk                         ; force break
  ||   ||   0x00009b33      00             brk                         ; force break
  ||   ||   0x00009b34      00             brk                         ; force break
  ||   ||   0x00009b35      a900           lda #0x00                   ; load accumulator with memory
  ||   ||   0x00009b37      85fe           sta 0xfe                    ; store accumulator in memory
  ||   ||   0x00009b39      a9a7           lda #0xa7                   ; load accumulator with memory
  ||   ||   0x00009b3b      85ff           sta 0xff                    ; store accumulator in memory
  ||  .---> 0x00009b3d      a000           ldy #0x00                   ; load index y with memory
  ||  |||   0x00009b3f      a900           lda #0x00                   ; load accumulator with memory
  || .----> 0x00009b41      91fe           sta (0xfe),y                ; store accumulator in memory
  || ||||   0x00009b43      c8             iny                         ; increment index y by one
  || `====< 0x00009b44      d0fb           bne 0x4b2108                ; branch on result not zero
  ||  |||   0x00009b46      e6ff           inc 0xff                    ; increment memory by one
  ||  |||   0x00009b48      a5ff           lda 0xff                    ; load accumulator with memory
  ||  |||   0x00009b4a      c9b8           cmp #0xb8                   ; compare memory and accumulator
  ||  `===< 0x00009b4c      90ef           bcc 0x4b2108                ; branch on carry clear
  ||   ||   0x00009b4e      60             rts                         ; return from subroutine
  ||   ||   0x00009b4f      00             brk                         ; force break
  ||   ||   0x00009b50      00             brk                         ; force break
  ||   ||   0x00009b51      00             brk                         ; force break
  ||   ||   0x00009b52      00             brk                         ; force break
  ||   ||   0x00009b53      00             brk                         ; force break
  ||   ||   0x00009b54      00             brk                         ; force break
  ||   ||   0x00009b55      00             brk                         ; force break
  ||   ||   0x00009b56      00             brk                         ; force break
  ||   ||   0x00009b57      00             brk                         ; force break
  ||   ||   0x00009b58      00             brk                         ; force break
  ||   ||   0x00009b59      00             brk                         ; force break
  ||   ||   0x00009b5a      00             brk                         ; force break
  ||   ||   0x00009b5b      00             brk                         ; force break
  ||   ||   0x00009b5c      00             brk                         ; force break
  ||   ||   0x00009b5d      00             brk                         ; force break
  ||   ||   0x00009b5e      00             brk                         ; force break
  ||   ||   0x00009b5f      00             brk                         ; force break
  ||   ||   0x00009b60      00             brk                         ; force break
  ||   ||   0x00009b61      00             brk                         ; force break
  ||   ||   0x00009b62      00             brk                         ; force break
  ||   ||   0x00009b63      00             brk                         ; force break
  ||   ||   0x00009b64      00             brk                         ; force break
  ||   ||   0x00009b65      00             brk                         ; force break
  ||   ||   0x00009b66      00             brk                         ; force break
  ||   ||   0x00009b67      00             brk                         ; force break
  ||   ||   0x00009b68      00             brk                         ; force break
  ||   ||   0x00009b69      00             brk                         ; force break
  ||   ||   0x00009b6a      00             brk                         ; force break
  ||   ||   0x00009b6b      00             brk                         ; force break
  ||   ||   0x00009b6c      00             brk                         ; force break
  ||   ||   0x00009b6d      00             brk                         ; force break
  ||   ||   0x00009b6e      48             pha                         ; push accumulator on stack
  ||   ||   0x00009b6f      48             pha                         ; push accumulator on stack
  ||   ||   0x00009b70      48             pha                         ; push accumulator on stack
  ||   ||   0x00009b71      48             pha                         ; push accumulator on stack
  ||   ||   0x00009b72      48             pha                         ; push accumulator on stack
  ||   ||   0x00009b73      48             pha                         ; push accumulator on stack
  ||   ||   0x00009b74      48             pha                         ; push accumulator on stack
  ||   ||   0x00009b75      48             pha                         ; push accumulator on stack
  ||   ||   0x00009b76      48             pha                         ; push accumulator on stack
  ||   ||   0x00009b77      48             pha                         ; push accumulator on stack
  ||   ||   0x00009b78      48             pha                         ; push accumulator on stack
  ||   ||   0x00009b79      48             pha                         ; push accumulator on stack
  ||   ||   0x00009b7a      48             pha                         ; push accumulator on stack
  ||   ||   0x00009b7b      48             pha                         ; push accumulator on stack
  ||   ||   0x00009b7c      48             pha                         ; push accumulator on stack
  ||   ||   0x00009b7d      48             pha                         ; push accumulator on stack
  ||   ||   0x00009b7e      79795d         adc 0x5d79,y                ; add memory to accumulator with carry
  ||   ||   0x00009b81      5d4f4f         eor 0x4f4f,x                ; "exclusive-or" memory with accumulator
  ||   ||   0x00009b84      48             pha                         ; push accumulator on stack
  ||   ||   0x00009b85      48             pha                         ; push accumulator on stack
  ||   ||   0x00009b86      79795d         adc 0x5d79,y                ; add memory to accumulator with carry
  ||   ||   0x00009b89      5d4f4f         eor 0x4f4f,x                ; "exclusive-or" memory with accumulator
  ||   ||   0x00009b8c      48             pha                         ; push accumulator on stack
  ||   ||   0x00009b8d      48             pha                         ; push accumulator on stack
  ||   ||   0x00009b8e      79795d         adc 0x5d79,y                ; add memory to accumulator with carry
  ||   ||   0x00009b91      5d4f4f         eor 0x4f4f,x                ; "exclusive-or" memory with accumulator
  ||   ||   0x00009b94      48             pha                         ; push accumulator on stack
  ||   ||   0x00009b95      48             pha                         ; push accumulator on stack
  ||   ||   0x00009b96      3636           rol 0x36,x                  ; rotate one bit left (memory or accumulator)
  ||   ||   0x00009b98      42             hlt
  ||   ||   0x00009b99      42             hlt
  ||   ||   0x00009b9a      4646           lsr 0x46                    ; shift right one bit (memory or accumulator)
  ||   ||   0x00009b9c      3636           rol 0x36,x                  ; rotate one bit left (memory or accumulator)
  ||   ||   0x00009b9e      42             hlt
  ||   ||   0x00009b9f      42             hlt
  ||   ||   0x00009ba0      4646           lsr 0x46                    ; shift right one bit (memory or accumulator)
  ||   ||   0x00009ba2      8f8f8f         sax 0x8f8f
  ||   ||   0x00009ba5      8f8f8f         sax 0x8f8f
  ||   ||   0x00009ba8      8f8f8f         sax 0x8f8f
  ||   ||   0x00009bab      8f8f8f         sax 0x8f8f
  ||   ||   0x00009bae      8f8f8f         sax 0x8f8f
  ||   ||   0x00009bb1      8f8f8f         sax 0x8f8f
  ||   ||   0x00009bb4      8f8f8f         sax 0x8f8f
  ||   ||   0x00009bb7      8f8f8f         sax 0x8f8f
  ||   ||   0x00009bba      8f8f8f         sax 0x8f8f
  ||   ||   0x00009bbd      8f8f8f         sax 0x8f8f
  ||   ||   0x00009bc0      8f8d8d         sax 0x8d8d
  ||   ||   0x00009bc3      78             sei                         ; set interrupt disable status
  ||   ||   0x00009bc4      78             sei                         ; set interrupt disable status
  ||   ||   0x00009bc5      5c5c4e         nop 0x4e5c,x                ; no operation
  ||   ||   0x00009bc8      4e8d8d         lsr 0x8d8d                  ; shift right one bit (memory or accumulator)
  ||   ||   0x00009bcb      78             sei                         ; set interrupt disable status
  ||   ||   0x00009bcc      78             sei                         ; set interrupt disable status
  ||   ||   0x00009bcd      5c5c4e         nop 0x4e5c,x                ; no operation
  ||   ||   0x00009bd0      4e8d8d         lsr 0x8d8d                  ; shift right one bit (memory or accumulator)
  ||   ||   0x00009bd3      78             sei                         ; set interrupt disable status
  ||   ||   0x00009bd4      78             sei                         ; set interrupt disable status
  ||   ||   0x00009bd5      5c5c4e         nop 0x4e5c,x                ; no operation
  ||   ||   0x00009bd8      4e8d8d         lsr 0x8d8d                  ; shift right one bit (memory or accumulator)
  ||   ||   0x00009bdb      78             sei                         ; set interrupt disable status
  ||   ||   0x00009bdc      78             sei                         ; set interrupt disable status
  ||   ||   0x00009bdd      5c5c4e         nop 0x4e5c,x                ; no operation
  ||   ||   0x00009be0      4e8d8d         lsr 0x8d8d                  ; shift right one bit (memory or accumulator)
  ||   ||   0x00009be3      78             sei                         ; set interrupt disable status
  ||   ||   0x00009be4      78             sei                         ; set interrupt disable status
  ||   ||   0x00009be5      5c5c4e         nop 0x4e5c,x                ; no operation
  ||   ||   0x00009be8      4e7474         lsr 0x7474                  ; shift right one bit (memory or accumulator)
  ||   ||   0x00009beb      5656           lsr 0x56,x                  ; shift right one bit (memory or accumulator)
  ||   ||   0x00009bed      4d4d74         eor 0x744d                  ; "exclusive-or" memory with accumulator
  ||   ||   0x00009bf0      7456           nop 0x56,x                  ; no operation
  ||   ||   0x00009bf2      564d           lsr 0x4d,x                  ; shift right one bit (memory or accumulator)
  ||   ||   0x00009bf4      4d0003         eor 0x0300                  ; "exclusive-or" memory with accumulator
  ||   ||   0x00009bf7      0709           slo 0x09
  ||   ||   0x00009bf9      00             brk                         ; force break
  ||   ||   0x00009bfa      0307           slo (0x07,x)
  ||   ||   0x00009bfc      0900           ora #0x00                   ; "or" memory with accumulator
  ||   ||   0x00009bfe      0307           slo (0x07,x)
  ||   ||   0x00009c00      0900           ora #0x00                   ; "or" memory with accumulator
  ||   ||   0x00009c02      0307           slo (0x07,x)
  ||   ||   0x00009c04      0900           ora #0x00                   ; "or" memory with accumulator
  ||   ||   0x00009c06      0307           slo (0x07,x)
  ||   ||   0x00009c08      0900           ora #0x00                   ; "or" memory with accumulator
  ||   ||   0x00009c0a      0307           slo (0x07,x)
  ||   ||   0x00009c0c      0900           ora #0x00                   ; "or" memory with accumulator
  ||   ||   0x00009c0e      0307           slo (0x07,x)
  ||   ||   0x00009c10      0900           ora #0x00                   ; "or" memory with accumulator
  ||   ||   0x00009c12      00             brk                         ; force break
  ||   ||   0x00009c13      00             brk                         ; force break
  ||   ||   0x00009c14      0505           ora 0x05                    ; "or" memory with accumulator
  ||   ||   0x00009c16      0707           slo 0x07
  ||   ||   0x00009c18      08             php                         ; push processor status on stack
  ||   ||   0x00009c19      08             php                         ; push processor status on stack
  ||   ||   0x00009c1a      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c1c      0505           ora 0x05                    ; "or" memory with accumulator
  ||   ||   0x00009c1e      0707           slo 0x07
  ||   ||   0x00009c20      08             php                         ; push processor status on stack
  ||   ||   0x00009c21      08             php                         ; push processor status on stack
  ||   ||   0x00009c22      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c24      0505           ora 0x05                    ; "or" memory with accumulator
  ||   ||   0x00009c26      0707           slo 0x07
  ||   ||   0x00009c28      08             php                         ; push processor status on stack
  ||   ||   0x00009c29      08             php                         ; push processor status on stack
  ||   ||   0x00009c2a      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c2c      0505           ora 0x05                    ; "or" memory with accumulator
  ||   ||   0x00009c2e      0707           slo 0x07
  ||   ||   0x00009c30      08             php                         ; push processor status on stack
  ||   ||   0x00009c31      08             php                         ; push processor status on stack
  ||   ||   0x00009c32      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c34      0505           ora 0x05                    ; "or" memory with accumulator
  ||   ||   0x00009c36      0707           slo 0x07
  ||   ||   0x00009c38      08             php                         ; push processor status on stack
  ||   ||   0x00009c39      08             php                         ; push processor status on stack
  ||   ||   0x00009c3a      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c3c      0707           slo 0x07
  ||   ||   0x00009c3e      0707           slo 0x07
  ||   ||   0x00009c40      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c42      0707           slo 0x07
  ||   ||   0x00009c44      0707           slo 0x07
  ||   ||   0x00009c46      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c48      02             hlt
  ||   ||   0x00009c49      0608           asl 0x08                    ; shift left one bit (memory or accumulator)
  ||   ||   0x00009c4b      0902           ora #0x02                   ; "or" memory with accumulator
  ||   ||   0x00009c4d      0608           asl 0x08                    ; shift left one bit (memory or accumulator)
  ||   ||   0x00009c4f      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c51      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c53      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c55      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c57      0902           ora #0x02                   ; "or" memory with accumulator
  ||   ||   0x00009c59      0608           asl 0x08                    ; shift left one bit (memory or accumulator)
  ||   ||   0x00009c5b      0902           ora #0x02                   ; "or" memory with accumulator
  ||   ||   0x00009c5d      0608           asl 0x08                    ; shift left one bit (memory or accumulator)
  ||   ||   0x00009c5f      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c61      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c63      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c65      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c67      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c69      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c6b      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c6d      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c6f      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c71      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c73      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c75      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c77      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c79      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c7b      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c7d      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c7f      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c81      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c83      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c85      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c87      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c89      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c8b      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c8d      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c8f      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c91      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c93      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c95      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c97      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c99      0909           ora #0x09                   ; "or" memory with accumulator
  ||   ||   0x00009c9b      110d           ora (0x0d),y                ; "or" memory with accumulator
  ||   ||   0x00009c9d      0b0a           anc #0x0a
  ||   ||   0x00009c9f      110d           ora (0x0d),y                ; "or" memory with accumulator
  ||   ||   0x00009ca1      0b0a           anc #0x0a
  ||   ||   0x00009ca3      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009ca4      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009ca5      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009ca6      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009ca7      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009ca8      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009ca9      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009caa      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cab      110d           ora (0x0d),y                ; "or" memory with accumulator
  ||   ||   0x00009cad      0b0a           anc #0x0a
  ||   ||   0x00009caf      110d           ora (0x0d),y                ; "or" memory with accumulator
  ||   ||   0x00009cb1      0b0a           anc #0x0a
  ||   ||   0x00009cb3      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cb4      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cb5      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cb6      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cb7      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cb8      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cb9      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cba      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cbb      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cbc      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cbd      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cbe      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cbf      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cc0      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cc1      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cc2      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cc3      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cc4      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cc5      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cc6      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cc7      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cc8      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cc9      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cca      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009ccb      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009ccc      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009ccd      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cce      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009ccf      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cd0      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cd1      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cd2      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cd3      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cd4      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cd5      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cd6      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cd7      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cd8      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cd9      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cda      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cdb      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cdc      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cdd      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cde      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cdf      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009ce0      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009ce1      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009ce2      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009ce3      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009ce4      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009ce5      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009ce6      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009ce7      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009ce8      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009ce9      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cea      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009ceb      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cec      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009ced      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009cee      1310           slo (0x10),y
  ||  |||   0x00009cf0      0c0a13         nop 0x130a                  ; no operation
  || ,====< 0x00009cf3      100c           bpl 0x4b2108                ; branch on result plus
  || ||||   0x00009cf5      0a             asl a                       ; shift left one bit (memory or accumulator)
  || ||||   0x00009cf6      1310           slo (0x10),y
  |||||||   0x00009cf8      0c0a13         nop 0x130a                  ; no operation
  ========< 0x00009cfb      100c           bpl 0x4b2108                ; branch on result plus
  ||||`---> 0x00009cfd      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||| ||   0x00009cfe      1310           slo (0x10),y
  |||||||   0x00009d00      0c0a13         nop 0x130a                  ; no operation
  |||,====< 0x00009d03      100c           bpl 0x4b2108                ; branch on result plus
  ||`-----> 0x00009d05      0a             asl a                       ; shift left one bit (memory or accumulator)
  || ||||   0x00009d06      1310           slo (0x10),y
  |||||||   0x00009d08      0c0a13         nop 0x130a                  ; no operation
  |||||||   0x00009d0b      1313           slo (0x13),y
  ||||`---> 0x00009d0d      0e0e0c         asl 0x0c0e                  ; shift left one bit (memory or accumulator)
  |||| ||   0x00009d10      0c0b0b         nop 0x0b0b                  ; no operation
  |||  ||   0x00009d13      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||  ||   0x00009d14      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||`-----> 0x00009d15      0e0e0c         asl 0x0c0e                  ; shift left one bit (memory or accumulator)
  ||   ||   0x00009d18      0c0b0b         nop 0x0b0b                  ; no operation
  ||   ||   0x00009d1b      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009d1c      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009d1d      0e0e0c         asl 0x0c0e                  ; shift left one bit (memory or accumulator)
  ||   ||   0x00009d20      0c0b0b         nop 0x0b0b                  ; no operation
  ||   ||   0x00009d23      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009d24      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009d25      0e0e0c         asl 0x0c0e                  ; shift left one bit (memory or accumulator)
  ||   ||   0x00009d28      0c0b0b         nop 0x0b0b                  ; no operation
  ||   ||   0x00009d2b      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009d2c      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009d2d      0e0e0c         asl 0x0c0e                  ; shift left one bit (memory or accumulator)
  ||   ||   0x00009d30      0c0b0b         nop 0x0b0b                  ; no operation
  ||   ||   0x00009d33      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009d34      0a             asl a                       ; shift left one bit (memory or accumulator)
  ||   ||   0x00009d35      0c0c0c         nop 0x0c0c                  ; no operation
  ||   ||   0x00009d38      0c0a0a         nop 0x0a0a                  ; no operation
  ||   ||   0x00009d3b      0c0c0c         nop 0x0c0c                  ; no operation
  ||   ||   0x00009d3e      0c0a0a         nop 0x0a0a                  ; no operation
  ||   ||   0x00009d41      00             brk                         ; force break
  ||   ||   0x00009d42      60             rts                         ; return from subroutine
  ||   ||   0x00009d43      00             brk                         ; force break
  ||   ||   0x00009d44      60             rts                         ; return from subroutine
  ||   ||   0x00009d45      00             brk                         ; force break
  ||   ||   0x00009d46      60             rts                         ; return from subroutine
  ||   ||   0x00009d47      00             brk                         ; force break
  ||   ||   0x00009d48      60             rts                         ; return from subroutine
  ||   ||   0x00009d49      00             brk                         ; force break
  ||   ||   0x00009d4a      78             sei                         ; set interrupt disable status
  ||   ||   0x00009d4b      00             brk                         ; force break
  ||   ||   0x00009d4c      78             sei                         ; set interrupt disable status
  ||  .---> 0x00009d4d      00             brk                         ; force break
  ||  |||   0x00009d4e      78             sei                         ; set interrupt disable status
  ||  |||   0x00009d4f      00             brk                         ; force break
  ||  |||   0x00009d50      78             sei                         ; set interrupt disable status
  ||  |||   0x00009d51      00             brk                         ; force break
  ||  |||   0x00009d52      00             brk                         ; force break
  ||  |||   0x00009d53      3b0000         rla 0x0000,y
  ||  |||   0x00009d56      00             brk                         ; force break
  ||  |||   0x00009d57      00             brk                         ; force break
  ||  |||   0x00009d58      08             php                         ; push processor status on stack
  ||  |||   0x00009d59      00             brk                         ; force break
  ||  |||   0x00009d5a      18             clc                         ; clear carry flag
  ||  `===< 0x00009d5b      f0f0           beq 0x4b2108                ; branch on result zero
  ||   ||   0x00009d5d      ff0000         isb 0x0000,x
  ||   ||   0x00009d60      ffff77         isb 0x77ff,x
  ||   ||   0x00009d63      7711           rra 0x11,x
  ||   ||   0x00009d65      11ff           ora (0xff),y                ; "or" memory with accumulator
  ||   ||   0x00009d67      ff7777         isb 0x7777,x
  ||   ||   0x00009d6a      1111           ora (0x11),y                ; "or" memory with accumulator
  ||   ||   0x00009d6c      2c2d2e         bit 0x2e2d                  ; test bits in memory with accumulator
  ||   ||   0x00009d6f      2f2021         rla 0x2120
  ||   ||   0x00009d72      22             hlt
  ||   ||   0x00009d73      3c3031         nop 0x3130,x                ; no operation
  ||  |||   0x00009d76      32             hlt
  ||  |||   0x00009d77      3323           rla (0x23),y
  ||  |||   0x00009d79      2425           bit 0x25                    ; test bits in memory with accumulator
  ||  |||   0x00009d7b      3d0000         and 0x0000,x                ; "and" memory with accumulator
  ||  |||   0x00009d7e      0404           nop 0x04                    ; no operation
  ||  |||   0x00009d80      0707           slo 0x07
  ||  |||   0x00009d82      08             php                         ; push processor status on stack
  ||  |||   0x00009d83      08             php                         ; push processor status on stack
  ||  |||   0x00009d84      0c0c0f         nop 0x0f0c                  ; no operation
  ||  |||   0x00009d87      0f2060         slo 0x6020
  ||  |||   0x00009d8a      a1bd           lda (0xbd,x)                ; load accumulator with memory
  ||  |||   0x00009d8c      9b9c85         shs 0x859c,y
  ||  |||   0x00009d8f      87bd           sax 0xbd
  ||  |||   0x00009d91      ee9c85         inc 0x859c                  ; increment memory by one
  ||  |||   0x00009d94      88             dey                         ; decrement index y by one
  ||  |||   0x00009d95      a686           ldx 0x86                    ; load index x with memory
  || .----> 0x00009d97      bdc0a3         lda 0xa3c0,x                ; load accumulator with memory
  || ||||   0x00009d9a      85ff           sta 0xff                    ; store accumulator in memory
  || ||||   0x00009d9c      bd50a4         lda 0xa450,x                ; load accumulator with memory
  || ||||   0x00009d9f      85fe           sta 0xfe                    ; store accumulator in memory
  || ||||   0x00009da1      a488           ldy 0x88                    ; load index y with memory
  ||.-----> 0x00009da3      a200           ldx #0x00                   ; load index x with memory
  |||||||   0x00009da5      a183           lda (0x83,x)                ; load accumulator with memory
  ||||`---> 0x00009da7      e683           inc 0x83                    ; increment memory by one
  ||||,===< 0x00009da9      d002           bne 0x4b2108                ; branch on result not zero
  |||||||   0x00009dab      e684           inc 0x84                    ; increment memory by one
  ||||`---> 0x00009dad      48             pha                         ; push accumulator on stack
  |||| ||   0x00009dae      2901           and #0x01                   ; "and" memory with accumulator
  |||| ||   0x00009db0      858a           sta 0x8a                    ; store accumulator in memory
  |||| ||   0x00009db2      68             pla                         ; pull accumulator from stack
  |||| ||   0x00009db3      4a             lsr a                       ; shift right one bit (memory or accumulator)
  |||| ||   0x00009db4      aa             tax                         ; transfer accumulator to index x
  |||| ||   0x00009db5      bde0a4         lda 0xa4e0,x                ; load accumulator with memory
  |||| ||   0x00009db8      8589           sta 0x89                    ; store accumulator in memory
  |||| ||   0x00009dba      b1fe           lda (0xfe),y                ; load accumulator with memory
  |||| ||   0x00009dbc      2901           and #0x01                   ; "and" memory with accumulator
  |||| ||   0x00009dbe      0589           ora 0x89                    ; "or" memory with accumulator
  |||| ||   0x00009dc0      91fe           sta (0xfe),y                ; store accumulator in memory
  |||| ||   0x00009dc2      88             dey                         ; decrement index y by one
  |||| ||   0x00009dc3      c00a           cpy #0x0a                   ; compare memory and index y
  ||||,===< 0x00009dc5      9008           bcc 0x4b2108                ; branch on carry clear
  |||||||   0x00009dc7      b1fe           lda (0xfe),y                ; load accumulator with memory
  |||||||   0x00009dc9      29fe           and #0xfe                   ; "and" memory with accumulator
  |||||||   0x00009dcb      058a           ora 0x8a                    ; "or" memory with accumulator
  |||||||   0x00009dcd      91fe           sta (0xfe),y                ; store accumulator in memory
  ||||`---> 0x00009dcf      c487           cpy 0x87                    ; compare memory and index y
  ||`=====< 0x00009dd1      b0d0           bcs 0x4b2108                ; branch on carry set
  || | ||   0x00009dd3      c686           dec 0x86                    ; decrement memory by one
  || | ||   0x00009dd5      a686           ldx 0x86                    ; load index x with memory
  || | ||   0x00009dd7      e0ff           cpx #0xff                   ; compare memory and index x
  || |,===< 0x00009dd9      f008           beq 0x4b2108                ; branch on result zero
  || ||||   0x00009ddb      e48b           cpx 0x8b                    ; compare memory and index x
  ||,=====< 0x00009ddd      9004           bcc 0x4b2108                ; branch on carry clear
  |||||||   0x00009ddf      e485           cpx 0x85                    ; compare memory and index x
  |||`====< 0x00009de1      b0b4           bcs 0x4b2108                ; branch on carry set
  ==`-`---> 0x00009de3      4c036c         jmp 0x6c03                  ; jump to new location
  ||   ||   0x00009de6      e8             inx                         ; increment index x by one
  ||   ||   0x00009de7      a92c           lda #0x2c                   ; load accumulator with memory
  ||   ||   0x00009de9      8d429e         sta 0x9e42                  ; store accumulator in memory
  ||   ||   0x00009dec      e048           cpx #0x48                   ; compare memory and index x
  ||  ,===< 0x00009dee      9005           bcc 0x4b2108                ; branch on carry clear
  ||  |||   0x00009df0      a94c           lda #0x4c                   ; load accumulator with memory
  ||  |||   0x00009df2      8d429e         sta 0x9e42                  ; store accumulator in memory
  ||  `---> 0x00009df5      2060a1         jsr 0xa160                  ; jump to new location saving return address
  ||   ||   0x00009df8      a583           lda 0x83                    ; load accumulator with memory
  ||   ||   0x00009dfa      85fc           sta 0xfc                    ; store accumulator in memory
  ||   ||   0x00009dfc      a584           lda 0x84                    ; load accumulator with memory
  ||   ||   0x00009dfe      85fd           sta 0xfd                    ; store accumulator in memory
  ||   ||   0x00009e00      ca             dex                         ; decrement index x by one
  ||   ||   0x00009e01      2060a1         jsr 0xa160                  ; jump to new location saving return address
  ||   ||   0x00009e04      bd9b9c         lda 0x9c9b,x                ; load accumulator with memory
  ||   ||   0x00009e07      8587           sta 0x87                    ; store accumulator in memory
  ||   ||   0x00009e09      bdee9c         lda 0x9cee,x                ; load accumulator with memory
  ||   ||   0x00009e0c      8588           sta 0x88                    ; store accumulator in memory
  ||   ||   0x00009e0e      a686           ldx 0x86                    ; load index x with memory
  ||  .---> 0x00009e10      bdc0a3         lda 0xa3c0,x                ; load accumulator with memory
  ||  |||   0x00009e13      85ff           sta 0xff                    ; store accumulator in memory
  ||  |||   0x00009e15      bd50a4         lda 0xa450,x                ; load accumulator with memory
  ||  |||   0x00009e18      85fe           sta 0xfe                    ; store accumulator in memory
  ||  |||   0x00009e1a      a488           ldy 0x88                    ; load index y with memory
  || .----> 0x00009e1c      a200           ldx #0x00                   ; load index x with memory
  || ||||   0x00009e1e      a1fc           lda (0xfc,x)                ; load accumulator with memory
  || ||||   0x00009e20      e6fc           inc 0xfc                    ; increment memory by one
  ||,=====< 0x00009e22      d002           bne 0x4b2108                ; branch on result not zero
  |||||||   0x00009e24      e6fd           inc 0xfd                    ; increment memory by one
  ||`-----> 0x00009e26      858a           sta 0x8a                    ; store accumulator in memory
  || ||||   0x00009e28      4a             lsr a                       ; shift right one bit (memory or accumulator)
  || ||||   0x00009e29      aa             tax                         ; transfer accumulator to index x
  || ||||   0x00009e2a      bde0a4         lda 0xa4e0,x                ; load accumulator with memory
  || ||||   0x00009e2d      0901           ora #0x01                   ; "or" memory with accumulator
  || ||||   0x00009e2f      31fe           and (0xfe),y                ; "and" memory with accumulator
  || ||||   0x00009e31      91fe           sta (0xfe),y                ; store accumulator in memory
  || ||||   0x00009e33      88             dey                         ; decrement index y by one
  || ||||   0x00009e34      c00a           cpy #0x0a                   ; compare memory and index y
  ||,=====< 0x00009e36      900a           bcc 0x4b2108                ; branch on carry clear
  |||||||   0x00009e38      a58a           lda 0x8a                    ; load accumulator with memory
  |||||||   0x00009e3a      2901           and #0x01                   ; "and" memory with accumulator
  |||||||   0x00009e3c      09fe           ora #0xfe                   ; "or" memory with accumulator
  |||||||   0x00009e3e      31fe           and (0xfe),y                ; "and" memory with accumulator
  |||||||   0x00009e40      91fe           sta (0xfe),y                ; store accumulator in memory
  ==`-----> 0x00009e42      4c689e         jmp 0x9e68                  ; jump to new location
  || ||||   0x00009e45      a200           ldx #0x00                   ; load index x with memory
  || ||||   0x00009e47      c8             iny                         ; increment index y by one
  || ||||   0x00009e48      a183           lda (0x83,x)                ; load accumulator with memory
  || ||||   0x00009e4a      e683           inc 0x83                    ; increment memory by one
  ||,=====< 0x00009e4c      d002           bne 0x4b2108                ; branch on result not zero
  |||||||   0x00009e4e      e684           inc 0x84                    ; increment memory by one
  ||`-----> 0x00009e50      858a           sta 0x8a                    ; store accumulator in memory
  || ||||   0x00009e52      4a             lsr a                       ; shift right one bit (memory or accumulator)
  || ||||   0x00009e53      aa             tax                         ; transfer accumulator to index x
  || ||||   0x00009e54      bde0a4         lda 0xa4e0,x                ; load accumulator with memory
  || ||||   0x00009e57      11fe           ora (0xfe),y                ; "or" memory with accumulator
  || ||||   0x00009e59      91fe           sta (0xfe),y                ; store accumulator in memory
  || ||||   0x00009e5b      88             dey                         ; decrement index y by one
  || ||||   0x00009e5c      c00a           cpy #0x0a                   ; compare memory and index y
  ||,=====< 0x00009e5e      9008           bcc 0x4b2108                ; branch on carry clear
  |||||||   0x00009e60      a58a           lda 0x8a                    ; load accumulator with memory
  |||||||   0x00009e62      2901           and #0x01                   ; "and" memory with accumulator
  |||||||   0x00009e64      11fe           ora (0xfe),y                ; "or" memory with accumulator
  |||||||   0x00009e66      91fe           sta (0xfe),y                ; store accumulator in memory
  --`-----> 0x00009e68      c487           cpy 0x87                    ; compare memory and index y
  || `====< 0x00009e6a      b0b0           bcs 0x4b2108                ; branch on carry set
  ||  |||   0x00009e6c      c686           dec 0x86                    ; decrement memory by one
  ||  |||   0x00009e6e      a686           ldx 0x86                    ; load index x with memory
  ||  |||   0x00009e70      e0ff           cpx #0xff                   ; compare memory and index x
  || ,====< 0x00009e72      f004           beq 0x4b2108                ; branch on result zero
  || ||||   0x00009e74      e485           cpx 0x85                    ; compare memory and index x
  || |`===< 0x00009e76      b098           bcs 0x4b2108                ; branch on carry set
  ===`----> 0x00009e78      4c036c         jmp 0x6c03                  ; jump to new location
  ||   ||   0x00009e7b      2036a1         jsr 0xa136                  ; jump to new location saving return address
  ||   ||   0x00009e7e      bd9b9c         lda 0x9c9b,x                ; load accumulator with memory
  ||   ||   0x00009e81      8587           sta 0x87                    ; store accumulator in memory
  ||   ||   0x00009e83      bdee9c         lda 0x9cee,x                ; load accumulator with memory
  ||   ||   0x00009e86      8588           sta 0x88                    ; store accumulator in memory
  ||   ||   0x00009e88      a685           ldx 0x85                    ; load index x with memory
  || ..---> 0x00009e8a      bdc0a3         lda 0xa3c0,x                ; load accumulator with memory
  || ||||   0x00009e8d      85ff           sta 0xff                    ; store accumulator in memory
  || ||||   0x00009e8f      bd50a4         lda 0xa450,x                ; load accumulator with memory
  || ||||   0x00009e92      85fe           sta 0xfe                    ; store accumulator in memory
  || ||||   0x00009e94      a488           ldy 0x88                    ; load index y with memory
  ||.-----> 0x00009e96      a200           ldx #0x00                   ; load index x with memory
  |||||||   0x00009e98      a1fc           lda (0xfc,x)                ; load accumulator with memory
  |||||||   0x00009e9a      e6fc           inc 0xfc                    ; increment memory by one
  ========< 0x00009e9c      d002           bne 0x4b2108                ; branch on result not zero
  |||||||   0x00009e9e      e6fd           inc 0xfd                    ; increment memory by one
  --------> 0x00009ea0      858a           sta 0x8a                    ; store accumulator in memory
  |||||||   0x00009ea2      4a             lsr a                       ; shift right one bit (memory or accumulator)
  |||||||   0x00009ea3      aa             tax                         ; transfer accumulator to index x
  |||||||   0x00009ea4      bde0a4         lda 0xa4e0,x                ; load accumulator with memory
  |||||||   0x00009ea7      0901           ora #0x01                   ; "or" memory with accumulator
  |||||||   0x00009ea9      31fe           and (0xfe),y                ; "and" memory with accumulator
  |||||||   0x00009eab      91fe           sta (0xfe),y                ; store accumulator in memory
  |||||||   0x00009ead      88             dey                         ; decrement index y by one
  |||||||   0x00009eae      c00a           cpy #0x0a                   ; compare memory and index y
  ========< 0x00009eb0      900a           bcc 0x4b2108                ; branch on carry clear
  |||||||   0x00009eb2      a58a           lda 0x8a                    ; load accumulator with memory
  |||||||   0x00009eb4      2901           and #0x01                   ; "and" memory with accumulator
  |||||||   0x00009eb6      09fe           ora #0xfe                   ; "or" memory with accumulator
  |||||||   0x00009eb8      31fe           and (0xfe),y                ; "and" memory with accumulator
  |||||||   0x00009eba      91fe           sta (0xfe),y                ; store accumulator in memory
  --------> 0x00009ebc      a200           ldx #0x00                   ; load index x with memory
  |||||||   0x00009ebe      c8             iny                         ; increment index y by one
  |||||||   0x00009ebf      a183           lda (0x83,x)                ; load accumulator with memory
  |||||||   0x00009ec1      e683           inc 0x83                    ; increment memory by one
  ========< 0x00009ec3      d002           bne 0x4b2108                ; branch on result not zero
  |||||||   0x00009ec5      e684           inc 0x84                    ; increment memory by one
  --------> 0x00009ec7      858a           sta 0x8a                    ; store accumulator in memory
  |||||||   0x00009ec9      4a             lsr a                       ; shift right one bit (memory or accumulator)
  |||||||   0x00009eca      aa             tax                         ; transfer accumulator to index x
  |||||||   0x00009ecb      bde0a4         lda 0xa4e0,x                ; load accumulator with memory
  |||||||   0x00009ece      11fe           ora (0xfe),y                ; "or" memory with accumulator
  |||||||   0x00009ed0      91fe           sta (0xfe),y                ; store accumulator in memory
  |||||||   0x00009ed2      88             dey                         ; decrement index y by one
  |||||||   0x00009ed3      c00a           cpy #0x0a                   ; compare memory and index y
  ========< 0x00009ed5      9008           bcc 0x4b2108                ; branch on carry clear
  |||||||   0x00009ed7      a58a           lda 0x8a                    ; load accumulator with memory
  |||||||   0x00009ed9      2901           and #0x01                   ; "and" memory with accumulator
  |||||||   0x00009edb      11fe           ora (0xfe),y                ; "or" memory with accumulator
  |||||||   0x00009edd      91fe           sta (0xfe),y                ; store accumulator in memory
  --------> 0x00009edf      c487           cpy 0x87                    ; compare memory and index y
  ||`=====< 0x00009ee1      b0b3           bcs 0x4b2108                ; branch on carry set
  || ||||   0x00009ee3      e685           inc 0x85                    ; increment memory by one
  || ||||   0x00009ee5      a685           ldx 0x85                    ; load index x with memory
  || ||||   0x00009ee7      e486           cpx 0x86                    ; compare memory and index x
  || `====< 0x00009ee9      f09f           beq 0x4b2108                ; branch on result zero
  ||  `===< 0x00009eeb      909d           bcc 0x4b2108                ; branch on carry clear
  ========< 0x00009eed      4c036c         jmp 0x6c03                  ; jump to new location
  ||   ||   0x00009ef0      2060a1         jsr 0xa160                  ; jump to new location saving return address
  ||   ||   0x00009ef3      a686           ldx 0x86                    ; load index x with memory
  ||  .---> 0x00009ef5      bdc0a3         lda 0xa3c0,x                ; load accumulator with memory
  ||  |||   0x00009ef8      85ff           sta 0xff                    ; store accumulator in memory
  ||  |||   0x00009efa      bd50a4         lda 0xa450,x                ; load accumulator with memory
  ||  |||   0x00009efd      85fe           sta 0xfe                    ; store accumulator in memory
  ||  |||   0x00009eff      a487           ldy 0x87                    ; load index y with memory
  ||  |||   0x00009f01      a200           ldx #0x00                   ; load index x with memory
  ||..----> 0x00009f03      a183           lda (0x83,x)                ; load accumulator with memory
  |||||||   0x00009f05      e683           inc 0x83                    ; increment memory by one
  ========< 0x00009f07      d002           bne 0x4b2108                ; branch on result not zero
  |||||||   0x00009f09      e684           inc 0x84                    ; increment memory by one
  --------> 0x00009f0b      91fe           sta (0xfe),y                ; store accumulator in memory
  |||||||   0x00009f0d      c8             iny                         ; increment index y by one
  |||||||   0x00009f0e      c488           cpy 0x88                    ; compare memory and index y
  ||`=====< 0x00009f10      90f1           bcc 0x4b2108                ; branch on carry clear
  || `====< 0x00009f12      f0ef           beq 0x4b2108                ; branch on result zero
  ||  |||   0x00009f14      c686           dec 0x86                    ; decrement memory by one
  ||  |||   0x00009f16      a686           ldx 0x86                    ; load index x with memory
  ||  |||   0x00009f18      e0ff           cpx #0xff                   ; compare memory and index x
  || ,====< 0x00009f1a      f008           beq 0x4b2108                ; branch on result zero
  || ||||   0x00009f1c      e48b           cpx 0x8b                    ; compare memory and index x
  ||,=====< 0x00009f1e      9004           bcc 0x4b2108                ; branch on carry clear
  |||||||   0x00009f20      e485           cpx 0x85                    ; compare memory and index x
  ||||`===< 0x00009f22      b0d1           bcs 0x4b2108                ; branch on carry set
  ==``----> 0x00009f24      4c036c         jmp 0x6c03                  ; jump to new location
  ||   ||   0x00009f27      e8             inx                         ; increment index x by one
  ||   ||   0x00009f28      a901           lda #0x01                   ; load accumulator with memory
  ||   ||   0x00009f2a      8d599f         sta 0x9f59                  ; store accumulator in memory
  ||   ||   0x00009f2d      e048           cpx #0x48                   ; compare memory and index x
  ||  ,===< 0x00009f2f      9005           bcc 0x4b2108                ; branch on carry clear
  ||  |||   0x00009f31      a924           lda #0x24                   ; load accumulator with memory
  ||  |||   0x00009f33      8d599f         sta 0x9f59                  ; store accumulator in memory
  ||  `---> 0x00009f36      2060a1         jsr 0xa160                  ; jump to new location saving return address
  ||   ||   0x00009f39      a583           lda 0x83                    ; load accumulator with memory
  ||   ||   0x00009f3b      85fc           sta 0xfc                    ; store accumulator in memory
  ||   ||   0x00009f3d      a584           lda 0x84                    ; load accumulator with memory
  ||   ||   0x00009f3f      85fd           sta 0xfd                    ; store accumulator in memory
  ||   ||   0x00009f41      ca             dex                         ; decrement index x by one
  ||   ||   0x00009f42      2060a1         jsr 0xa160                  ; jump to new location saving return address
  ||   ||   0x00009f45      a686           ldx 0x86                    ; load index x with memory
  ||  .---> 0x00009f47      bdc0a3         lda 0xa3c0,x                ; load accumulator with memory
  ||  |||   0x00009f4a      85ff           sta 0xff                    ; store accumulator in memory
  ||  |||   0x00009f4c      bd50a4         lda 0xa450,x                ; load accumulator with memory
  ||  |||   0x00009f4f      85fe           sta 0xfe                    ; store accumulator in memory
  ||  |||   0x00009f51      a487           ldy 0x87                    ; load index y with memory
  ||  |||   0x00009f53      a200           ldx #0x00                   ; load index x with memory
  ||..----> 0x00009f55      b1fe           lda (0xfe),y                ; load accumulator with memory
  |||||||   0x00009f57      21fc           and (0xfc,x)                ; "and" memory with accumulator
  |||||||   0x00009f59      0183           ora (0x83,x)                ; "or" memory with accumulator
  |||||||   0x00009f5b      91fe           sta (0xfe),y                ; store accumulator in memory
  |||||||   0x00009f5d      e683           inc 0x83                    ; increment memory by one
  ========< 0x00009f5f      d002           bne 0x4b2108                ; branch on result not zero
  |||||||   0x00009f61      e684           inc 0x84                    ; increment memory by one
  --------> 0x00009f63      e6fc           inc 0xfc                    ; increment memory by one
  ========< 0x00009f65      d002           bne 0x4b2108                ; branch on result not zero
  |||||||   0x00009f67      e6fd           inc 0xfd                    ; increment memory by one
  --------> 0x00009f69      c8             iny                         ; increment index y by one
  |||||||   0x00009f6a      c488           cpy 0x88                    ; compare memory and index y
  ||`=====< 0x00009f6c      90e7           bcc 0x4b2108                ; branch on carry clear
  || `====< 0x00009f6e      f0e5           beq 0x4b2108                ; branch on result zero
  ||  |||   0x00009f70      c686           dec 0x86                    ; decrement memory by one
  ||  |||   0x00009f72      a686           ldx 0x86                    ; load index x with memory
  ||  |||   0x00009f74      e0ff           cpx #0xff                   ; compare memory and index x
  || ,====< 0x00009f76      f004           beq 0x4b2108                ; branch on result zero
  || ||||   0x00009f78      e485           cpx 0x85                    ; compare memory and index x
  || |`===< 0x00009f7a      b0cb           bcs 0x4b2108                ; branch on carry set
  ===`----> 0x00009f7c      4c036c         jmp 0x6c03                  ; jump to new location
  ||   ||   0x00009f7f      a01d           ldy #0x1d                   ; load index y with memory
  ||  .---> 0x00009f81      b9429d         lda 0x9d42,y                ; load accumulator with memory
  ||  |||   0x00009f84      9940b3         sta 0xb340,y                ; store accumulator in memory
  ||  |||   0x00009f87      88             dey                         ; decrement index y by one
  ||  `===< 0x00009f88      10f7           bpl 0x4b2108                ; branch on result plus
  ||   ||   0x00009f8a      bd4f9b         lda 0x9b4f,x                ; load accumulator with memory
  ||   ||   0x00009f8d      18             clc                         ; clear carry flag
  ||   ||   0x00009f8e      6952           adc #0x52                   ; add memory to accumulator with carry
  ||   ||   0x00009f90      8d41b3         sta 0xb341                  ; store accumulator in memory
  ||   ||   0x00009f93      8d43b3         sta 0xb343                  ; store accumulator in memory
  ||   ||   0x00009f96      8d45b3         sta 0xb345                  ; store accumulator in memory
  ||   ||   0x00009f99      e047           cpx #0x47                   ; compare memory and index x
  ||  ,===< 0x00009f9b      f01c           beq 0x4b2108                ; branch on result zero
  ||  |||   0x00009f9d      e04d           cpx #0x4d                   ; compare memory and index x
  || ,====< 0x00009f9f      d02d           bne 0x4b2108                ; branch on result not zero
  || ||||   0x00009fa1      ad9409         lda 0x0994                  ; load accumulator with memory
  || ||||   0x00009fa4      8d41b3         sta 0xb341                  ; store accumulator in memory
  || ||||   0x00009fa7      ad9509         lda 0x0995                  ; load accumulator with memory
  || ||||   0x00009faa      8d43b3         sta 0xb343                  ; store accumulator in memory
  || ||||   0x00009fad      ad9609         lda 0x0996                  ; load accumulator with memory
  || ||||   0x00009fb0      8d45b3         sta 0xb345                  ; store accumulator in memory
  || ||||   0x00009fb3      ad9709         lda 0x0997                  ; load accumulator with memory
  ||,=====< 0x00009fb6      4cce9f         jmp 0x9fce                  ; jump to new location
  ||||`---> 0x00009fb9      ad9009         lda 0x0990                  ; load accumulator with memory
  |||| ||   0x00009fbc      8d41b3         sta 0xb341                  ; store accumulator in memory
  |||| ||   0x00009fbf      ad9109         lda 0x0991                  ; load accumulator with memory
  |||| ||   0x00009fc2      8d43b3         sta 0xb343                  ; store accumulator in memory
  |||| ||   0x00009fc5      ad9209         lda 0x0992                  ; load accumulator with memory
  |||| ||   0x00009fc8      8d45b3         sta 0xb345                  ; store accumulator in memory
  |||| ||   0x00009fcb      ad9309         lda 0x0993                  ; load accumulator with memory
  ||``----> 0x00009fce      8d47b3         sta 0xb347                  ; store accumulator in memory
  ||   ||   0x00009fd1      bd199d         lda 0x9d19,x                ; load accumulator with memory
  ||   ||   0x00009fd4      8d55b3         sta 0xb355                  ; store accumulator in memory
  ||   ||   0x00009fd7      bd359d         lda 0x9d35,x                ; load accumulator with memory
  ||   ||   0x00009fda      a8             tay                         ; transfer accumulator to index y
  ||   ||   0x00009fdb      b98009         lda 0x0980,y                ; load accumulator with memory
  ||   ||   0x00009fde      8d67b3         sta 0xb367                  ; store accumulator in memory
  ||   ||   0x00009fe1      8d6bb3         sta 0xb36b                  ; store accumulator in memory
  ||   ||   0x00009fe4      b96c9d         lda 0x9d6c,y                ; load accumulator with memory
  ||   ||   0x00009fe7      8d70b3         sta 0xb370                  ; store accumulator in memory
  ||   ||   0x00009fea      c8             iny                         ; increment index y by one
  ||   ||   0x00009feb      b98009         lda 0x0980,y                ; load accumulator with memory
  ||   ||   0x00009fee      8d68b3         sta 0xb368                  ; store accumulator in memory
  ||   ||   0x00009ff1      8d6cb3         sta 0xb36c                  ; store accumulator in memory
  ||   ||   0x00009ff4      b96c9d         lda 0x9d6c,y                ; load accumulator with memory
  ||   ||   0x00009ff7      8d71b3         sta 0xb371                  ; store accumulator in memory
  ||   ||   0x00009ffa      c8             iny                         ; increment index y by one
  ||   ||   0x00009ffb      b98009         lda 0x0980,y                ; load accumulator with memory
  ||   ||   0x00009ffe      8d69b3         sta 0xb369                  ; store accumulator in memory
  ||   ||   0x0000a001      8d6db3         sta 0xb36d                  ; store accumulator in memory
  ||   ||   0x0000a004      b96c9d         lda 0x9d6c,y                ; load accumulator with memory
  ||   ||   0x0000a007      8d72b3         sta 0xb372                  ; store accumulator in memory
  ||   ||   0x0000a00a      c8             iny                         ; increment index y by one
  ||   ||   0x0000a00b      b98009         lda 0x0980,y                ; load accumulator with memory
  ||   ||   0x0000a00e      8d6ab3         sta 0xb36a                  ; store accumulator in memory
  ||   ||   0x0000a011      8d6eb3         sta 0xb36e                  ; store accumulator in memory
  ||   ||   0x0000a014      b96c9d         lda 0x9d6c,y                ; load accumulator with memory
  ||   ||   0x0000a017      8d73b3         sta 0xb373                  ; store accumulator in memory
  ||   ||   0x0000a01a      60             rts                         ; return from subroutine
  ||   ||   0x0000a01b      a084           ldy #0x84                   ; load index y with memory
  ||   ||   0x0000a01d      8cfc07         sty 0x07fc                  ; store index y in memory
  ||   ||   0x0000a020      a0fd           ldy #0xfd                   ; load index y with memory
  ||   ||   0x0000a022      8cfd07         sty 0x07fd                  ; store index y in memory
  ||   ||   0x0000a025      c8             iny                         ; increment index y by one
  ||   ||   0x0000a026      8cfe07         sty 0x07fe                  ; store index y in memory
  ||   ||   0x0000a029      c8             iny                         ; increment index y by one
  ||   ||   0x0000a02a      8cff07         sty 0x07ff                  ; store index y in memory
  ||   ||   0x0000a02d      bd4f9b         lda 0x9b4f,x                ; load accumulator with memory
  ||   ||   0x0000a030      18             clc                         ; clear carry flag
  ||   ||   0x0000a031      6952           adc #0x52                   ; add memory to accumulator with carry
  ||   ||   0x0000a033      8d49b3         sta 0xb349                  ; store accumulator in memory
  ||   ||   0x0000a036      8d4bb3         sta 0xb34b                  ; store accumulator in memory
  ||   ||   0x0000a039      8d4db3         sta 0xb34d                  ; store accumulator in memory
  ||   ||   0x0000a03c      e047           cpx #0x47                   ; compare memory and index x
  ||  ,===< 0x0000a03e      f01c           beq 0x4b2108                ; branch on result zero
  ||  |||   0x0000a040      e04d           cpx #0x4d                   ; compare memory and index x
  || ,====< 0x0000a042      d02d           bne 0x4b2108                ; branch on result not zero
  || ||||   0x0000a044      ad9409         lda 0x0994                  ; load accumulator with memory
  || ||||   0x0000a047      8d49b3         sta 0xb349                  ; store accumulator in memory
  || ||||   0x0000a04a      ad9509         lda 0x0995                  ; load accumulator with memory
  || ||||   0x0000a04d      8d4bb3         sta 0xb34b                  ; store accumulator in memory
  || ||||   0x0000a050      ad9609         lda 0x0996                  ; load accumulator with memory
  || ||||   0x0000a053      8d4db3         sta 0xb34d                  ; store accumulator in memory
  || ||||   0x0000a056      ad9709         lda 0x0997                  ; load accumulator with memory
  ||,=====< 0x0000a059      4c71a0         jmp 0xa071                  ; jump to new location
  ||||`---> 0x0000a05c      ad9009         lda 0x0990                  ; load accumulator with memory
  |||| ||   0x0000a05f      8d49b3         sta 0xb349                  ; store accumulator in memory
  |||| ||   0x0000a062      ad9109         lda 0x0991                  ; load accumulator with memory
  |||| ||   0x0000a065      8d4bb3         sta 0xb34b                  ; store accumulator in memory
  |||| ||   0x0000a068      ad9209         lda 0x0992                  ; load accumulator with memory
  |||| ||   0x0000a06b      8d4db3         sta 0xb34d                  ; store accumulator in memory
  |||| ||   0x0000a06e      ad9309         lda 0x0993                  ; load accumulator with memory
  ||``----> 0x0000a071      8d4fb3         sta 0xb34f                  ; store accumulator in memory
  ||   ||   0x0000a074      bd359d         lda 0x9d35,x                ; load accumulator with memory
  ||   ||   0x0000a077      a8             tay                         ; transfer accumulator to index y
  ||   ||   0x0000a078      b96c9d         lda 0x9d6c,y                ; load accumulator with memory
  ||   ||   0x0000a07b      85fe           sta 0xfe                    ; store accumulator in memory
  ||   ||   0x0000a07d      a900           lda #0x00                   ; load accumulator with memory
  ||   ||   0x0000a07f      06fe           asl 0xfe                    ; shift left one bit (memory or accumulator)
  ||   ||   0x0000a081      2a             rol a                       ; rotate one bit left (memory or accumulator)
  ||   ||   0x0000a082      06fe           asl 0xfe                    ; shift left one bit (memory or accumulator)
  ||   ||   0x0000a084      2a             rol a                       ; rotate one bit left (memory or accumulator)
  ||   ||   0x0000a085      06fe           asl 0xfe                    ; shift left one bit (memory or accumulator)
  ||   ||   0x0000a087      2a             rol a                       ; rotate one bit left (memory or accumulator)
  ||   ||   0x0000a088      06fe           asl 0xfe                    ; shift left one bit (memory or accumulator)
  ||   ||   0x0000a08a      2a             rol a                       ; rotate one bit left (memory or accumulator)
  ||   ||   0x0000a08b      06fe           asl 0xfe                    ; shift left one bit (memory or accumulator)
  ||   ||   0x0000a08d      2a             rol a                       ; rotate one bit left (memory or accumulator)
  ||   ||   0x0000a08e      06fe           asl 0xfe                    ; shift left one bit (memory or accumulator)
  ||   ||   0x0000a090      2a             rol a                       ; rotate one bit left (memory or accumulator)
  ||   ||   0x0000a091      85ff           sta 0xff                    ; store accumulator in memory
  ||   ||   0x0000a093      a000           ldy #0x00                   ; load index y with memory
  ||   ||   0x0000a095      a902           lda #0x02                   ; load accumulator with memory
  ||   ||   0x0000a097      8dd0a0         sta 0xa0d0                  ; store accumulator in memory
  ||   ||   0x0000a09a      8a             txa                         ; transfer index x to accumulator
  ||   ||   0x0000a09b      48             pha                         ; push accumulator on stack
  ||   ||   0x0000a09c      20aba0         jsr 0xa0ab                  ; jump to new location saving return address
  ||   ||   0x0000a09f      20aba0         jsr 0xa0ab                  ; jump to new location saving return address
  ||   ||   0x0000a0a2      20aba0         jsr 0xa0ab                  ; jump to new location saving return address
  ||   ||   0x0000a0a5      20aba0         jsr 0xa0ab                  ; jump to new location saving return address
  ||   ||   0x0000a0a8      68             pla                         ; pull accumulator from stack
  ||   ||   0x0000a0a9      aa             tax                         ; transfer accumulator to index x
  ||   ||   0x0000a0aa      60             rts                         ; return from subroutine
  ||   ||   0x0000a0ab      a915           lda #0x15                   ; load accumulator with memory
  ||   ||   0x0000a0ad      85fd           sta 0xfd                    ; store accumulator in memory
  ||  .---> 0x0000a0af      20bba0         jsr 0xa0bb                  ; jump to new location saving return address
  ||  |||   0x0000a0b2      c6fd           dec 0xfd                    ; decrement memory by one
  ||  `===< 0x0000a0b4      d0f9           bne 0x4b2108                ; branch on result not zero
  ||   ||   0x0000a0b6      c8             iny                         ; increment index y by one
  ||   ||   0x0000a0b7      eed0a0         inc 0xa0d0                  ; increment memory by one
  ||   ||   0x0000a0ba      60             rts                         ; return from subroutine
  ||   ||   0x0000a0bb      a902           lda #0x02                   ; load accumulator with memory
  ||   ||   0x0000a0bd      85fc           sta 0xfc                    ; store accumulator in memory
  ||  .---> 0x0000a0bf      b1fe           lda (0xfe),y                ; load accumulator with memory
  ||  |||   0x0000a0c1      c8             iny                         ; increment index y by one
  ||  |||   0x0000a0c2      48             pha                         ; push accumulator on stack
  ||  |||   0x0000a0c3      2901           and #0x01                   ; "and" memory with accumulator
  ||  |||   0x0000a0c5      858a           sta 0x8a                    ; store accumulator in memory
  ||  |||   0x0000a0c7      68             pla                         ; pull accumulator from stack
  ||  |||   0x0000a0c8      4a             lsr a                       ; shift right one bit (memory or accumulator)
  ||  |||   0x0000a0c9      aa             tax                         ; transfer accumulator to index x
  ||  |||   0x0000a0ca      bde0a4         lda 0xa4e0,x                ; load accumulator with memory
  ||  |||   0x0000a0cd      8589           sta 0x89                    ; store accumulator in memory
  ||  |||   0x0000a0cf      a200           ldx #0x00                   ; load index x with memory
  ||  |||   0x0000a0d1      bd40b2         lda 0xb240,x                ; load accumulator with memory
  ||  |||   0x0000a0d4      2901           and #0x01                   ; "and" memory with accumulator
  ||  |||   0x0000a0d6      0589           ora 0x89                    ; "or" memory with accumulator
  ||  |||   0x0000a0d8      9d40b2         sta 0xb240,x                ; store accumulator in memory
  ||  |||   0x0000a0db      a5fc           lda 0xfc                    ; load accumulator with memory
  || ,====< 0x0000a0dd      f00b           beq 0x4b2108                ; branch on result zero
  || ||||   0x0000a0df      ca             dex                         ; decrement index x by one
  || ||||   0x0000a0e0      bd40b2         lda 0xb240,x                ; load accumulator with memory
  || ||||   0x0000a0e3      29fe           and #0xfe                   ; "and" memory with accumulator
  || ||||   0x0000a0e5      058a           ora 0x8a                    ; "or" memory with accumulator
  || ||||   0x0000a0e7      9d40b2         sta 0xb240,x                ; store accumulator in memory
  || `----> 0x0000a0ea      ced0a0         dec 0xa0d0                  ; decrement memory by one
  ||  |||   0x0000a0ed      c6fc           dec 0xfc                    ; decrement memory by one
  ||  `===< 0x0000a0ef      10ce           bpl 0x4b2108                ; branch on result plus
  ||   ||   0x0000a0f1      add0a0         lda 0xa0d0                  ; load accumulator with memory
  ||   ||   0x0000a0f4      18             clc                         ; clear carry flag
  ||   ||   0x0000a0f5      6906           adc #0x06                   ; add memory to accumulator with carry
  ||   ||   0x0000a0f7      8dd0a0         sta 0xa0d0                  ; store accumulator in memory
  ||   ||   0x0000a0fa      60             rts                         ; return from subroutine
  ||   ||   0x0000a0fb      2036a1         jsr 0xa136                  ; jump to new location saving return address
  ||   ||   0x0000a0fe      a685           ldx 0x85                    ; load index x with memory
  || ..---> 0x0000a100      bdc0a3         lda 0xa3c0,x                ; load accumulator with memory
  || ||||   0x0000a103      85ff           sta 0xff                    ; store accumulator in memory
  || ||||   0x0000a105      bd50a4         lda 0xa450,x                ; load accumulator with memory
  || ||||   0x0000a108      85fe           sta 0xfe                    ; store accumulator in memory
  || ||||   0x0000a10a      a487           ldy 0x87                    ; load index y with memory
  || ||||   0x0000a10c      a200           ldx #0x00                   ; load index x with memory
  --.-----> 0x0000a10e      b1fe           lda (0xfe),y                ; load accumulator with memory
  |||||||   0x0000a110      21fc           and (0xfc,x)                ; "and" memory with accumulator
  |||||||   0x0000a112      0183           ora (0x83,x)                ; "or" memory with accumulator
  |||||||   0x0000a114      91fe           sta (0xfe),y                ; store accumulator in memory
  |||||||   0x0000a116      e683           inc 0x83                    ; increment memory by one
  ========< 0x0000a118      d002           bne 0x4b2108                ; branch on result not zero
  |||||||   0x0000a11a      e684           inc 0x84                    ; increment memory by one
  --------> 0x0000a11c      e6fc           inc 0xfc                    ; increment memory by one
  ========< 0x0000a11e      d002           bne 0x4b2108                ; branch on result not zero
  |||||||   0x0000a120      e6fd           inc 0xfd                    ; increment memory by one
  --------> 0x0000a122      c8             iny                         ; increment index y by one
  |||||||   0x0000a123      c488           cpy 0x88                    ; compare memory and index y
  ========< 0x0000a125      90e7           bcc 0x4b2108                ; branch on carry clear
  ||`=====< 0x0000a127      f0e5           beq 0x4b2108                ; branch on result zero
  || ||||   0x0000a129      e685           inc 0x85                    ; increment memory by one
  || ||||   0x0000a12b      a685           ldx 0x85                    ; load index x with memory
  || ||||   0x0000a12d      e486           cpx 0x86                    ; compare memory and index x
  || `====< 0x0000a12f      f0cf           beq 0x4b2108                ; branch on result zero
  ||  `===< 0x0000a131      90cd           bcc 0x4b2108                ; branch on carry clear
  ========< 0x0000a133      4c036c         jmp 0x6c03                  ; jump to new location
  ||   ||   0x0000a136      e8             inx                         ; increment index x by one
  ||   ||   0x0000a137      2043a1         jsr 0xa143                  ; jump to new location saving return address
  ||   ||   0x0000a13a      a583           lda 0x83                    ; load accumulator with memory
  ||   ||   0x0000a13c      85fc           sta 0xfc                    ; store accumulator in memory
  ||   ||   0x0000a13e      a584           lda 0x84                    ; load accumulator with memory
  ||   ||   0x0000a140      85fd           sta 0xfd                    ; store accumulator in memory
  ||   ||   0x0000a142      ca             dex                         ; decrement index x by one
  ||   ||   0x0000a143      2060a1         jsr 0xa160                  ; jump to new location saving return address
  ||   ||   0x0000a146      38             sec                         ; set carry flag
  ||   ||   0x0000a147      a585           lda 0x85                    ; load accumulator with memory
  ||   ||   0x0000a149      e98f           sbc #0x8f                   ; subtract memory from accumulator with borrow
  ||   ||   0x0000a14b      49ff           eor #0xff                   ; "exclusive-or" memory with accumulator
  ||   ||   0x0000a14d      18             clc                         ; clear carry flag
  ||   ||   0x0000a14e      6901           adc #0x01                   ; add memory to accumulator with carry
  ||   ||   0x0000a150      a8             tay                         ; transfer accumulator to index y
  ||   ||   0x0000a151      38             sec                         ; set carry flag
  ||   ||   0x0000a152      a586           lda 0x86                    ; load accumulator with memory
  ||   ||   0x0000a154      e98f           sbc #0x8f                   ; subtract memory from accumulator with borrow
  ||   ||   0x0000a156      49ff           eor #0xff                   ; "exclusive-or" memory with accumulator
  ||   ||   0x0000a158      18             clc                         ; clear carry flag
  ||   ||   0x0000a159      6901           adc #0x01                   ; add memory to accumulator with carry
  ||   ||   0x0000a15b      8585           sta 0x85                    ; store accumulator in memory
  ||   ||   0x0000a15d      8486           sty 0x86                    ; store index y in memory
  ||   ||   0x0000a15f      60             rts                         ; return from subroutine
  ||   ||   0x0000a160      bd60a5         lda 0xa560,x                ; load accumulator with memory
  ||   ||   0x0000a163      8583           sta 0x83                    ; store accumulator in memory
  ||   ||   0x0000a165      bdb3a5         lda 0xa5b3,x                ; load accumulator with memory
  ||   ||   0x0000a168      8584           sta 0x84                    ; store accumulator in memory
  ||   ||   0x0000a16a      bd4f9b         lda 0x9b4f,x                ; load accumulator with memory
  ||   ||   0x0000a16d      8585           sta 0x85                    ; store accumulator in memory
  ||   ||   0x0000a16f      bda29b         lda 0x9ba2,x                ; load accumulator with memory
  ||   ||   0x0000a172      8586           sta 0x86                    ; store accumulator in memory
  ||   ||   0x0000a174      bdf59b         lda 0x9bf5,x                ; load accumulator with memory
  ||   ||   0x0000a177      8587           sta 0x87                    ; store accumulator in memory
  ||   ||   0x0000a179      bd489c         lda 0x9c48,x                ; load accumulator with memory
  ||   ||   0x0000a17c      8588           sta 0x88                    ; store accumulator in memory
  ========< 0x0000a17e      4c066c         jmp 0x6c06                  ; jump to new location
  ||   ||   0x0000a181      a510           lda 0x10                    ; load accumulator with memory
  ||  ,===< 0x0000a183      d00a           bne 0x4b2108                ; branch on result not zero
  ||  |||   0x0000a185      a511           lda 0x11                    ; load accumulator with memory
  || ,====< 0x0000a187      d006           bne 0x4b2108                ; branch on result not zero
  || ||||   0x0000a189      204b89         jsr 0x894b                  ; jump to new location saving return address
  |`======< 0x0000a18c      4c9e92         jmp 0x929e                  ; jump to new location
  |  ``---> 0x0000a18f      a9a7           lda #0xa7                   ; load accumulator with memory
  |    ||   0x0000a191      8daba1         sta 0xa1ab                  ; store accumulator in memory
  |    ||   0x0000a194      a900           lda #0x00                   ; load accumulator with memory
  |    ||   0x0000a196      8daaa1         sta 0xa1aa                  ; store accumulator in memory
  |    ||   0x0000a199      a218           ldx #0x18                   ; load index x with memory
  |   .---> 0x0000a19b      bdc014         lda 0x14c0,x                ; load accumulator with memory
  |   |||   0x0000a19e      8daea1         sta 0xa1ae                  ; store accumulator in memory
  |   |||   0x0000a1a1      bd0014         lda 0x1400,x                ; load accumulator with memory
  |   |||   0x0000a1a4      8dada1         sta 0xa1ad                  ; store accumulator in memory
  |   |||   0x0000a1a7      a010           ldy #0x10                   ; load index y with memory
  |  .----> 0x0000a1a9      adffff         lda 0xffff                  ; load accumulator with memory
  |  ||||   0x0000a1ac      99ffff         sta 0xffff,y                ; store accumulator in memory
  |  ||||   0x0000a1af      eeaaa1         inc 0xa1aa                  ; increment memory by one
  | ,=====< 0x0000a1b2      d003           bne 0x4b2108                ; branch on result not zero
  | |||||   0x0000a1b4      eeaba1         inc 0xa1ab                  ; increment memory by one
  | `-----> 0x0000a1b7      98             tya                         ; transfer index y to accumulator
  |  ||||   0x0000a1b8      18             clc                         ; clear carry flag
  |  ||||   0x0000a1b9      6908           adc #0x08                   ; add memory to accumulator with carry
  |  ||||   0x0000a1bb      a8             tay                         ; transfer accumulator to index y
  |  ||||   0x0000a1bc      c0b0           cpy #0xb0                   ; compare memory and index y
  |  `====< 0x0000a1be      90e9           bcc 0x4b2108                ; branch on carry clear
  |   |||   0x0000a1c0      e8             inx                         ; increment index x by one
  |   |||   0x0000a1c1      e0a8           cpx #0xa8                   ; compare memory and index x
  |   `===< 0x0000a1c3      90d6           bcc 0x4b2108                ; branch on carry clear
  |    ||   0x0000a1c5      204b89         jsr 0x894b                  ; jump to new location saving return address
  |    ||   0x0000a1c8      ad419d         lda 0x9d41                  ; load accumulator with memory
  |   ,===< 0x0000a1cb      103b           bpl 0x4b2108                ; branch on result plus
  |   |||   0x0000a1cd      ad55b3         lda 0xb355                  ; load accumulator with memory
  |   |||   0x0000a1d0      8d15d0         sta 0xd015                  ; store accumulator in memory
  |   |||   0x0000a1d3      4e419d         lsr 0x9d41                  ; shift right one bit (memory or accumulator)
  |   |||   0x0000a1d6      a23f           ldx #0x3f                   ; load index x with memory
  |  .----> 0x0000a1d8      bd40b2         lda 0xb240,x                ; load accumulator with memory
  |  ||||   0x0000a1db      9d0021         sta 0x2100,x                ; store accumulator in memory
  |  ||||   0x0000a1de      bd80b2         lda 0xb280,x                ; load accumulator with memory
  |  ||||   0x0000a1e1      9d403f         sta 0x3f40,x                ; store accumulator in memory
  |  ||||   0x0000a1e4      bdc0b2         lda 0xb2c0,x                ; load accumulator with memory
  |  ||||   0x0000a1e7      9d803f         sta 0x3f80,x                ; store accumulator in memory
  |  ||||   0x0000a1ea      bd00b3         lda 0xb300,x                ; load accumulator with memory
  |  ||||   0x0000a1ed      9dc03f         sta 0x3fc0,x                ; store accumulator in memory
  |  ||||   0x0000a1f0      e02f           cpx #0x2f                   ; compare memory and index x
  | ,=====< 0x0000a1f2      b006           bcs 0x4b2108                ; branch on carry set
  | |||||   0x0000a1f4      bd40b3         lda 0xb340,x                ; load accumulator with memory
  | |||||   0x0000a1f7      9d00d0         sta 0xd000,x                ; store accumulator in memory
  | `-----> 0x0000a1fa      ca             dex                         ; decrement index x by one
  |  `====< 0x0000a1fb      10db           bpl 0x4b2108                ; branch on result plus
  |   |||   0x0000a1fd      a203           ldx #0x03                   ; load index x with memory
  |  .----> 0x0000a1ff      bd70b3         lda 0xb370,x                ; load accumulator with memory
  |  ||||   0x0000a202      9df807         sta 0x07f8,x                ; store accumulator in memory
  |  ||||   0x0000a205      ca             dex                         ; decrement index x by one
  |  `====< 0x0000a206      10f7           bpl 0x4b2108                ; branch on result plus
  |   `---> 0x0000a208      60             rts                         ; return from subroutine
  --------> 0x0000a209      20359b         jsr 0x9b35                  ; jump to new location saving return address
  |    ||   0x0000a20c      205896         jsr 0x9658                  ; jump to new location saving return address
  |    ||   0x0000a20f      a900           lda #0x00                   ; load accumulator with memory
  |    ||   0x0000a211      8da9a2         sta 0xa2a9                  ; store accumulator in memory
  |    ||   0x0000a214      a940           lda #0x40                   ; load accumulator with memory
  |    ||   0x0000a216      8daaa2         sta 0xa2aa                  ; store accumulator in memory
  |   .---> 0x0000a219      adcda2         lda 0xa2cd                  ; load accumulator with memory
  |   |||   0x0000a21c      297f           and #0x7f                   ; "and" memory with accumulator
  |   |||   0x0000a21e      18             clc                         ; clear carry flag
  |   |||   0x0000a21f      690e           adc #0x0e                   ; add memory to accumulator with carry
  |   |||   0x0000a221      a8             tay                         ; transfer accumulator to index y
  |   |||   0x0000a222      b950a4         lda 0xa450,y                ; load accumulator with memory
  |   |||   0x0000a225      8534           sta 0x34                    ; store accumulator in memory
  |   |||   0x0000a227      b9c0a3         lda 0xa3c0,y                ; load accumulator with memory
  |   |||   0x0000a22a      8535           sta 0x35                    ; store accumulator in memory
  |   |||   0x0000a22c      98             tya                         ; transfer index y to accumulator
  |   |||   0x0000a22d      18             clc                         ; clear carry flag
  |   |||   0x0000a22e      6918           adc #0x18                   ; add memory to accumulator with carry
  |   |||   0x0000a230      a8             tay                         ; transfer accumulator to index y
  |   |||   0x0000a231      b90014         lda 0x1400,y                ; load accumulator with memory
  |   |||   0x0000a234      85fe           sta 0xfe                    ; store accumulator in memory
  |   |||   0x0000a236      b9c014         lda 0x14c0,y                ; load accumulator with memory
  |   |||   0x0000a239      85ff           sta 0xff                    ; store accumulator in memory
  |   |||   0x0000a23b      adcda2         lda 0xa2cd                  ; load accumulator with memory
  |   |||   0x0000a23e      2980           and #0x80                   ; "and" memory with accumulator
  |   |||   0x0000a240      0a             asl a                       ; shift left one bit (memory or accumulator)
  |   |||   0x0000a241      2a             rol a                       ; rotate one bit left (memory or accumulator)
  |   |||   0x0000a242      8d4ca2         sta 0xa24c                  ; store accumulator in memory
  |   |||   0x0000a245      adcea2         lda 0xa2ce                  ; load accumulator with memory
  |   |||   0x0000a248      2907           and #0x07                   ; "and" memory with accumulator
  |   |||   0x0000a24a      0a             asl a                       ; shift left one bit (memory or accumulator)
  |   |||   0x0000a24b      0900           ora #0x00                   ; "or" memory with accumulator
  |   |||   0x0000a24d      a8             tay                         ; transfer accumulator to index y
  |   |||   0x0000a24e      adcea2         lda 0xa2ce                  ; load accumulator with memory
  |   |||   0x0000a251      2938           and #0x38                   ; "and" memory with accumulator
  |   |||   0x0000a253      4a             lsr a                       ; shift right one bit (memory or accumulator)
  |   |||   0x0000a254      4a             lsr a                       ; shift right one bit (memory or accumulator)
  |   |||   0x0000a255      4a             lsr a                       ; shift right one bit (memory or accumulator)
  |   |||   0x0000a256      aa             tax                         ; transfer accumulator to index x
  |   |||   0x0000a257      bdaba2         lda 0xa2ab,x                ; load accumulator with memory
  |   |||   0x0000a25a      3134           and (0x34),y                ; "and" memory with accumulator
  |   |||   0x0000a25c      8d6ca2         sta 0xa26c                  ; store accumulator in memory
  |   |||   0x0000a25f      c8             iny                         ; increment index y by one
  |   |||   0x0000a260      c8             iny                         ; increment index y by one
  |   |||   0x0000a261      98             tya                         ; transfer index y to accumulator
  |   |||   0x0000a262      0a             asl a                       ; shift left one bit (memory or accumulator)
  |   |||   0x0000a263      0a             asl a                       ; shift left one bit (memory or accumulator)
  |   |||   0x0000a264      0a             asl a                       ; shift left one bit (memory or accumulator)
  |   |||   0x0000a265      a8             tay                         ; transfer accumulator to index y
  |   |||   0x0000a266      bdb3a2         lda 0xa2b3,x                ; load accumulator with memory
  |   |||   0x0000a269      31fe           and (0xfe),y                ; "and" memory with accumulator
  |   |||   0x0000a26b      09ff           ora #0xff                   ; "or" memory with accumulator
  |   |||   0x0000a26d      91fe           sta (0xfe),y                ; store accumulator in memory
  |   |||   0x0000a26f      98             tya                         ; transfer index y to accumulator
  |   |||   0x0000a270      4a             lsr a                       ; shift right one bit (memory or accumulator)
  |   |||   0x0000a271      4a             lsr a                       ; shift right one bit (memory or accumulator)
  |   |||   0x0000a272      4a             lsr a                       ; shift right one bit (memory or accumulator)
  |   |||   0x0000a273      18             clc                         ; clear carry flag
  |   |||   0x0000a274      690e           adc #0x0e                   ; add memory to accumulator with carry
  |   |||   0x0000a276      c914           cmp #0x14                   ; compare memory and accumulator
  |  ,====< 0x0000a278      b019           bcs 0x4b2108                ; branch on carry set
  |  ||||   0x0000a27a      a8             tay                         ; transfer accumulator to index y
  |  ||||   0x0000a27b      bdaba2         lda 0xa2ab,x                ; load accumulator with memory
  |  ||||   0x0000a27e      3134           and (0x34),y                ; "and" memory with accumulator
  |  ||||   0x0000a280      8d90a2         sta 0xa290                  ; store accumulator in memory
  |  ||||   0x0000a283      c8             iny                         ; increment index y by one
  |  ||||   0x0000a284      c8             iny                         ; increment index y by one
  |  ||||   0x0000a285      98             tya                         ; transfer index y to accumulator
  |  ||||   0x0000a286      0a             asl a                       ; shift left one bit (memory or accumulator)
  |  ||||   0x0000a287      0a             asl a                       ; shift left one bit (memory or accumulator)
  |  ||||   0x0000a288      0a             asl a                       ; shift left one bit (memory or accumulator)
  |  ||||   0x0000a289      a8             tay                         ; transfer accumulator to index y
  |  ||||   0x0000a28a      bdb3a2         lda 0xa2b3,x                ; load accumulator with memory
  |  ||||   0x0000a28d      31fe           and (0xfe),y                ; "and" memory with accumulator
  |  ||||   0x0000a28f      09ff           ora #0xff                   ; "or" memory with accumulator
  |  ||||   0x0000a291      91fe           sta (0xfe),y                ; store accumulator in memory
  |  `----> 0x0000a293      20bba2         jsr 0xa2bb                  ; jump to new location saving return address
  |   |||   0x0000a296      cea9a2         dec 0xa2a9                  ; decrement memory by one
  |  ,====< 0x0000a299      d005           bne 0x4b2108                ; branch on result not zero
  |  ||||   0x0000a29b      ceaaa2         dec 0xa2aa                  ; decrement memory by one
  | ,=====< 0x0000a29e      f003           beq 0x4b2108                ; branch on result zero
  | |``===< 0x0000a2a0      4c19a2         jmp 0xa219                  ; jump to new location
  | `-----> 0x0000a2a3      20c5a1         jsr 0xa1c5                  ; jump to new location saving return address
  ========< 0x0000a2a6      4ccb85         jmp 0x85cb                  ; jump to new location
  |    ||   0x0000a2a9      00             brk                         ; force break
  |    ||   0x0000a2aa      200102         jsr 0x0201                  ; jump to new location saving return address
  |    ||   0x0000a2ad      0408           nop 0x08                    ; no operation
  |   ,===< 0x0000a2af      1020           bpl 0x4b2108                ; branch on result plus
  |   |||   0x0000a2b1      40             rti                         ; return from interrupt
  |   |||   0x0000a2b2      80fe           nop #0xfe                   ; no operation
  |   |||   0x0000a2b4      fdfbf7         sbc 0xf7fb,x                ; subtract memory from accumulator with borrow
  |   |||   0x0000a2b7      efdfbf         isb 0xbfdf
  |   |||   0x0000a2ba      7f186e         rra 0x6e18,x
  |   |||   0x0000a2bd      cea26e         dec 0x6ea2                  ; decrement memory by one
  |   |||   0x0000a2c0      cda290         cmp 0x90a2                  ; compare memory and accumulator
  |  ||||   0x0000a2c3      08             php                         ; push processor status on stack
  |  ||||   0x0000a2c4      adcea2         lda 0xa2ce                  ; load accumulator with memory
  |  ||||   0x0000a2c7      4935           eor #0x35                   ; "exclusive-or" memory with accumulator
  |  ||||   0x0000a2c9      8dcea2         sta 0xa2ce                  ; store accumulator in memory
  |  `----> 0x0000a2cc      60             rts                         ; return from subroutine
  |   |||   0x0000a2cd      00             brk                         ; force break
  |   |||   0x0000a2ce      01a9           ora (0xa9,x)                ; "or" memory with accumulator
  |   |||   0x0000a2d0      a68d           ldx 0x8d                    ; load index x with memory
  |    ||   0x0000a2d2      e6a2           inc 0xa2                    ; increment memory by one
  |    ||   0x0000a2d4      a906           lda #0x06                   ; load accumulator with memory
  |    ||   0x0000a2d6      8de5a2         sta 0xa2e5                  ; store accumulator in memory
  |    ||   0x0000a2d9      8a             txa                         ; transfer index x to accumulator
  |    ||   0x0000a2da      290f           and #0x0f                   ; "and" memory with accumulator
  |    ||   0x0000a2dc      8d07a3         sta 0xa307                  ; store accumulator in memory
  |    ||   0x0000a2df      a50a           lda 0x0a                    ; load accumulator with memory
  |    ||   0x0000a2e1      290f           and #0x0f                   ; "and" memory with accumulator
  |    ||   0x0000a2e3      a8             tay                         ; transfer accumulator to index y
  |  ..---> 0x0000a2e4      cc06a6         cpy 0xa606                  ; compare memory and index y
  | ,=====< 0x0000a2e7      f00f           beq 0x4b2108                ; branch on result zero
  | |||||   0x0000a2e9      c9ff           cmp #0xff                   ; compare memory and accumulator
  |,======< 0x0000a2eb      f055           beq 0x4b2108                ; branch on result zero
  |||||||   0x0000a2ed      eee5a2         inc 0xa2e5                  ; increment memory by one
  |||`====< 0x0000a2f0      d0f2           bne 0x4b2108                ; branch on result not zero
  ||| |||   0x0000a2f2      eee6a2         inc 0xa2e6                  ; increment memory by one
  ||| `===< 0x0000a2f5      4ce4a2         jmp 0xa2e4                  ; jump to new location
  ||`-----> 0x0000a2f8      ade5a2         lda 0xa2e5                  ; load accumulator with memory
  ||   ||   0x0000a2fb      8d0fa3         sta 0xa30f                  ; store accumulator in memory
  ||   ||   0x0000a2fe      ade6a2         lda 0xa2e6                  ; load accumulator with memory
  ||   ||   0x0000a301      8d10a3         sta 0xa310                  ; store accumulator in memory
  ||   ||   0x0000a304      a200           ldx #0x00                   ; load index x with memory
  ||   ||   0x0000a306      a0ff           ldy #0xff                   ; load index y with memory
  ||  .---> 0x0000a308      88             dey                         ; decrement index y by one
  || ,====< 0x0000a309      f00f           beq 0x4b2108                ; branch on result zero
  ||.-----> 0x0000a30b      e8             inx                         ; increment index x by one
  ========< 0x0000a30c      f034           beq 0x4b2108                ; branch on result zero
  |||||||   0x0000a30e      bdffff         lda 0xffff,x                ; load accumulator with memory
  ||||`===< 0x0000a311      f0f5           beq 0x4b2108                ; branch on result zero
  |||| ||   0x0000a313      c9ff           cmp #0xff                   ; compare memory and accumulator
  ||`=====< 0x0000a315      d0f4           bne 0x4b2108                ; branch on result not zero
  || |,===< 0x0000a317      4c42a3         jmp 0xa342                  ; jump to new location
  || `----> 0x0000a31a      a908           lda #0x08                   ; load accumulator with memory
  ||  |||   0x0000a31c      8dbfa3         sta 0xa3bf                  ; store accumulator in memory
  ||  |||   0x0000a31f      e8             inx                         ; increment index x by one
  ||  |||   0x0000a320      8a             txa                         ; transfer index x to accumulator
  ||  |||   0x0000a321      18             clc                         ; clear carry flag
  ||  |||   0x0000a322      6d0fa3         adc 0xa30f                  ; add memory to accumulator with carry
  ||  |||   0x0000a325      85fe           sta 0xfe                    ; store accumulator in memory
  ||  |||   0x0000a327      a900           lda #0x00                   ; load accumulator with memory
  ||  |||   0x0000a329      6d10a3         adc 0xa310                  ; add memory to accumulator with carry
  ||  |||   0x0000a32c      85ff           sta 0xff                    ; store accumulator in memory
  ||  |||   0x0000a32e      a000           ldy #0x00                   ; load index y with memory
  || .----> 0x0000a330      a905           lda #0x05                   ; load accumulator with memory
  || ||||   0x0000a332      8dbea3         sta 0xa3be                  ; store accumulator in memory
  || ||||   0x0000a335      2043a3         jsr 0xa343                  ; jump to new location saving return address
  || ||||   0x0000a338      c91f           cmp #0x1f                   ; compare memory and accumulator
  ||,=====< 0x0000a33a      d006           bne 0x4b2108                ; branch on result not zero
  |||||||   0x0000a33c      cebfa3         dec 0xa3bf                  ; decrement memory by one
  |||`====< 0x0000a33f      4c30a3         jmp 0xa330                  ; jump to new location
  -``-`---> 0x0000a342      60             rts                         ; return from subroutine
  |    ||   0x0000a343      8c47a3         sty 0xa347                  ; store index y in memory
  |   .---> 0x0000a346      a0ff           ldy #0xff                   ; load index y with memory
  |   |||   0x0000a348      b1fe           lda (0xfe),y                ; load accumulator with memory
  |   |||   0x0000a34a      c920           cmp #0x20                   ; compare memory and accumulator
  |  ,====< 0x0000a34c      9008           bcc 0x4b2108                ; branch on carry clear
  |  ||||   0x0000a34e      205da3         jsr 0xa35d                  ; jump to new location saving return address
  |  ||||   0x0000a351      ee47a3         inc 0xa347                  ; increment memory by one
  |  |`===< 0x0000a354      d0f0           bne 0x4b2108                ; branch on result not zero
  |  `----> 0x0000a356      ee47a3         inc 0xa347                  ; increment memory by one
  |    ||   0x0000a359      ac47a3         ldy 0xa347                  ; load index y with memory
  |    ||   0x0000a35c      60             rts                         ; return from subroutine
  |    ||   0x0000a35d      aa             tax                         ; transfer accumulator to index x
  |    ||   0x0000a35e      adbfa3         lda 0xa3bf                  ; load accumulator with memory
  |    ||   0x0000a361      0a             asl a                       ; shift left one bit (memory or accumulator)
  |    ||   0x0000a362      0a             asl a                       ; shift left one bit (memory or accumulator)
  |    ||   0x0000a363      0a             asl a                       ; shift left one bit (memory or accumulator)
  |    ||   0x0000a364      a8             tay                         ; transfer accumulator to index y
  |    ||   0x0000a365      88             dey                         ; decrement index y by one
  |    ||   0x0000a366      b950a4         lda 0xa450,y                ; load accumulator with memory
  |    ||   0x0000a369      8da2a3         sta 0xa3a2                  ; store accumulator in memory
  |    ||   0x0000a36c      b9c0a3         lda 0xa3c0,y                ; load accumulator with memory
  |    ||   0x0000a36f      8da3a3         sta 0xa3a3                  ; store accumulator in memory
  |    ||   0x0000a372      a908           lda #0x08                   ; load accumulator with memory
  |    ||   0x0000a374      85b4           sta 0xb4                    ; store accumulator in memory
  |    ||   0x0000a376      8e9da3         stx 0xa39d                  ; store index x in memory
  |    ||   0x0000a379      a900           lda #0x00                   ; load accumulator with memory
  |    ||   0x0000a37b      0e9da3         asl 0xa39d                  ; shift left one bit (memory or accumulator)
  |    ||   0x0000a37e      2a             rol a                       ; rotate one bit left (memory or accumulator)
  |    ||   0x0000a37f      0e9da3         asl 0xa39d                  ; shift left one bit (memory or accumulator)
  |    ||   0x0000a382      2a             rol a                       ; rotate one bit left (memory or accumulator)
  |    ||   0x0000a383      0e9da3         asl 0xa39d                  ; shift left one bit (memory or accumulator)
  |    ||   0x0000a386      2a             rol a                       ; rotate one bit left (memory or accumulator)
  |    ||   0x0000a387      48             pha                         ; push accumulator on stack
  |    ||   0x0000a388      ad9da3         lda 0xa39d                  ; load accumulator with memory
  |    ||   0x0000a38b      18             clc                         ; clear carry flag
  |    ||   0x0000a38c      6980           adc #0x80                   ; add memory to accumulator with carry
  |    ||   0x0000a38e      8d9da3         sta 0xa39d                  ; store accumulator in memory
  |    ||   0x0000a391      68             pla                         ; pull accumulator from stack
  |    ||   0x0000a392      6915           adc #0x15                   ; add memory to accumulator with carry
  |    ||   0x0000a394      8d9ea3         sta 0xa39e                  ; store accumulator in memory
  |    ||   0x0000a397      a000           ldy #0x00                   ; load index y with memory
  |    ||   0x0000a399      aebea3         ldx 0xa3be                  ; load index x with memory
  |   .---> 0x0000a39c      b9ffff         lda 0xffff,y                ; load accumulator with memory
  |   |||   0x0000a39f      49ff           eor #0xff                   ; "exclusive-or" memory with accumulator
  |   |||   0x0000a3a1      9dffff         sta 0xffff,x                ; store accumulator in memory
  |   |||   0x0000a3a4      c6b4           dec 0xb4                    ; decrement memory by one
  |  ,====< 0x0000a3a6      f012           beq 0x4b2108                ; branch on result zero
  |  ||||   0x0000a3a8      c8             iny                         ; increment index y by one
  |  ||||   0x0000a3a9      ada2a3         lda 0xa3a2                  ; load accumulator with memory
  |  ||||   0x0000a3ac      18             clc                         ; clear carry flag
  |  ||||   0x0000a3ad      6914           adc #0x14                   ; add memory to accumulator with carry
  |  ||||   0x0000a3af      8da2a3         sta 0xa3a2                  ; store accumulator in memory
  | ,=====< 0x0000a3b2      9003           bcc 0x4b2108                ; branch on carry clear
  | |||||   0x0000a3b4      eea3a3         inc 0xa3a3                  ; increment memory by one
  | `-`===< 0x0000a3b7      4c9ca3         jmp 0xa39c                  ; jump to new location
  |  `----> 0x0000a3ba      eebea3         inc 0xa3be                  ; increment memory by one
  |    ||   0x0000a3bd      60             rts                         ; return from subroutine
  |    ||   0x0000a3be      00             brk
  |    ||   0x0000a3bf      00             brk

0000a3c0  a7 a7 a7 a7 a7 a7 a7 a7  a7 a7 a7 a7 a7 a8 a8 a8  |................|
0000a3d0  a8 a8 a8 a8 a8 a8 a8 a8  a8 a8 a9 a9 a9 a9 a9 a9  |................|
0000a3e0  a9 a9 a9 a9 a9 a9 a9 aa  aa aa aa aa aa aa aa aa  |................|
0000a3f0  aa aa aa aa ab ab ab ab  ab ab ab ab ab ab ab ab  |................|
0000a400  ac ac ac ac ac ac ac ac  ac ac ac ac ac ad ad ad  |................|
0000a410  ad ad ad ad ad ad ad ad  ad ad ae ae ae ae ae ae  |................|
0000a420  ae ae ae ae ae ae ae af  af af af af af af af af  |................|
0000a430  af af af af b0 b0 b0 b0  b0 b0 b0 b0 b0 b0 b0 b0  |................|
0000a440  b1 b1 b1 b1 b1 b1 b1 b1  b1 b1 b1 b1 b1 b2 b2 b2  |................|
0000a450  00 14 28 3c 50 64 78 8c  a0 b4 c8 dc f0 04 18 2c  |..(<Pdx........,|
0000a460  40 54 68 7c 90 a4 b8 cc  e0 f4 08 1c 30 44 58 6c  |@Th|........0DXl|
0000a470  80 94 a8 bc d0 e4 f8 0c  20 34 48 5c 70 84 98 ac  |........ 4H\p...|
0000a480  c0 d4 e8 fc 10 24 38 4c  60 74 88 9c b0 c4 d8 ec  |.....$8L`t......|
0000a490  00 14 28 3c 50 64 78 8c  a0 b4 c8 dc f0 04 18 2c  |..(<Pdx........,|
0000a4a0  40 54 68 7c 90 a4 b8 cc  e0 f4 08 1c 30 44 58 6c  |@Th|........0DXl|
0000a4b0  80 94 a8 bc d0 e4 f8 0c  20 34 48 5c 70 84 98 ac  |........ 4H\p...|
0000a4c0  c0 d4 e8 fc 10 24 38 4c  60 74 88 9c b0 c4 d8 ec  |.....$8L`t......|
0000a4d0  00 14 28 3c 50 64 78 8c  a0 b4 c8 dc f0 04 18 2c  |..(<Pdx........,|
0000a4e0  00 80 40 c0 20 a0 60 e0  10 90 50 d0 30 b0 70 f0  |..@. .`...P.0.p.|
0000a4f0  08 88 48 c8 28 a8 68 e8  18 98 58 d8 38 b8 78 f8  |..H.(.h...X.8.x.|
0000a500  04 84 44 c4 24 a4 64 e4  14 94 54 d4 34 b4 74 f4  |..D.$.d...T.4.t.|
0000a510  0c 8c 4c cc 2c ac 6c ec  1c 9c 5c dc 3c bc 7c fc  |..L.,.l...\.<.|.|
0000a520  02 82 42 c2 22 a2 62 e2  12 92 52 d2 32 b2 72 f2  |..B.".b...R.2.r.|
0000a530  0a 8a 4a ca 2a aa 6a ea  1a 9a 5a da 3a ba 7a fa  |..J.*.j...Z.:.z.|
0000a540  06 86 46 c6 26 a6 66 e6  16 96 56 d6 36 b6 76 f6  |..F.&.f...V.6.v.|
0000a550  0e 8e 4e ce 2e ae 6e ee  1e 9e 5e de 3e be 7e fe  |..N...n...^.>.~.|
0000a560  00 b0 f0 10 a0 50 90 b0  70 40 30 e0 70 10 00 b0  |.....P..p@0.p...|
0000a570  40 f0 30 50 e0 90 d0 f0  70 80 70 20 70 70 70 b0  |@.0P....p.p ppp.|
0000a580  0e 6c ff 92 bc e6 ed f4  52 b0 43 d6 00 2a 31 38  |.l......R.C..*18|
0000a590  a1 0a 5e b2 ce ea f1 f8  61 ca 1e 72 8e aa b1 b8  |..^.....a..r....|
0000a5a0  21 8a de 32 4e 6a 71 00  00 00 80 00 80 00 c0 c0  |!..2Njq.........|
0000a5b0  c0 40 88 c0 c1 c3 c5 c5  c7 c9 ca d1 cb cf d0 d1  |.@..............|
0000a5c0  d7 db dc dd de e1 e2 e2  e4 e6 e7 d1 e8 ec ee d1  |................|
0000a5d0  d1 d1 ee f0 f1 f1 f2 f2  f2 f2 f2 f4 f5 f6 f6 f7  |................|
0000a5e0  f7 f7 f7 f7 f8 f8 f8 f8  f8 f8 f8 f9 f9 fa fa fa  |................|
0000a5f0  fa fa fa fb fb fb fc fc  fc fc 0b 0d 08 0e 0f 0f  |................|
0000a600  0c 0d 08 0e 0f 0f 01 20  20 20 50 49 54 20 20 20  |.......   PIT   |
0000a610  20 1f 42 4f 54 54 4f 4d  4c 45 53 53 00 02 20 20  | .BOTTOMLESS..  |
0000a620  53 4f 55 4c 53 20 20 20  1f 20 20 4f 46 20 4c 4f  |SOULS   .  OF LO|
0000a630  5f 20 20 1f 20 5b 45 20  4d 41 5a 45 20 20 00 03  |_  . [E MAZE  ..|
0000a640  a0 00 04 20 20 20 20 57  52 4f 5d 20 20 1f 20 5b  |...    WRO]  . [|
0000a650  45 20 50 52 49 53 4f 4e  00 05 20 5b 45 20 43 52  |E PRISON.. [E CR|
0000a660  59 50 54 20 00 20 20 43  52 59 50 54 53 20 20 1f  |YPT .  CRYPTS  .|
0000a670  20 20 55 50 50 45 52 20  20 20 00 20 20 43 52 59  |  UPPER   .  CRY|
0000a680  50 54 53 20 20 1f 20 20  4c 4f 57 45 52 20 20 20  |PTS  .  LOWER   |
0000a690  00 20 20 20 41 4c 4c 45  59 20 20 1f 20 20 44 45  |.   ALLEY  .  DE|
0000a6a0  42 54 4f 52 53 20 00 06  20 20 20 44 5c 50 20 20  |BTORS ..   D\P  |
0000a6b0  20 20 00 20 20 44 5c 50  45 52 20 20 20 00 20 20  |  .  D\PER   .  |
0000a6c0  44 5c 50 45 5f 20 20 20  00 07 20 20 20 4d 41 5a  |D\PE_   ..   MAZ|
0000a6d0  45 20 20 20 1f 4d 4f 5b  45 52 20 4c 4f 44 45 00  |E   .MO[ER LODE.|
0000a6e0  08 a0 00 ff 00 00 03 01  01 03 03 02 02 01 60 a0  |..............`.|
0000a6f0  00 90 80 60 00 00 00 00  00 00 8e 0b a7 a2 00 a1  |...`............|
0000a700  fe e6 fe d0 02 e6 ff ae  0b a7 60 00 8e 2a a7 a2  |..........`..*..|
0000a710  00 81 fc e6 fc d0 02 e6  fd ae 2a a7 48 ad f6 a6  |..........*.H...|
0000a720  d0 03 ce f7 a6 ce f6 a6  68 60 00 a0 00 8c f8 a6  |........h`......|
0000a730  a9 00 99 00 7e c8 c0 80  d0 f8 20 fa a6 48 20 0c  |....~..... ..H .|
0000a740  a7 68 99 00 7e c8 d0 f2  60 ac f8 a6 99 00 7e c8  |.h..~...`.....~.|
0000a750  8c f8 a6 60 a9 00 8d f9  a6 60 8e 6b a7 ae f9 a6  |...`.....`.k....|
0000a760  9d 00 7f e8 8e f9 a6 ae  6b a7 60 00 a2 00 bd 00  |........k.`.....|
0000a770  7f 20 0c a7 20 49 a7 e8  ec f9 a6 d0 f1 a2 00 8e  |. .. I..........|
0000a780  f9 a6 60 a9 00 85 fc 84  fd 20 06 6c a9 00 85 fe  |..`...... .l....|
0000a790  a9 b0 85 ff 20 2b a7 20  54 a7 20 fa a6 aa f0 11  |.... +. T. .....|
0000a7a0  20 fa a6 a8 b9 00 7e 20  5a a7 c8 ca d0 f6 4c b7  | .....~ Z.....L.|
0000a7b0  a7 20 fa a6 20 5a a7 20  6c a7 ad f7 a6 30 07 d0  |. .. Z. l....0..|
0000a7c0  d9 ad f6 a6 d0 d4 4c 03  6c a5 c8 10 b5 a2 fa a0  |......L.l.......|
0000a7d0  a7 a9 05 20 bd ff a9 0f  ae 33 6c a0 0f 20 ba ff  |... .....3l.. ..|
0000a7e0  20 c0 ff a2 0f 20 c6 ff  20 cf ff c9 37 f0 03 ce  | .... .. ...7...|
0000a7f0  e4 a6 a9 0f 20 c3 ff 4c  e7 ff 4d 2d 52 c6 e5     |.... ..L..M-R..|
 