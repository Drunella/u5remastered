  ========< 0x00008000      4c0680         jmp 0x8006                  ; jump to new location
  ========< 0x00008003      4c0198         jmp 0x9801                  ; jump to new location
  --------> 0x00008006      a2ff           ldx #0xff                   ; load index x with memory
  |||||||   0x00008008      8680           stx 0x80                    ; store index x in memory
  |||||||   0x0000800a      a900           lda #0x00                   ; load accumulator with memory
  |||||||   0x0000800c      857a           sta 0x7a                    ; store accumulator in memory
  |||||||   0x0000800e      202d4c         jsr 0x4c2d                  ; jump to new location saving return address
  |||||||   0x00008011      a900           lda #0x00                   ; load accumulator with memory
  |||||||   0x00008013      8d0781         sta 0x8107                  ; store accumulator in memory
  |||||||   0x00008016      8dd582         sta 0x82d5                  ; store accumulator in memory
  |||||||   0x00008019      38             sec                         ; set carry flag
  |||||||   0x0000801a      6671           ror 0x71                    ; rotate one bit right (memory or accumulator)
  |||||||   0x0000801c      a9af           lda #0xaf                   ; load accumulator with memory
  |||||||   0x0000801e      8d1c4c         sta 0x4c1c                  ; store accumulator in memory
  |||||||   0x00008021      a94c           lda #0x4c                   ; load accumulator with memory
  |||||||   0x00008023      8d1d4c         sta 0x4c1d                  ; store accumulator in memory
  |||||||   0x00008026      202a4c         jsr 0x4c2a                  ; jump to new location saving return address
  |||||||   0x00008029      200198         jsr 0x9801                  ; jump to new location saving return address
  |||||||   0x0000802c      2011a4         jsr 0xa411                  ; jump to new location saving return address
  |||||||   0x0000802f      a20b           ldx #0x0b                   ; load index x with memory
  |||||||   0x00008031      a509           lda 0x09                    ; load accumulator with memory
  ========< 0x00008033      300c           bmi 0x514108                ; branch on result minus
  |||||||   0x00008035      a202           ldx #0x02                   ; load index x with memory
  |||||||   0x00008037      a50c           lda 0x0c                    ; load accumulator with memory
  |||||||   0x00008039      29f0           and #0xf0                   ; "and" memory with accumulator
  |||||||   0x0000803b      c920           cmp #0x20                   ; compare memory and accumulator
  ========< 0x0000803d      d002           bne 0x514108                ; branch on result not zero
  |||||||   0x0000803f      a203           ldx #0x03                   ; load index x with memory
  --------> 0x00008041      20406c         jsr 0x6c40                  ; jump to new location saving return address
  |||||||   0x00008044      a517           lda 0x17                    ; load accumulator with memory
  |||||||   0x00008046      c940           cmp #0x40                   ; compare memory and accumulator
  ========< 0x00008048      9030           bcc 0x514108                ; branch on carry clear
  |||||||   0x0000804a      20484c         jsr 0x4c48                  ; jump to new location saving return address
  |||||||   0x0000804d      a900           lda #0x00                   ; load accumulator with memory
  |||||||   0x0000804f      9d804a         sta 0x4a80,x                ; store accumulator in memory
  |||||||   0x00008052      a517           lda 0x17                    ; load accumulator with memory
  |||||||   0x00008054      293f           and #0x3f                   ; "and" memory with accumulator
  |||||||   0x00008056      9de04a         sta 0x4ae0,x                ; store accumulator in memory
  |||||||   0x00008059      a518           lda 0x18                    ; load accumulator with memory
  |||||||   0x0000805b      9d404a         sta 0x4a40,x                ; store accumulator in memory
  |||||||   0x0000805e      a519           lda 0x19                    ; load accumulator with memory
  |||||||   0x00008060      9d604a         sta 0x4a60,x                ; store accumulator in memory
  |||||||   0x00008063      a925           lda #0x25                   ; load accumulator with memory
  |||||||   0x00008065      2417           bit 0x17                    ; test bits in memory with accumulator
  ========< 0x00008067      3002           bmi 0x514108                ; branch on result minus
  |||||||   0x00008069      a929           lda #0x29                   ; load accumulator with memory
  --------> 0x0000806b      9d004a         sta 0x4a00,x                ; store accumulator in memory
  |||||||   0x0000806e      9d204a         sta 0x4a20,x                ; store accumulator in memory
  |||||||   0x00008071      a999           lda #0x99                   ; load accumulator with memory
  |||||||   0x00008073      9dc04a         sta 0x4ac0,x                ; store accumulator in memory
  |||||||   0x00008076      a900           lda #0x00                   ; load accumulator with memory
  |||||||   0x00008078      8517           sta 0x17                    ; store accumulator in memory
  --------> 0x0000807a      202496         jsr 0x9624                  ; jump to new location saving return address
  |||||||   0x0000807d      201e6c         jsr 0x6c1e                  ; jump to new location saving return address
  ========< 0x00008080      f052           beq 0x514108                ; branch on result zero
  ========< 0x00008082      1039           bpl 0x514108                ; branch on result plus
  --------> 0x00008084      a200           ldx #0x00                   ; load index x with memory
  |||||||   0x00008086      20406c         jsr 0x6c40                  ; jump to new location saving return address
  |||||||   0x00008089      a91e           lda #0x1e                   ; load accumulator with memory
  |||||||   0x0000808b      850c           sta 0x0c                    ; store accumulator in memory
  |||||||   0x0000808d      201b4c         jsr 0x4c1b                  ; jump to new location saving return address
  |||||||   0x00008090      20304c         jsr 0x4c30                  ; jump to new location saving return address
  --------> 0x00008093      202d6c         jsr 0x6c2d                  ; jump to new location saving return address
  |||||||   0x00008096      533a           sre (0x3a),y
  |||||||   0x00008098      544c           nop 0x4c,x                  ; no operation
  |||||||   0x0000809a      4953           eor #0x53                   ; "exclusive-or" memory with accumulator
  |||||||   0x0000809c      5400           nop 0x00,x                  ; no operation
  |||||||   0x0000809e      00             brk                         ; force break
  |||||||   0x0000809f      4a             lsr a                       ; shift right one bit (memory or accumulator)
  |||||||   0x000080a0      00             brk                         ; force break
  |||||||   0x000080a1      02             hlt
  ========< 0x000080a2      b0ef           bcs 0x514108                ; branch on carry set
  |||||||   0x000080a4      a905           lda #0x05                   ; load accumulator with memory
  |||||||   0x000080a6      20096c         jsr 0x6c09                  ; jump to new location saving return address
  |||||||   0x000080a9      a91c           lda #0x1c                   ; load accumulator with memory
  |||||||   0x000080ab      850c           sta 0x0c                    ; store accumulator in memory
  --------> 0x000080ad      a200           ldx #0x00                   ; load index x with memory
  |||||||   0x000080af      20246c         jsr 0x6c24                  ; jump to new location saving return address
  |||||||   0x000080b2      4445           nop 0x45                    ; DEATH
  |||||||   0x000080b4      4154           eor (0x54,x)                ; 
  |||||||   0x000080b6      48             pha                         ; 
  |||||||   0x000080b7      00             brk                         ; force break
  ========< 0x000080b8      b0f3           bcs 0x514108                ; branch on carry set
  ========< 0x000080ba      4c00a7         jmp 0xa700                  ; jump to new location
  --------> 0x000080bd      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000080c0      8d1e00         sta 0x001e                  ; store accumulator in memory
  |||||||   0x000080c3      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000080c6      da             nop                         ; no operation
  |||||||   0x000080c7      fa             nop                         ; no operation
  |||||||   0x000080c8      fa             nop                         ; no operation
  |||||||   0x000080c9      fa             nop                         ; no operation
  |||||||   0x000080ca      fa             nop                         ; no operation
  |||||||   0x000080cb      fa             nop                         ; no operation
  |||||||   0x000080cc      aeaeae         ldx 0xaeae                  ; load index x with memory
  |||||||   0x000080cf      8d004c         sta 0x4c00                  ; store accumulator in memory
  |||||||   0x000080d2      02             hlt
  |||||||   0x000080d3      9520           sta 0x20,x                  ; store accumulator in memory
  |||||||   0x000080d5      1b6c90         slo 0x906c,y
  |||||||   0x000080d8      0320           slo (0x20,x)
  |||||||   0x000080da      ba             tsx                         ; transfer stack pointer to index x
  |||||||   0x000080db      88             dey                         ; decrement index y by one
  |||||||   0x000080dc      a50c           lda 0x0c                    ; load accumulator with memory
  |||||||   0x000080de      29f0           and #0xf0                   ; "and" memory with accumulator
  |||||||   0x000080e0      c920           cmp #0x20                   ; compare memory and accumulator
  ========< 0x000080e2      d002           bne 0x514108                ; branch on result not zero
  |||||||   0x000080e4      4633           lsr 0x33                    ; shift right one bit (memory or accumulator)
  --------> 0x000080e6      201b4c         jsr 0x4c1b                  ; jump to new location saving return address
  |||||||   0x000080e9      205096         jsr 0x9650                  ; jump to new location saving return address
  |||||||   0x000080ec      ad4748         lda 0x4847                  ; load accumulator with memory
  |||||||   0x000080ef      29fc           and #0xfc                   ; "and" memory with accumulator
  |||||||   0x000080f1      c9d4           cmp #0xd4                   ; compare memory and accumulator
  ========< 0x000080f3      d006           bne 0x514108                ; branch on result not zero
  |||||||   0x000080f5      20b296         jsr 0x96b2                  ; jump to new location saving return address
  ========< 0x000080f8      4c0295         jmp 0x9502                  ; jump to new location
  --------> 0x000080fb      2cd582         bit 0x82d5                  ; test bits in memory with accumulator
  ========< 0x000080fe      3006           bmi 0x514108                ; branch on result minus
  |||||||   0x00008100      20004c         jsr 0x4c00                  ; print text
  |||||||   0x00008103      8d1e00                                     ; prompt
  --------> 0x00008106      a900           lda #0x00                   ; load accumulator with memory
  |||||||   0x00008108      8524           sta 0x24                    ; store accumulator in memory
  |||||||   0x0000810a      20154c         jsr 0x4c15                  ; returns pressed key in a
  |||||||   0x0000810d      4624           lsr 0x24                    ; shift right one bit (memory or accumulator)
  |||||||   0x0000810f      8dd682         sta 0x82d6                  ; store accumulator in memory
  |||||||   0x00008112      aa             tax                         ; transfer accumulator to index x
  |||||||   0x00008113      08             php                         ; push processor status on stack
  |||||||   0x00008114      c901           cmp #0x01                   ; compare memory and accumulator
  ========< 0x00008116      9009           bcc 0x514108                ; branch on carry clear
  |||||||   0x00008118      c91b           cmp #0x1b                   ; compare memory and accumulator
  ========< 0x0000811a      b005           bcs 0x514108                ; branch on carry set
  |||||||   0x0000811c      28             plp                         ; pull processor status from stack
  |||||||   0x0000811d      6980           adc #0x80                   ; add memory to accumulator with carry
  ========< 0x0000811f      d001           bne 0x514108                ; branch on result not zero
  --------> 0x00008121      28             plp                         ; pull processor status from stack
  ========< 0x00008122      304c           bmi 0x514108                ; branch on result minus
  |||||||   0x00008124      ad0781         lda 0x8107                  ; load accumulator with memory
  ========< 0x00008127      10dd           bpl 0x514108                ; branch on result plus
  |||||||   0x00008129      a423           ldy 0x23                    ; load index y with memory
  ========< 0x0000812b      f01b           beq 0x514108                ; branch on result zero
  |||||||   0x0000812d      a200           ldx #0x00                   ; load index x with memory
  |||||||   0x0000812f      b9d682         lda 0x82d6,y                ; load accumulator with memory
  |||||||   0x00008132      cddf82         cmp 0x82df                  ; compare memory and accumulator
  ========< 0x00008135      f001           beq 0x514108                ; branch on result zero
  |||||||   0x00008137      e8             inx                         ; increment index x by one
  --------> 0x00008138      b9da82         lda 0x82da,y                ; load accumulator with memory
  |||||||   0x0000813b      cde082         cmp 0x82e0                  ; compare memory and accumulator
  ========< 0x0000813e      f001           beq 0x514108                ; branch on result zero
  |||||||   0x00008140      e8             inx                         ; increment index x by one
  --------> 0x00008141      a525           lda 0x25                    ; load accumulator with memory
  |||||||   0x00008143      dde182         cmp 0x82e1,x                ; compare memory and accumulator
  ========< 0x00008146      b021           bcs 0x514108                ; branch on carry set
  --------> 0x00008148      2cf411         bit 0x11f4                  ; test bits in memory with accumulator
  ========< 0x0000814b      1009           bpl 0x514108                ; branch on result plus
  |||||||   0x0000814d      a900           lda #0x00                   ; load accumulator with memory
  |||||||   0x0000814f      49ff           eor #0xff                   ; "exclusive-or" memory with accumulator
  |||||||   0x00008151      8d4e81         sta 0x814e                  ; store accumulator in memory
  ========< 0x00008154      1006           bpl 0x514108                ; branch on result plus
  --------> 0x00008156      20d8a2         jsr 0xa2d8                  ; jump to new location saving return address
  |||||||   0x00008159      201b4c         jsr 0x4c1b                  ; jump to new location saving return address
  --------> 0x0000815c      e625           inc 0x25                    ; increment memory by one
  |||||||   0x0000815e      a902           lda #0x02                   ; load accumulator with memory
  |||||||   0x00008160      202d4c         jsr 0x4c2d                  ; jump to new location saving return address
  |||||||   0x00008163      20304c         jsr 0x4c30                  ; jump to new location saving return address
  ========< 0x00008166      4c0681         jmp 0x8106                  ; jump to new location
  --------> 0x00008169      a900           lda #0x00                   ; load accumulator with memory
  |||||||   0x0000816b      8525           sta 0x25                    ; store accumulator in memory
  |||||||   0x0000816d      ad0781         lda 0x8107                  ; load accumulator with memory
  --------> 0x00008170      a200           ldx #0x00                   ; load index x with memory
  |||||||   0x00008172      86a7           stx 0xa7                    ; store index x in memory
  |||||||   0x00008174      8edf82         stx 0x82df                  ; store index x in memory
  |||||||   0x00008177      86a8           stx 0xa8                    ; store index x in memory
  |||||||   0x00008179      8ee082         stx 0x82e0                  ; store index x in memory
  |||||||   0x0000817c      a208           ldx #0x08                   ; load index x with memory
  --------> 0x0000817e      dd8e82         cmp 0x828e,x                ; compare memory and accumulator
  ========< 0x00008181      d031           bne 0x514108                ; branch on result not zero
  |||||||   0x00008183      a50c           lda 0x0c                    ; load accumulator with memory
  |||||||   0x00008185      29fc           and #0xfc                   ; "and" memory with accumulator
  |||||||   0x00008187      c920           cmp #0x20                   ; compare memory and accumulator
  ========< 0x00008189      d012           bne 0x514108                ; branch on result not zero
  |||||||   0x0000818b      bd8e82         lda 0x828e,x                ; load accumulator with memory
  |||||||   0x0000818e      cd0781         cmp 0x8107                  ; compare memory and accumulator
  ========< 0x00008191      f007           beq 0x514108                ; branch on result zero
  |||||||   0x00008193      8d0781         sta 0x8107                  ; store accumulator in memory
  |||||||   0x00008196      a000           ldy #0x00                   ; load index y with memory
  |||||||   0x00008198      8425           sty 0x25                    ; store index y in memory
  --------> 0x0000819a      8dd582         sta 0x82d5                  ; store accumulator in memory
  --------> 0x0000819d      8a             txa                         ; transfer index x to accumulator
  |||||||   0x0000819e      29fe           and #0xfe                   ; "and" memory with accumulator
  |||||||   0x000081a0      aa             tax                         ; transfer accumulator to index x
  |||||||   0x000081a1      bd9782         lda 0x8297,x                ; load accumulator with memory
  |||||||   0x000081a4      85fe           sta 0xfe                    ; store accumulator in memory
  |||||||   0x000081a6      bd9882         lda 0x8298,x                ; load accumulator with memory
  |||||||   0x000081a9      85ff           sta 0xff                    ; store accumulator in memory
  |||||||   0x000081ab      202a4c         jsr 0x4c2a                  ; jump to new location saving return address
  |||||||   0x000081ae      20e482         jsr 0x82e4                  ; jump to new location saving return address
  |||||||   0x000081b1      6cfe00         jmp (0x00fe)                ; jump to new location
  --------> 0x000081b4      ca             dex                         ; decrement index x by one
  ========< 0x000081b5      10c7           bpl 0x514108                ; branch on result plus
  |||||||   0x000081b7      4ed582         lsr 0x82d5                  ; shift right one bit (memory or accumulator)
  |||||||   0x000081ba      4624           lsr 0x24                    ; shift right one bit (memory or accumulator)
  |||||||   0x000081bc      c9b0           cmp #0xb0                   ; 
  ========< 0x000081be      907d           bcc 0x514108                ; larger than $b0
  |||||||   0x000081c0      c9b7           cmp #0xb7                   ; 
  ========< 0x000081c2      b079           bcs 0x514108                ; less thab $b7
  |||||||   0x000081c4      48             pha                         ; push accumulator on stack
  |||||||   0x000081c5      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000081c8      d3e5f4a0c1e3f4e9f6e5a0d0ecf2ba8d00         ; Se
  |||||||   0x000081d9      e680           inc $80
  |||||||   0x000081db      68             pla
  |||||||   0x000081dc      c9b0           cmp #0xb0                   ; compare memory and accumulator
  ========< 0x000081de      d011           bne 0x514108                ; branch on result not zero
  |||||||   0x000081e0      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000081e3      ceefee         dec 0xeeef                  ; decrement memory by one
  |||||||   0x000081e6      e5a1           sbc 0xa1                    ; subtract memory from accumulator with borrow
  |||||||   0x000081e8      8d00a9         sta 0xa900                  ; store accumulator in memory
  |||||||   0x000081eb      ff852c         isb 0x2c85,x
  ========< 0x000081ee      4c7a80         jmp 0x807a                  ; jump to new location
  --------> 0x000081f1      38             sec                         ; set carry flag
  |||||||   0x000081f2      e9b1           sbc #0xb1                   ; subtract memory from accumulator with borrow
  |||||||   0x000081f4      8d3c82         sta 0x823c                  ; store accumulator in memory
  |||||||   0x000081f7      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x000081f8      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x000081f9      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x000081fa      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x000081fb      a8             tay                         ; transfer accumulator to index y
  |||||||   0x000081fc      b98010         lda 0x1080,y                ; load accumulator with memory
  ========< 0x000081ff      d02b           bne 0x514108                ; branch on result not zero
  |||||||   0x00008201      b98310         lda 0x1083,y                ; load accumulator with memory
  |||||||   0x00008204      c9c4           cmp #0xc4                   ; compare memory and accumulator
  ========< 0x00008206      f024           beq 0x514108                ; branch on result zero
  |||||||   0x00008208      c9d3           cmp #0xd3                   ; compare memory and accumulator
  ========< 0x0000820a      f020           beq 0x514108                ; branch on result zero
  |||||||   0x0000820c      ad3c82         lda 0x823c                  ; load accumulator with memory
  |||||||   0x0000820f      852c           sta 0x2c                    ; store accumulator in memory
  |||||||   0x00008211      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x00008212      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x00008213      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x00008214      a8             tay                         ; transfer accumulator to index y
  --------> 0x00008215      b90010         lda 0x1000,y                ; load accumulator with memory
  ========< 0x00008218      1007           bpl 0x514108                ; branch on result plus
  |||||||   0x0000821a      20034c         jsr 0x4c03                  ; jump to new location saving return address
  |||||||   0x0000821d      c8             iny                         ; increment index y by one
  ========< 0x0000821e      4c1582         jmp 0x8215                  ; jump to new location
  --------> 0x00008221      0980           ora #0x80                   ; "or" memory with accumulator
  |||||||   0x00008223      20034c         jsr 0x4c03                  ; jump to new location saving return address
  |||||||   0x00008226      20064c         jsr 0x4c06                  ; jump to new location saving return address
  ========< 0x00008229      4c7a80         jmp 0x807a                  ; jump to new location
  --------> 0x0000822c      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x0000822f      c9eef6e1ece9e4a18d00
  ========< 0x00008239      4c0295         jmp 0x9502                  ; jump to new location
  |||||||   0x0000823c      00             brk                         ; force break
  --------> 0x0000823d      c9c1           cmp #0xc1                   ; compare memory and accumulator
  ========< 0x0000823f      9017           bcc 0x514108                ; branch on carry clear
  |||||||   0x00008241      c9db           cmp #0xdb                   ; compare memory and accumulator
  ========< 0x00008243      b013           bcs 0x514108                ; branch on carry set
  |||||||   0x00008245      e680           inc 0x80                    ; increment memory by one
  |||||||   0x00008247      e9c0           sbc #0xc0                   ; subtract memory from accumulator with borrow
  |||||||   0x00008249      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x0000824a      aa             tax                         ; transfer accumulator to index x
  |||||||   0x0000824b      bda182         lda 0x82a1,x                ; load accumulator with memory
  |||||||   0x0000824e      85fe           sta 0xfe                    ; store accumulator in memory
  |||||||   0x00008250      bda282         lda 0x82a2,x                ; load accumulator with memory
  --------> 0x00008253      85ff           sta 0xff                    ; store accumulator in memory
  |||||||   0x00008255      6cfe00         jmp (0x00fe)                ; jump to new location
  --------> 0x00008258      add682         lda 0x82d6                  ; load accumulator with memory
  |||||||   0x0000825b      a203           ldx #0x03                   ; load index x with memory
  --------> 0x0000825d      dd8a82         cmp 0x828a,x                ; compare memory and accumulator
  ========< 0x00008260      d010           bne 0x514108                ; branch on result not zero
  |||||||   0x00008262      8a             txa                         ; transfer index x to accumulator
  |||||||   0x00008263      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x00008264      aa             tax                         ; transfer accumulator to index x
  |||||||   0x00008265      bd8282         lda 0x8282,x                ; load accumulator with memory
  |||||||   0x00008268      85fe           sta 0xfe                    ; store accumulator in memory
  |||||||   0x0000826a      bd8382         lda 0x8283,x                ; load accumulator with memory
  |||||||   0x0000826d      85ff           sta 0xff                    ; store accumulator in memory
  |||||||   0x0000826f      6cfe00         jmp (0x00fe)                ; jump to new location
  --------> 0x00008272      ca             dex                         ; decrement index x by one
  ========< 0x00008273      10e8           bpl 0x514108                ; branch on result plus
  |||||||   0x00008275      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008278      d7e8e1f4bf8d00                             ; 'What'
  |||||||   0x0000827f      4c0295         jmp 0x9502                  ; jump to new location
jumptable
  |||||||   0x00008282      f985
                            f385
                            c385
                            2486
  |||||||   0x0000828a      13 16 a0 ff 
  |||||||   0x0000828e      ba ba bb bb c0 c0 af af 0d 90 83 d7 83 fd 82 45 83 fd 82
jumptable  (a-z)
  |||||||   0x000082a1      4386
                            b286
                            3388
                            0095
                            4488
                            9789
                            088b
                            3f8b
                            018d
                            3d8d
                            f08d
                            848e
                            b78e
                            cd8e
                            e68e
                            438f
                            688f
                            2290
                            3490
                            4c90
                            7590
                            8790
                            0095
                            c290
                            8892
                            d792
  |||||||   0x000082d5      00             brk                         ; force break
  |||||||   0x000082d6      00             brk                         ; key code ?
  |||||||   0x000082d7      00             brk                         ; force break
  |||||||   0x000082d8      00             brk                         ; force break
  |||||||   0x000082d9      ff0101         isb 0x0101,x
  |||||||   0x000082dc      ff0000         isb 0x0000,x
  |||||||   0x000082df      00             brk                         ; force break
  |||||||   0x000082e0      00             brk                         ; force break
  |||||||   0x000082e1      0102           ora (0x02,x)                ; "or" memory with accumulator
  |||||||   0x000082e3      00             brk                         ; force break
  |||||||   0x000082e4      a50c           lda 0x0c                    ; load accumulator with memory
  |||||||   0x000082e6      c91c           cmp #0x1c                   ; compare memory and accumulator
  ========< 0x000082e8      f00e           beq 0x514108                ; branch on result zero
  |||||||   0x000082ea      4a             lsr a                       ; shift right one bit (memory or accumulator)
  |||||||   0x000082eb      c909           cmp #0x09                   ; compare memory and accumulator
  ========< 0x000082ed      f009           beq 0x514108                ; branch on result zero
  |||||||   0x000082ef      60             rts                         ; return from subroutine
  |||||||   0x000082f0      a50c           lda 0x0c                    ; load accumulator with memory
  |||||||   0x000082f2      4a             lsr a                       ; shift right one bit (memory or accumulator)
  |||||||   0x000082f3      c909           cmp #0x09                   ; compare memory and accumulator
  ========< 0x000082f5      f001           beq 0x514108                ; branch on result zero
  |||||||   0x000082f7      60             rts                         ; return from subroutine
  --------> 0x000082f8      a907           lda #0x07                   ; load accumulator with memory
  ========< 0x000082fa      4c4b4c         jmp 0x4c4b                  ; jump to new location
  |||||||   0x000082fd      c6a8           dec 0xa8                    ; decrement memory by one
  |||||||   0x000082ff      cee082         dec 0x82e0                  ; decrement memory by one
  |||||||   0x00008302      20f784         jsr 0x84f7                  ; jump to new location saving return address
  |||||||   0x00008305      2c0781         bit 0x8107                  ; test bits in memory with accumulator
  ========< 0x00008308      300a           bmi 0x514108                ; branch on result minus
  |||||||   0x0000830a      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x0000830d      ceeff2         dec 0xf2ef                  ; decrement memory by one
  |||||||   0x00008310      f4e8           nop 0xe8,x                  ; no operation
  |||||||   0x00008312      8d00ad         sta 0xad00                  ; store accumulator in memory
  |||||||   0x00008315      3148           and (0x48),y                ; "and" memory with accumulator
  |||||||   0x00008317      201e84         jsr 0x841e                  ; jump to new location saving return address
  --------> 0x0000831a      c62e           dec 0x2e                    ; decrement memory by one
  |||||||   0x0000831c      c603           dec 0x03                    ; decrement memory by one
  |||||||   0x0000831e      a503           lda 0x03                    ; load accumulator with memory
  |||||||   0x00008320      c905           cmp #0x05                   ; compare memory and accumulator
  ========< 0x00008322      b015           bcs 0x514108                ; branch on carry set
  |||||||   0x00008324      0910           ora #0x10                   ; "or" memory with accumulator
  |||||||   0x00008326      8503           sta 0x03                    ; store accumulator in memory
  |||||||   0x00008328      208298         jsr 0x9882                  ; jump to new location saving return address
  |||||||   0x0000832b      c605           dec 0x05                    ; decrement memory by one
  |||||||   0x0000832d      a505           lda 0x05                    ; load accumulator with memory
  |||||||   0x0000832f      290f           and #0x0f                   ; "and" memory with accumulator
  |||||||   0x00008331      8505           sta 0x05                    ; store accumulator in memory
  |||||||   0x00008333      20e198         jsr 0x98e1                  ; jump to new location saving return address
  |||||||   0x00008336      20334c         jsr 0x4c33                  ; jump to new location saving return address
  --------> 0x00008339      20f082         jsr 0x82f0                  ; jump to new location saving return address
  |||||||   0x0000833c      202ba3         jsr 0xa32b                  ; jump to new location saving return address
  --------> 0x0000833f      38             sec                         ; set carry flag
  |||||||   0x00008340      6633           ror 0x33                    ; rotate one bit right (memory or accumulator)
  ========< 0x00008342      4c0295         jmp 0x9502                  ; jump to new location
  |||||||   0x00008345      e6a8           inc 0xa8                    ; increment memory by one
  |||||||   0x00008347      eee082         inc 0x82e0                  ; increment memory by one
  |||||||   0x0000834a      20f784         jsr 0x84f7                  ; jump to new location saving return address
  |||||||   0x0000834d      2c0781         bit 0x8107                  ; test bits in memory with accumulator
  ========< 0x00008350      300a           bmi 0x514108                ; branch on result minus
  |||||||   0x00008352      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008355      d3ef           dcp (0xef),y
  |||||||   0x00008357      f5f4           sbc 0xf4,x                  ; subtract memory from accumulator with borrow
  |||||||   0x00008359      e8             inx                         ; increment index x by one
  |||||||   0x0000835a      8d00ad         sta 0xad00                  ; store accumulator in memory
  |||||||   0x0000835d      4748           sre 0x48
  |||||||   0x0000835f      201e84         jsr 0x841e                  ; jump to new location saving return address
  --------> 0x00008362      206b83         jsr 0x836b                  ; jump to new location saving return address
  |||||||   0x00008365      38             sec                         ; set carry flag
  |||||||   0x00008366      6633           ror 0x33                    ; rotate one bit right (memory or accumulator)
  ========< 0x00008368      4c0295         jmp 0x9502                  ; jump to new location
  |||||||   0x0000836b      e62e           inc 0x2e                    ; increment memory by one
  |||||||   0x0000836d      e603           inc 0x03                    ; increment memory by one
  |||||||   0x0000836f      a503           lda 0x03                    ; load accumulator with memory
  |||||||   0x00008371      c91b           cmp #0x1b                   ; compare memory and accumulator
  ========< 0x00008373      9015           bcc 0x514108                ; branch on carry clear
  |||||||   0x00008375      290f           and #0x0f                   ; "and" memory with accumulator
  |||||||   0x00008377      8503           sta 0x03                    ; store accumulator in memory
  |||||||   0x00008379      207098         jsr 0x9870                  ; jump to new location saving return address
  |||||||   0x0000837c      e605           inc 0x05                    ; increment memory by one
  |||||||   0x0000837e      a505           lda 0x05                    ; load accumulator with memory
  |||||||   0x00008380      290f           and #0x0f                   ; "and" memory with accumulator
  |||||||   0x00008382      8505           sta 0x05                    ; store accumulator in memory
  |||||||   0x00008384      20f698         jsr 0x98f6                  ; jump to new location saving return address
  |||||||   0x00008387      20334c         jsr 0x4c33                  ; jump to new location saving return address
  --------> 0x0000838a      20f082         jsr 0x82f0                  ; jump to new location saving return address
  ========< 0x0000838d      4c2ba3         jmp 0xa32b                  ; jump to new location
  |||||||   0x00008390      c6a7           dec 0xa7                    ; decrement memory by one
  |||||||   0x00008392      cedf82         dec 0x82df                  ; decrement memory by one
  |||||||   0x00008395      20f784         jsr 0x84f7                  ; jump to new location saving return address
  |||||||   0x00008398      2c0781         bit 0x8107                  ; test bits in memory with accumulator
  ========< 0x0000839b      3009           bmi 0x514108                ; branch on result minus
  |||||||   0x0000839d      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000083a0      d7e5           dcp 0xe5,x
  |||||||   0x000083a2      f3f4           isb (0xf4),y
  |||||||   0x000083a4      8d00ad         sta 0xad00                  ; store accumulator in memory
  |||||||   0x000083a7      3b4820         rla 0x2048,y
  |||||||   0x000083aa      1e84c6         asl 0xc684,x                ; shift left one bit (memory or accumulator)
  |||||||   0x000083ad      2dc602         and 0x02c6                  ; "and" memory with accumulator
  |||||||   0x000083b0      a502           lda 0x02                    ; load accumulator with memory
  |||||||   0x000083b2      c905           cmp #0x05                   ; compare memory and accumulator
  ========< 0x000083b4      b015           bcs 0x514108                ; branch on carry set
  |||||||   0x000083b6      0910           ora #0x10                   ; "or" memory with accumulator
  |||||||   0x000083b8      8502           sta 0x02                    ; store accumulator in memory
  |||||||   0x000083ba      205e98         jsr 0x985e                  ; jump to new location saving return address
  |||||||   0x000083bd      c604           dec 0x04                    ; decrement memory by one
  |||||||   0x000083bf      a504           lda 0x04                    ; load accumulator with memory
  |||||||   0x000083c1      290f           and #0x0f                   ; "and" memory with accumulator
  |||||||   0x000083c3      8504           sta 0x04                    ; store accumulator in memory
  |||||||   0x000083c5      20cc98         jsr 0x98cc                  ; jump to new location saving return address
  |||||||   0x000083c8      20334c         jsr 0x4c33                  ; jump to new location saving return address
  --------> 0x000083cb      20f082         jsr 0x82f0                  ; jump to new location saving return address
  |||||||   0x000083ce      202ba3         jsr 0xa32b                  ; jump to new location saving return address
  |||||||   0x000083d1      38             sec                         ; set carry flag
  |||||||   0x000083d2      6633           ror 0x33                    ; rotate one bit right (memory or accumulator)
  ========< 0x000083d4      4c0295         jmp 0x9502                  ; jump to new location
  |||||||   0x000083d7      e6a7           inc 0xa7                    ; increment memory by one
  |||||||   0x000083d9      eedf82         inc 0x82df                  ; increment memory by one
  |||||||   0x000083dc      20f784         jsr 0x84f7                  ; jump to new location saving return address
  |||||||   0x000083df      2c0781         bit 0x8107                  ; test bits in memory with accumulator
  ========< 0x000083e2      3009           bmi 0x514108                ; branch on result minus
  |||||||   0x000083e4      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000083e7      c5e1           cmp 0xe1                    ; compare memory and accumulator
  |||||||   0x000083e9      f3f4           isb (0xf4),y
  |||||||   0x000083eb      8d00ad         sta 0xad00                  ; store accumulator in memory
  |||||||   0x000083ee      3d4820         and 0x2048,x                ; "and" memory with accumulator
  |||||||   0x000083f1      1e84e6         asl 0xe684,x                ; shift left one bit (memory or accumulator)
  |||||||   0x000083f4      2de602         and 0x02e6                  ; "and" memory with accumulator
  |||||||   0x000083f7      a502           lda 0x02                    ; load accumulator with memory
  |||||||   0x000083f9      c91b           cmp #0x1b                   ; compare memory and accumulator
  ========< 0x000083fb      9015           bcc 0x514108                ; branch on carry clear
  |||||||   0x000083fd      290f           and #0x0f                   ; "and" memory with accumulator
  |||||||   0x000083ff      8502           sta 0x02                    ; store accumulator in memory
  |||||||   0x00008401      204c98         jsr 0x984c                  ; jump to new location saving return address
  |||||||   0x00008404      e604           inc 0x04                    ; increment memory by one
  |||||||   0x00008406      a504           lda 0x04                    ; load accumulator with memory
  |||||||   0x00008408      290f           and #0x0f                   ; "and" memory with accumulator
  |||||||   0x0000840a      8504           sta 0x04                    ; store accumulator in memory
  |||||||   0x0000840c      20b798         jsr 0x98b7                  ; jump to new location saving return address
  |||||||   0x0000840f      20334c         jsr 0x4c33                  ; jump to new location saving return address
  --------> 0x00008412      20f082         jsr 0x82f0                  ; jump to new location saving return address
  |||||||   0x00008415      202ba3         jsr 0xa32b                  ; jump to new location saving return address
  |||||||   0x00008418      38             sec                         ; set carry flag
  |||||||   0x00008419      6633           ror 0x33                    ; rotate one bit right (memory or accumulator)
  ========< 0x0000841b      4c0295         jmp 0x9502                  ; jump to new location
  |||||||   0x0000841e      85fa           sta 0xfa                    ; store accumulator in memory
  |||||||   0x00008420      20394c         jsr 0x4c39                  ; jump to new location saving return address
  |||||||   0x00008423      a900           lda #0x00                   ; load accumulator with memory
  ========< 0x00008425      1005           bpl 0x514108                ; branch on result plus
  |||||||   0x00008427      68             pla                         ; pull accumulator from stack
  |||||||   0x00008428      68             pla                         ; pull accumulator from stack
  ========< 0x00008429      4c0295         jmp 0x9502                  ; jump to new location
  --------> 0x0000842c      a50c           lda 0x0c                    ; load accumulator with memory
  |||||||   0x0000842e      29fc           and #0xfc                   ; "and" memory with accumulator
  |||||||   0x00008430      c924           cmp #0x24                   ; compare memory and accumulator
  ========< 0x00008432      d00c           bne 0x514108                ; branch on result not zero
  |||||||   0x00008434      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008437      d2             hlt
  |||||||   0x00008438      eff7e9         isb 0xe9f7
  |||||||   0x0000843b      eee7a1         inc 0xa1e7                  ; increment memory by one
  |||||||   0x0000843e      8d00a5         sta 0xa500                  ; store accumulator in memory
  |||||||   0x00008441      fa             nop                         ; no operation
  |||||||   0x00008442      20b397         jsr 0x97b3                  ; jump to new location saving return address
  ========< 0x00008445      300a           bmi 0x514108                ; branch on result minus
  |||||||   0x00008447      a5fa           lda 0xfa                    ; load accumulator with memory
  ========< 0x00008449      f005           beq 0x514108                ; branch on result zero
  |||||||   0x0000844b      206a96         jsr 0x966a                  ; jump to new location saving return address
  ========< 0x0000844e      3001           bmi 0x514108                ; branch on result minus
  --------> 0x00008450      60             rts                         ; return from subroutine
  --------> 0x00008451      68             pla                         ; pull accumulator from stack
  |||||||   0x00008452      68             pla                         ; pull accumulator from stack
  |||||||   0x00008453      20424c         jsr 0x4c42                  ; jump to new location saving return address
  |||||||   0x00008456      c9ec           cmp #0xec                   ; compare memory and accumulator
  ========< 0x00008458      d011           bne 0x514108                ; branch on result not zero
  |||||||   0x0000845a      a50c           lda 0x0c                    ; load accumulator with memory
  |||||||   0x0000845c      29fe           and #0xfe                   ; "and" memory with accumulator
  |||||||   0x0000845e      c914           cmp #0x14                   ; compare memory and accumulator
  ========< 0x00008460      f006           beq 0x514108                ; branch on result zero
  |||||||   0x00008462      29f0           and #0xf0                   ; "and" memory with accumulator
  |||||||   0x00008464      c920           cmp #0x20                   ; compare memory and accumulator
  ========< 0x00008466      d003           bne 0x514108                ; branch on result not zero
  --------> 0x00008468      4c909c         jmp 0x9c90                  ; jump to new location
  --------> 0x0000846b      2c0781         bit 0x8107                  ; test bits in memory with accumulator
  ========< 0x0000846e      104d           bpl 0x514108                ; branch on result plus
  |||||||   0x00008470      a5fa           lda 0xfa                    ; load accumulator with memory
  |||||||   0x00008472      c903           cmp #0x03                   ; compare memory and accumulator
  ========< 0x00008474      d020           bne 0x514108                ; branch on result not zero
  |||||||   0x00008476      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008479      c2d2           nop #0xd2                   ; no operation
  |||||||   0x0000847b      c5c1           cmp 0xc1                    ; compare memory and accumulator
  |||||||   0x0000847d      cbc9           sbx 0xc9
  |||||||   0x0000847f      cec7a0         dec 0xa0c7                  ; decrement memory by one
  |||||||   0x00008482      d5d0           cmp 0xd0,x                  ; compare memory and accumulator
  |||||||   0x00008484      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x00008486      00             brk                         ; force break
  --------> 0x00008487      a240           ldx #0x40                   ; load index x with memory
  |||||||   0x00008489      a040           ldy #0x40                   ; load index y with memory
  |||||||   0x0000848b      a903           lda #0x03                   ; load accumulator with memory
  |||||||   0x0000848d      204b4c         jsr 0x4c4b                  ; jump to new location saving return address
  |||||||   0x00008490      20b59f         jsr 0x9fb5                  ; jump to new location saving return address
  ========< 0x00008493      4ce984         jmp 0x84e9                  ; jump to new location
  --------> 0x00008496      c947           cmp #0x47                   ; compare memory and accumulator
  ========< 0x00008498      d011           bne 0x514108                ; branch on result not zero
  |||||||   0x0000849a      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x0000849d      c4ef           cpy 0xef                    ; compare memory and index y
  |||||||   0x0000849f      e3eb           isb (0xeb,x)
  |||||||   0x000084a1      e5e4           sbc 0xe4                    ; subtract memory from accumulator with borrow
  |||||||   0x000084a3      a100           lda (0x00,x)                ; load accumulator with memory
  |||||||   0x000084a5      4ed582         lsr 0x82d5                  ; shift right one bit (memory or accumulator)
  ========< 0x000084a8      4cca92         jmp 0x92ca                  ; jump to new location
  --------> 0x000084ab      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000084ae      c3cf           dcp (0xcf,x)
  |||||||   0x000084b0      ccccc9         cpy 0xc9cc                  ; compare memory and index y
  |||||||   0x000084b3      d3c9           dcp (0xc9),y
  |||||||   0x000084b5      cfcea1         dcp 0xa1ce
  |||||||   0x000084b8      8d004c         sta 0x4c00                  ; store accumulator in memory
  |||||||   0x000084bb      8784           sax 0x84
  --------> 0x000084bd      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000084c0      c2ec           nop #0xec                   ; no operation
  |||||||   0x000084c2      efe3eb         isb 0xebe3
  |||||||   0x000084c5      e5e4           sbc 0xe4                    ; subtract memory from accumulator with borrow
  |||||||   0x000084c7      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x000084c9      00             brk                         ; force break
  |||||||   0x000084ca      20394c         jsr 0x4c39                  ; jump to new location saving return address
  |||||||   0x000084cd      201e4c         jsr 0x4c1e                  ; jump to new location saving return address
  |||||||   0x000084d0      c92f           cmp #0x2f                   ; compare memory and accumulator
  ========< 0x000084d2      d010           bne 0x514108                ; branch on result not zero
  |||||||   0x000084d4      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000084d7      cfd5c3         dcp 0xc3d5
  |||||||   0x000084da      c8             iny                         ; increment index y by one
  |||||||   0x000084db      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x000084dd      00             brk                         ; force break
  |||||||   0x000084de      20874c         jsr 0x4c87                  ; jump to new location saving return address
  ========< 0x000084e1      4ce984         jmp 0x84e9                  ; jump to new location
  --------> 0x000084e4      a908           lda #0x08                   ; load accumulator with memory
  |||||||   0x000084e6      204b4c         jsr 0x4c4b                  ; jump to new location saving return address
  --------> 0x000084e9      a900           lda #0x00                   ; load accumulator with memory
  |||||||   0x000084eb      8d0781         sta 0x8107                  ; store accumulator in memory
  |||||||   0x000084ee      8dd582         sta 0x82d5                  ; store accumulator in memory
  |||||||   0x000084f1      202a4c         jsr 0x4c2a                  ; jump to new location saving return address
  ========< 0x000084f4      4c7a80         jmp 0x807a                  ; jump to new location
  |||||||   0x000084f7      a50c           lda 0x0c                    ; load accumulator with memory
  |||||||   0x000084f9      29fc           and #0xfc                   ; "and" memory with accumulator
  |||||||   0x000084fb      c910           cmp #0x10                   ; compare memory and accumulator
  ========< 0x000084fd      f011           beq 0x514108                ; branch on result zero
  |||||||   0x000084ff      c914           cmp #0x14                   ; compare memory and accumulator
  ========< 0x00008501      f019           beq 0x514108                ; branch on result zero
  |||||||   0x00008503      c920           cmp #0x20                   ; compare memory and accumulator
  ========< 0x00008505      f039           beq 0x514108                ; branch on result zero
  |||||||   0x00008507      c924           cmp #0x24                   ; compare memory and accumulator
  ========< 0x00008509      f035           beq 0x514108                ; branch on result zero
  |||||||   0x0000850b      c928           cmp #0x28                   ; compare memory and accumulator
  ========< 0x0000850d      f026           beq 0x514108                ; branch on result zero
  |||||||   0x0000850f      60             rts                         ; return from subroutine
  --------> 0x00008510      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008513      d2             hlt
  |||||||   0x00008514      e9e4           sbc #0xe4                   ; subtract memory from accumulator with borrow
  |||||||   0x00008516      e5a0           sbc 0xa0                    ; subtract memory from accumulator with borrow
  |||||||   0x00008518      00             brk                         ; force break
  ========< 0x00008519      4c2485         jmp 0x8524                  ; jump to new location
  --------> 0x0000851c      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x0000851f      c6ec           dec 0xec                    ; decrement memory by one
  |||||||   0x00008521      f9a000         sbc 0x00a0,y                ; subtract memory from accumulator with borrow
  --------> 0x00008524      a5a8           lda 0xa8                    ; load accumulator with memory
  ========< 0x00008526      d00c           bne 0x514108                ; branch on result not zero
  |||||||   0x00008528      a50c           lda 0x0c                    ; load accumulator with memory
  |||||||   0x0000852a      29fe           and #0xfe                   ; "and" memory with accumulator
  |||||||   0x0000852c      a6a7           ldx 0xa7                    ; load index x with memory
  ========< 0x0000852e      1002           bpl 0x514108                ; branch on result plus
  |||||||   0x00008530      0901           ora #0x01                   ; "or" memory with accumulator
  --------> 0x00008532      850c           sta 0x0c                    ; store accumulator in memory
  --------> 0x00008534      60             rts                         ; return from subroutine
  --------> 0x00008535      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008538      d2             hlt
  |||||||   0x00008539      eff7a0         isb 0xa0f7
  |||||||   0x0000853c      00             brk                         ; force break
  ========< 0x0000853d      4cac85         jmp 0x85ac                  ; jump to new location
  --------> 0x00008540      a50c           lda 0x0c                    ; load accumulator with memory
  |||||||   0x00008542      48             pha                         ; push accumulator on stack
  |||||||   0x00008543      20ac85         jsr 0x85ac                  ; jump to new location saving return address
  |||||||   0x00008546      68             pla                         ; pull accumulator from stack
  |||||||   0x00008547      c50c           cmp 0x0c                    ; compare memory and accumulator
  ========< 0x00008549      f042           beq 0x514108                ; branch on result zero
  --------> 0x0000854b      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x0000854e      c8             iny                         ; increment index y by one
  |||||||   0x0000854f      e5e1           sbc 0xe1                    ; subtract memory from accumulator with borrow
  |||||||   0x00008551      e4a0           cpx 0xa0                    ; compare memory and index x
  |||||||   0x00008553      00             brk                         ; force break
  |||||||   0x00008554      a50c           lda 0x0c                    ; load accumulator with memory
  |||||||   0x00008556      2903           and #0x03                   ; "and" memory with accumulator
  |||||||   0x00008558      8d5e85         sta 0x855e                  ; store accumulator in memory
  |||||||   0x0000855b      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x0000855c      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x0000855d      6900           adc #0x00                   ; add memory to accumulator with carry
  |||||||   0x0000855f      a8             tay                         ; transfer accumulator to index y
  |||||||   0x00008560      a205           ldx #0x05                   ; load index x with memory
  --------> 0x00008562      b99885         lda 0x8598,y                ; load accumulator with memory
  |||||||   0x00008565      20034c         jsr 0x4c03                  ; jump to new location saving return address
  |||||||   0x00008568      c8             iny                         ; increment index y by one
  |||||||   0x00008569      ca             dex                         ; decrement index x by one
  ========< 0x0000856a      d0f6           bne 0x514108                ; branch on result not zero
  |||||||   0x0000856c      20064c         jsr 0x4c06                  ; jump to new location saving return address
  |||||||   0x0000856f      8ed582         stx 0x82d5                  ; store index x in memory
  |||||||   0x00008572      adc04a         lda 0x4ac0                  ; load accumulator with memory
  |||||||   0x00008575      c950           cmp #0x50                   ; compare memory and accumulator
  ========< 0x00008577      b00f           bcs 0x514108                ; branch on carry set
  |||||||   0x00008579      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x0000857c      c8             iny                         ; increment index y by one
  |||||||   0x0000857d      f5ec           sbc 0xec,x                  ; subtract memory from accumulator with borrow
  |||||||   0x0000857f      eca0f7         cpx 0xf7a0                  ; compare memory and index x
  |||||||   0x00008582      e5e1           sbc 0xe1                    ; subtract memory from accumulator with borrow
  |||||||   0x00008584      eba1           sbc #0xa1                   ; subtract memory from accumulator with borrow
  |||||||   0x00008586      8d0068         sta 0x6800                  ; store accumulator in memory
  |||||||   0x00008589      68             pla                         ; pull accumulator from stack
  ========< 0x0000858a      4c0295         jmp 0x9502                  ; jump to new location
  --------> 0x0000858d      aed682         ldx 0x82d6                  ; load index x with memory
  ========< 0x00008590      1005           bpl 0x514108                ; branch on result plus
  |||||||   0x00008592      2c0781         bit 0x8107                  ; test bits in memory with accumulator
  ========< 0x00008595      30b4           bmi 0x514108                ; branch on result minus
  --------> 0x00008597      60             rts                         ; return from subroutine
  |||||||   0x00008598      ceeff2         dec 0xf2ef                  ; decrement memory by one
  |||||||   0x0000859b      f4e8           nop 0xe8,x                  ; no operation
  |||||||   0x0000859d      c5e1           cmp 0xe1                    ; compare memory and accumulator
  |||||||   0x0000859f      f3f4           isb (0xf4),y
  |||||||   0x000085a1      a0d3           ldy #0xd3                   ; load index y with memory
  |||||||   0x000085a3      eff5f4         isb 0xf4f5
  |||||||   0x000085a6      e8             inx                         ; increment index x by one
  |||||||   0x000085a7      d7e5           dcp 0xe5,x
  |||||||   0x000085a9      f3f4           isb (0xf4),y
  |||||||   0x000085ab      a0a5           ldy #0xa5                   ; load index y with memory
  |||||||   0x000085ad      0c29fc         nop 0xfc29                  ; no operation
  |||||||   0x000085b0      a6a8           ldx 0xa8                    ; load index x with memory
  ========< 0x000085b2      300c           bmi 0x514108                ; branch on result minus
  ========< 0x000085b4      f004           beq 0x514108                ; branch on result zero
  --------> 0x000085b6      0902           ora #0x02                   ; "or" memory with accumulator
  ========< 0x000085b8      d006           bne 0x514108                ; branch on result not zero
  --------> 0x000085ba      0901           ora #0x01                   ; "or" memory with accumulator
  |||||||   0x000085bc      a6a7           ldx 0xa7                    ; load index x with memory
  ========< 0x000085be      30f6           bmi 0x514108                ; branch on result minus
  --------> 0x000085c0      850c           sta 0x0c                    ; store accumulator in memory
  |||||||   0x000085c2      60             rts                         ; return from subroutine
  |||||||   0x000085c3      2c0781         bit 0x8107                  ; test bits in memory with accumulator
  ========< 0x000085c6      101b           bpl 0x514108                ; branch on result plus
  |||||||   0x000085c8      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000085cb      d3e8           
  |||||||   0x000085cd      e5e5           
  |||||||   0x000085cf      f4f3           
  |||||||   0x000085d1      a0e9           
  |||||||   0x000085d3      ee8de9         
  |||||||   0x000085d6      f2             
  |||||||   0x000085d7      efeef3         
  |||||||   0x000085da      a18d           
  |||||||   0x000085dc      00             
  |||||||   0x000085dd      4e0781         lsr 0x8107                  ; shift right one bit (memory or accumulator)
  |||||||   0x000085e0      4c0295         jmp 0x9502                  ; jump to new location
  --------> 0x000085e3      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000085e6      d0e1           
  |||||||   0x000085e8      f3f3           
  |||||||   0x000085ea      8d00
                            38             sec
  |||||||   0x000085ed      6e1393         ror 0x9313                  ; rotate one bit right (memory or accumulator)
  ========< 0x000085f0      4c0295         jmp 0x9502                  ; jump to new location
  
  |||||||   0x000085f3      20436c         jsr 0x6c43                  ; jump to new location saving return address
  ========< 0x000085f6      4c7a80         jmp 0x807a                  ; jump to new location
  |||||||   0x000085f9      a578           lda 0x78                    ; load accumulator with memory
  |||||||   0x000085fb      4980           eor #0x80                   ; "exclusive-or" memory with accumulator
  |||||||   0x000085fd      8578           sta 0x78                    ; store accumulator in memory
  |||||||   0x000085ff      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008602      d3ef           
  |||||||   0x00008604      f5ee           
  |||||||   0x00008606      e4f3           
  |||||||   0x00008608      a0cf           
  |||||||   0x0000860a      00             
  |||||||   0x0000860b      2478           bit 0x78                    ; test bits in memory with accumulator
  ========< 0x0000860d      300a           bmi 0x514108                ; branch on result minus
  |||||||   0x0000860f      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008612      e6e6           inc 0xe6                    ; increment memory by one
  |||||||   0x00008614      8d004c         sta 0x4c00                  ; store accumulator in memory
  |||||||   0x00008617      7a             nop                         ; no operation
  |||||||   0x00008618      80a9           nop #0xa9                   ; no operation
  |||||||   0x0000861a      ee2003         inc 0x0320                  ; increment memory by one
  |||||||   0x0000861d      4c2006         jmp 0x0620                  ; jump to new location
  |||||||   0x00008620      4c4c7a         jmp 0x7a4c                  ; jump to new location
  |||||||   0x00008623      80

print Commodre-1 info
  |||||||   0x00008624      a52a           lda 0x2a                    ; karma
  |||||||   0x00008626      200c4c         jsr 0x4c0c                  ; print number
  |||||||   0x00008629      a50a           lda 0x0a                    ; 
  |||||||   0x0000862b      200c4c         jsr 0x4c0c                  ; print number
  |||||||   0x0000862e      a509           lda 0x09                    ; 
  |||||||   0x00008630      200c4c         jsr 0x4c0c                  ; print number
  |||||||   0x00008633      a52d           lda 0x2d                    ; 
  |||||||   0x00008635      200c4c         jsr 0x4c0c                  ; print number
  |||||||   0x00008638      a52e           lda 0x2e                    ; 
  |||||||   0x0000863a      200c4c         jsr 0x4c0c                  ; print number
  |||||||   0x0000863d      20064c         jsr 0x4c06                  ; new line (?)
  ========< 0x00008640      4c0295         jmp 0x9502                  ; done check keys

  |||||||   0x00008643      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008646      c1f4           cmp (0xf4,x)                ; compare memory and accumulator
  |||||||   0x00008648      f4e1           nop 0xe1,x                  ; no operation
  |||||||   0x0000864a      e3eb           isb (0xeb,x)
  |||||||   0x0000864c      ad0020         lda 0x2000                  ; load accumulator with memory
  |||||||   0x0000864f      214c           and (0x4c,x)                ; "and" memory with accumulator
  |||||||   0x00008651      c904           cmp #0x04                   ; compare memory and accumulator
  ========< 0x00008653      b01e           bcs 0x514108                ; branch on carry set
  |||||||   0x00008655      a50c           lda 0x0c                    ; load accumulator with memory
  |||||||   0x00008657      29fe           and #0xfe                   ; "and" memory with accumulator
  |||||||   0x00008659      c914           cmp #0x14                   ; compare memory and accumulator
  ========< 0x0000865b      f006           beq 0x514108                ; branch on result zero
  |||||||   0x0000865d      29fc           and #0xfc                   ; "and" memory with accumulator
  |||||||   0x0000865f      c928           cmp #0x28                   ; compare memory and accumulator
  ========< 0x00008661      d010           bne 0x514108                ; branch on result not zero
  --------> 0x00008663      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008666      cfeea0         dcp 0xa0ee
  |||||||   0x00008669      e6ef           inc 0xef                    ; increment memory by one
  |||||||   0x0000866b      eff4a1         isb 0xa1f4
  |||||||   0x0000866e      8d004c         sta 0x4c00                  ; store accumulator in memory
  |||||||   0x00008671      7a             nop                         ; no operation
  |||||||   0x00008672      8020           nop #0x20                   ; no operation
  |||||||   0x00008674      3f4cf0         rla 0xf04c,x
  |||||||   0x00008677      3720           rla 0x20,x
  |||||||   0x00008679      394c20         and 0x204c,y                ; "and" memory with accumulator
  |||||||   0x0000867c      42             hlt
  |||||||   0x0000867d      4c29fc         jmp 0xfc29                  ; jump to new location
  |||||||   0x00008680      c92c           cmp #0x2c                   ; compare memory and accumulator
  ========< 0x00008682      f00c           beq 0x514108                ; branch on result zero
  |||||||   0x00008684      c9b4           cmp #0xb4                   ; compare memory and accumulator
  ========< 0x00008686      f010           beq 0x514108                ; branch on result zero
  |||||||   0x00008688      c9e8           cmp #0xe8                   ; compare memory and accumulator
  ========< 0x0000868a      f00c           beq 0x514108                ; branch on result zero
  |||||||   0x0000868c      c940           cmp #0x40                   ; compare memory and accumulator
  ========< 0x0000868e      9008           bcc 0x514108                ; branch on carry clear
  --------> 0x00008690      8688           stx 0x88                    ; store index x in memory
  |||||||   0x00008692      20f797         jsr 0x97f7                  ; jump to new location saving return address
  ========< 0x00008695      4c0fa7         jmp 0xa70f                  ; jump to new location
  --------> 0x00008698      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x0000869b      ceeff4         dec 0xf4ef                  ; decrement memory by one
  |||||||   0x0000869e      e8             inx                         ; increment index x by one
  |||||||   0x0000869f      e9ee           sbc #0xee                   ; subtract memory from accumulator with borrow
  |||||||   0x000086a1      e7a0           isb 0xa0
  |||||||   0x000086a3      f4ef           nop 0xef,x                  ; no operation
  |||||||   0x000086a5      8de1f4         sta 0xf4e1                  ; store accumulator in memory
  |||||||   0x000086a8      f4e1           nop 0xe1,x                  ; no operation
  |||||||   0x000086aa      e3eb           isb (0xeb,x)
  |||||||   0x000086ac      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x000086ae      00             brk                         ; force break
  --------> 0x000086af      4c0295         jmp 0x9502                  ; jump to new location
  |||||||   0x000086b2      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000086b5      c2ef           nop #0xef                   ; no operation
  |||||||   0x000086b7      e1f2           sbc (0xf2,x)                ; subtract memory from accumulator with borrow
  |||||||   0x000086b9      e4a0           cpx 0xa0                    ; compare memory and index x
  |||||||   0x000086bb      00             brk                         ; force break
  |||||||   0x000086bc      a52d           lda 0x2d                    ; load accumulator with memory
  |||||||   0x000086be      85a9           sta 0xa9                    ; store accumulator in memory
  |||||||   0x000086c0      a52e           lda 0x2e                    ; load accumulator with memory
  |||||||   0x000086c2      85aa           sta 0xaa                    ; store accumulator in memory
  |||||||   0x000086c4      200e88         jsr 0x880e                  ; jump to new location saving return address
  |||||||   0x000086c7      c92c           cmp #0x2c                   ; compare memory and accumulator
  ========< 0x000086c9      b01a           bcs 0x514108                ; branch on carry set
  |||||||   0x000086cb      c928           cmp #0x28                   ; compare memory and accumulator
  ========< 0x000086cd      b023           bcs 0x514108                ; branch on carry set
  |||||||   0x000086cf      c924           cmp #0x24                   ; compare memory and accumulator
  ========< 0x000086d1      b036           bcs 0x514108                ; branch on carry set
  |||||||   0x000086d3      c91b           cmp #0x1b                   ; compare memory and accumulator
  ========< 0x000086d5      d003           bne 0x514108                ; branch on result not zero
  ========< 0x000086d7      4c8887         jmp 0x8788                  ; jump to new location
  --------> 0x000086da      c912           cmp #0x12                   ; compare memory and accumulator
  ========< 0x000086dc      b007           bcs 0x514108                ; branch on carry set
  |||||||   0x000086de      c910           cmp #0x10                   ; compare memory and accumulator
  ========< 0x000086e0      9003           bcc 0x514108                ; branch on carry clear
  ========< 0x000086e2      4c9d87         jmp 0x879d                  ; jump to new location
  --------> 0x000086e5      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000086e8      d7e8           dcp 0xe8,x
  |||||||   0x000086ea      e1f4           sbc (0xf4,x)                ; subtract memory from accumulator with borrow
  |||||||   0x000086ec      bf8d00         lax 0x008d,y
  |||||||   0x000086ef      4c0295         jmp 0x9502                  ; jump to new location
  --------> 0x000086f2      20c587         jsr 0x87c5                  ; jump to new location saving return address
  |||||||   0x000086f5      850c           sta 0x0c                    ; store accumulator in memory
  |||||||   0x000086f7      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000086fa      d3eb           dcp (0xeb),y
  |||||||   0x000086fc      e9e6           sbc #0xe6                   ; subtract memory from accumulator with borrow
  |||||||   0x000086fe      e68d           inc 0x8d                    ; increment memory by one
  |||||||   0x00008700      00             brk                         ; force break
  |||||||   0x00008701      a903           lda #0x03                   ; load accumulator with memory
  |||||||   0x00008703      20466c         jsr 0x6c46                  ; jump to new location saving return address
  ========< 0x00008706      4caf87         jmp 0x87af                  ; jump to new location
  --------> 0x00008709      48             pha                         ; push accumulator on stack
  |||||||   0x0000870a      a50c           lda 0x0c                    ; load accumulator with memory
  |||||||   0x0000870c      29fe           and #0xfe                   ; "and" memory with accumulator
  |||||||   0x0000870e      c914           cmp #0x14                   ; compare memory and accumulator
  ========< 0x00008710      d00e           bne 0x514108                ; branch on result not zero
  |||||||   0x00008712      a91c           lda #0x1c                   ; load accumulator with memory
  |||||||   0x00008714      850c           sta 0x0c                    ; store accumulator in memory
  |||||||   0x00008716      ad8811         lda 0x1188                  ; load accumulator with memory
  |||||||   0x00008719      f8             sed                         ; set decimal mode
  |||||||   0x0000871a      6900           adc #0x00                   ; add memory to accumulator with carry
  |||||||   0x0000871c      d8             cld                         ; clear decimal mode
  |||||||   0x0000871d      8d8811         sta 0x1188                  ; store accumulator in memory
  --------> 0x00008720      68             pla                         ; pull accumulator from stack
  |||||||   0x00008721      20c587         jsr 0x87c5                  ; jump to new location saving return address
  |||||||   0x00008724      20f187         jsr 0x87f1                  ; jump to new location saving return address
  |||||||   0x00008727      850c           sta 0x0c                    ; store accumulator in memory
  |||||||   0x00008729      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x0000872c      d3e8           dcp (0xe8),y
  |||||||   0x0000872e      e9f0           sbc #0xf0                   ; subtract memory from accumulator with borrow
  |||||||   0x00008730      8d00a9         sta 0xa900                  ; store accumulator in memory
  |||||||   0x00008733      0320           slo (0x20,x)
  |||||||   0x00008735      466c           lsr 0x6c                    ; shift right one bit (memory or accumulator)
  |||||||   0x00008737      adc04a         lda 0x4ac0                  ; load accumulator with memory
  |||||||   0x0000873a      c910           cmp #0x10                   ; compare memory and accumulator
  ========< 0x0000873c      b021           bcs 0x514108                ; branch on carry set
  |||||||   0x0000873e      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008741      8dc4c1         sta 0xc1c4                  ; store accumulator in memory
  |||||||   0x00008744      cec7c5         dec 0xc5c7                  ; decrement memory by one
  |||||||   0x00008747      d2             hlt
  |||||||   0x00008748      ba             tsx                         ; transfer stack pointer to index x
  |||||||   0x00008749      a0d3           ldy #0xd3                   ; load index y with memory
  |||||||   0x0000874b      c8             iny                         ; increment index y by one
  |||||||   0x0000874c      c9d0           cmp #0xd0                   ; compare memory and accumulator
  |||||||   0x0000874e      8dc2c1         sta 0xc1c2                  ; store accumulator in memory
  |||||||   0x00008751      c4cc           cpy 0xcc                    ; compare memory and index y
  |||||||   0x00008753      d9a0c4         cmp 0xc4a0,y                ; compare memory and accumulator
  |||||||   0x00008756      c1cd           cmp (0xcd,x)                ; compare memory and accumulator
  |||||||   0x00008758      c1c7           cmp (0xc7,x)                ; compare memory and accumulator
  |||||||   0x0000875a      c5c4           cmp 0xc4                    ; compare memory and accumulator
  |||||||   0x0000875c      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x0000875e      00             brk                         ; force break
  --------> 0x0000875f      a517           lda 0x17                    ; load accumulator with memory
  ========< 0x00008761      d04c           bne 0x514108                ; branch on result not zero
  |||||||   0x00008763      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008766      8dd7c1         sta 0xc1d7                  ; store accumulator in memory
  |||||||   0x00008769      d2             hlt
  |||||||   0x0000876a      cec9ce         dec 0xcec9                  ; decrement memory by one
  |||||||   0x0000876d      c7ba           dcp 0xba
  |||||||   0x0000876f      a0ce           ldy #0xce                   ; load index y with memory
  |||||||   0x00008771      cf8dd3         dcp 0xd38d
  |||||||   0x00008774      cbc9           sbx 0xc9
  |||||||   0x00008776      c6c6           dec 0xc6                    ; decrement memory by one
  |||||||   0x00008778      d3a0           dcp (0xa0),y
  |||||||   0x0000877a      cfcea0         dcp 0xa0ce
  |||||||   0x0000877d      c2cf           nop #0xcf                   ; no operation
  |||||||   0x0000877f      c1d2           cmp (0xd2,x)                ; compare memory and accumulator
  |||||||   0x00008781      c4a1           cpy 0xa1                    ; compare memory and index y
  |||||||   0x00008783      8d004c         sta 0x4c00                  ; store accumulator in memory
  |||||||   0x00008786      af8720         lax 0x2087
  |||||||   0x00008789      c587           cmp 0x87                    ; compare memory and accumulator
  |||||||   0x0000878b      a915           lda #0x15                   ; load accumulator with memory
  |||||||   0x0000878d      850c           sta 0x0c                    ; store accumulator in memory
  |||||||   0x0000878f      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008792      c3e1           dcp (0xe1,x)
  |||||||   0x00008794      f2             hlt
  ========< 0x00008795      f0e5           beq 0x514108                ; branch on result zero
  |||||||   0x00008797      f48d           nop 0x8d,x                  ; no operation
  |||||||   0x00008799      00             brk                         ; force break
  |||||||   0x0000879a      4caf87         jmp 0x87af                  ; jump to new location
  --------> 0x0000879d      20c587         jsr 0x87c5                  ; jump to new location saving return address
  |||||||   0x000087a0      18             clc                         ; clear carry flag
  |||||||   0x000087a1      6902           adc #0x02                   ; add memory to accumulator with carry
  |||||||   0x000087a3      850c           sta 0x0c                    ; store accumulator in memory
  |||||||   0x000087a5      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000087a8      c8             iny                         ; increment index y by one
  |||||||   0x000087a9      eff2f3         isb 0xf3f2
  |||||||   0x000087ac      e58d           sbc 0x8d                    ; subtract memory from accumulator with borrow
  |||||||   0x000087ae      00             brk                         ; force break
  --------> 0x000087af      200e88         jsr 0x880e                  ; jump to new location saving return address
  |||||||   0x000087b2      a900           lda #0x00                   ; load accumulator with memory
  |||||||   0x000087b4      9d004a         sta 0x4a00,x                ; store accumulator in memory
  |||||||   0x000087b7      9d204a         sta 0x4a20,x                ; store accumulator in memory
  |||||||   0x000087ba      9d404a         sta 0x4a40,x                ; store accumulator in memory
  |||||||   0x000087bd      9d604a         sta 0x4a60,x                ; store accumulator in memory
  |||||||   0x000087c0      e680           inc 0x80                    ; increment memory by one
  ========< 0x000087c2      4c0295         jmp 0x9502                  ; jump to new location
  |||||||   0x000087c5      85bf           sta 0xbf                    ; store accumulator in memory
  |||||||   0x000087c7      a50c           lda 0x0c                    ; load accumulator with memory
  |||||||   0x000087c9      c91c           cmp #0x1c                   ; compare memory and accumulator
  ========< 0x000087cb      f021           beq 0x514108                ; branch on result zero
  |||||||   0x000087cd      c91d           cmp #0x1d                   ; compare memory and accumulator
  ========< 0x000087cf      f01d           beq 0x514108                ; branch on result zero
  |||||||   0x000087d1      c928           cmp #0x28                   ; compare memory and accumulator
  ========< 0x000087d3      9004           bcc 0x514108                ; branch on carry clear
  |||||||   0x000087d5      c92c           cmp #0x2c                   ; compare memory and accumulator
  ========< 0x000087d7      9015           bcc 0x514108                ; branch on carry clear
  --------> 0x000087d9      20064c         jsr 0x4c06                  ; jump to new location saving return address
  |||||||   0x000087dc      68             pla                         ; pull accumulator from stack
  |||||||   0x000087dd      68             pla                         ; pull accumulator from stack
  |||||||   0x000087de      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000087e1      cfeea0         dcp 0xa0ee
  |||||||   0x000087e4      e6ef           inc 0xef                    ; increment memory by one
  |||||||   0x000087e6      eff4a1         isb 0xa1f4
  |||||||   0x000087e9      8d004c         sta 0x4c00                  ; store accumulator in memory
  |||||||   0x000087ec      02             hlt
  |||||||   0x000087ed      95a5           sta 0xa5,x                  ; store accumulator in memory
  |||||||   0x000087ef      bf6085         lax 0x8560,y
  |||||||   0x000087f2      bf200e         lax 0x0e20,y
  |||||||   0x000087f5      88             dey                         ; decrement index y by one
  |||||||   0x000087f6      bdc04a         lda 0x4ac0,x                ; load accumulator with memory
  |||||||   0x000087f9      8dc04a         sta 0x4ac0                  ; store accumulator in memory
  |||||||   0x000087fc      bde04a         lda 0x4ae0,x                ; load accumulator with memory
  |||||||   0x000087ff      8517           sta 0x17                    ; store accumulator in memory
  |||||||   0x00008801      a50c           lda 0x0c                    ; load accumulator with memory
  |||||||   0x00008803      29fc           and #0xfc                   ; "and" memory with accumulator
  |||||||   0x00008805      c928           cmp #0x28                   ; compare memory and accumulator
  ========< 0x00008807      d002           bne 0x514108                ; branch on result not zero
  |||||||   0x00008809      e617           inc 0x17                    ; increment memory by one
  --------> 0x0000880b      a5bf           lda 0xbf                    ; load accumulator with memory
  |||||||   0x0000880d      60             rts                         ; return from subroutine
  |||||||   0x0000880e      a201           ldx #0x01                   ; load index x with memory
  --------> 0x00008810      a509           lda 0x09                    ; load accumulator with memory
  |||||||   0x00008812      dd804a         cmp 0x4a80,x                ; compare memory and accumulator
  ========< 0x00008815      d014           bne 0x514108                ; branch on result not zero
  |||||||   0x00008817      a5a9           lda 0xa9                    ; load accumulator with memory
  |||||||   0x00008819      dd404a         cmp 0x4a40,x                ; compare memory and accumulator
  ========< 0x0000881c      d00d           bne 0x514108                ; branch on result not zero
  |||||||   0x0000881e      a5aa           lda 0xaa                    ; load accumulator with memory
  |||||||   0x00008820      dd604a         cmp 0x4a60,x                ; compare memory and accumulator
  ========< 0x00008823      d006           bne 0x514108                ; branch on result not zero
  |||||||   0x00008825      bd004a         lda 0x4a00,x                ; load accumulator with memory
  ========< 0x00008828      f001           beq 0x514108                ; branch on result zero
  |||||||   0x0000882a      60             rts                         ; return from subroutine
  --------> 0x0000882b      e8             inx                         ; increment index x by one
  |||||||   0x0000882c      e020           cpx #0x20                   ; compare memory and index x
  ========< 0x0000882e      d0e0           bne 0x514108                ; branch on result not zero
  |||||||   0x00008830      a900           lda #0x00                   ; load accumulator with memory
  |||||||   0x00008832      60             rts                         ; return from subroutine
  |||||||   0x00008833      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008836      c3e1           dcp (0xe1,x)
  |||||||   0x00008838      f3f4           isb (0xf4),y
  |||||||   0x0000883a      aeaeae         ldx 0xaeae                  ; load index x with memory
  |||||||   0x0000883d      8d00a9         sta 0xa900                  ; store accumulator in memory
  |||||||   0x00008840      434c           sre (0x4c,x)
  |||||||   0x00008842      e8             inx                         ; increment index x by one
  |||||||   0x00008843      92             hlt
  |||||||   0x00008844      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008847      c5ee           cmp 0xee                    ; compare memory and accumulator
  |||||||   0x00008849      f4e5           nop 0xe5,x                  ; no operation
  |||||||   0x0000884b      f2             hlt
  |||||||   0x0000884c      a000           ldy #0x00                   ; load index y with memory
  |||||||   0x0000884e      20214c         jsr 0x4c21                  ; jump to new location saving return address
  |||||||   0x00008851      c919           cmp #0x19                   ; compare memory and accumulator
  ========< 0x00008853      f027           beq 0x514108                ; branch on result zero
  |||||||   0x00008855      c911           cmp #0x11                   ; compare memory and accumulator
  ========< 0x00008857      f003           beq 0x514108                ; branch on result zero
  ========< 0x00008859      4c1689         jmp 0x8916                  ; jump to new location
  --------> 0x0000885c      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x0000885f      f4e8           nop 0xe8,x                  ; no operation
  |||||||   0x00008861      e58d           sbc 0x8d                    ; subtract memory from accumulator with borrow
  |||||||   0x00008863      d3e8           dcp (0xe8),y
  |||||||   0x00008865      f2             hlt
  |||||||   0x00008866      e9ee           sbc #0xee                   ; subtract memory from accumulator with borrow
  |||||||   0x00008868      e5a0           sbc 0xa0                    ; subtract memory from accumulator with borrow
  |||||||   0x0000886a      efe6a0         isb 0xa0e6
  |||||||   0x0000886d      f4e8           nop 0xe8,x                  ; no operation
  |||||||   0x0000886f      e58d           sbc 0x8d                    ; subtract memory from accumulator with borrow
  |||||||   0x00008871      c3ef           dcp (0xef,x)
  |||||||   0x00008873      e4e5           cpx 0xe5                    ; compare memory and index x
  |||||||   0x00008875      f8             sed                         ; set decimal mode
  |||||||   0x00008876      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x00008878      00             brk                         ; force break
  ========< 0x00008879      4cb488         jmp 0x88b4                  ; jump to new location
  --------> 0x0000887c      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x0000887f      f4e8           nop 0xe8,x                  ; no operation
  |||||||   0x00008881      e58d           sbc 0x8d                    ; subtract memory from accumulator with borrow
  |||||||   0x00008883      d3e8           dcp (0xe8),y
  |||||||   0x00008885      f2             hlt
  |||||||   0x00008886      e9ee           sbc #0xee                   ; subtract memory from accumulator with borrow
  |||||||   0x00008888      e5a0           sbc 0xa0                    ; subtract memory from accumulator with borrow
  |||||||   0x0000888a      efe68d         isb 0x8de6
  |||||||   0x0000888d      00             brk                         ; force break
  |||||||   0x0000888e      a207           ldx #0x07                   ; load index x with memory
  --------> 0x00008890      ca             dex                         ; decrement index x by one
  ========< 0x00008891      301e           bmi 0x514108                ; branch on result minus
  |||||||   0x00008893      a52d           lda 0x2d                    ; load accumulator with memory
  |||||||   0x00008895      ddd488         cmp 0x88d4,x                ; compare memory and accumulator
  ========< 0x00008898      d0f6           bne 0x514108                ; branch on result not zero
  |||||||   0x0000889a      a52e           lda 0x2e                    ; load accumulator with memory
  |||||||   0x0000889c      dddb88         cmp 0x88db,x                ; compare memory and accumulator
  ========< 0x0000889f      d0ef           bne 0x514108                ; branch on result not zero
  |||||||   0x000088a1      bccd88         ldy 0x88cd,x                ; load index y with memory
  --------> 0x000088a4      b9e288         lda 0x88e2,y                ; load accumulator with memory
  |||||||   0x000088a7      48             pha                         ; push accumulator on stack
  |||||||   0x000088a8      0980           ora #0x80                   ; "or" memory with accumulator
  |||||||   0x000088aa      20034c         jsr 0x4c03                  ; jump to new location saving return address
  |||||||   0x000088ad      c8             iny                         ; increment index y by one
  |||||||   0x000088ae      68             pla                         ; pull accumulator from stack
  ========< 0x000088af      30f3           bmi 0x514108                ; branch on result minus
  --------> 0x000088b1      20064c         jsr 0x4c06                  ; jump to new location saving return address
  --------> 0x000088b4      20ba88         jsr 0x88ba                  ; jump to new location saving return address
  ========< 0x000088b7      4c0295         jmp 0x9502                  ; jump to new location
  |||||||   0x000088ba      467a           lsr 0x7a                    ; shift right one bit (memory or accumulator)
  --------> 0x000088bc      a200           ldx #0x00                   ; load index x with memory
  |||||||   0x000088be      20246c         jsr 0x6c24                  ; jump to new location saving return address
  |||||||   0x000088c1      5348           sre (0x48),y                ; SHRINE
  |||||||   0x000088c3      52             hlt
  |||||||   0x000088c4      494e           eor #0x4e                   
  |||||||   0x000088c6      4500           eor 0x00                    
  ========< 0x000088c8      b0f2           bcs 0x514108                ; branch on carry set
  ========< 0x000088ca      4c00a7         jmp 0xa700                  ; jump to new location
  |||||||   0x000088cd      00             brk                         ; force break
  |||||||   0x000088ce      0711           slo 0x11
  |||||||   0x000088d0      171e           slo 0x1e,x
  |||||||   0x000088d2      272c           rla 0x2c
  |||||||   0x000088d4      e980           sbc #0x80                   ; subtract memory from accumulator with borrow
  |||||||   0x000088d6      2449           bit 0x49                    ; test bits in memory with accumulator
  |||||||   0x000088d8      cd51e7         cmp 0xe751                  ; compare memory and accumulator
  |||||||   0x000088db      42             hlt
  |||||||   0x000088dc      5ce50b         nop 0x0be5,x                ; no operation
  |||||||   0x000088df      2dcfd8         and 0xd8cf                  ; "and" memory with accumulator
  |||||||   0x000088e2      c8             iny                         ; increment index y by one
  |||||||   0x000088e3      efeee5         isb 0xe5ee
  |||||||   0x000088e6      f3f4           isb (0xf4),y
  |||||||   0x000088e8      79c3ef         adc 0xefc3,y                ; add memory to accumulator with carry
  |||||||   0x000088eb      edf0e1         sbc 0xe1f0                  ; subtract memory from accumulator with borrow
  |||||||   0x000088ee      f3f3           isb (0xf3),y
  |||||||   0x000088f0      e9ef           sbc #0xef                   ; subtract memory from accumulator with borrow
  |||||||   0x000088f2      6ed6e1         ror 0xe1d6                  ; rotate one bit right (memory or accumulator)
  |||||||   0x000088f5      eceff5         cpx 0xf5ef                  ; compare memory and index x
  |||||||   0x000088f8      72             hlt
  |||||||   0x000088f9      ca             dex                         ; decrement index x by one
  |||||||   0x000088fa      f5f3           sbc 0xf3,x                  ; subtract memory from accumulator with borrow
  |||||||   0x000088fc      f4e9           nop 0xe9,x                  ; no operation
  |||||||   0x000088fe      e365           isb (0x65,x)
  |||||||   0x00008900      d3e1           dcp (0xe1),y
  |||||||   0x00008902      e3f2           isb (0xf2,x)
  |||||||   0x00008904      e9e6           sbc #0xe6                   ; subtract memory from accumulator with borrow
  |||||||   0x00008906      e9e3           sbc #0xe3                   ; subtract memory from accumulator with borrow
  |||||||   0x00008908      65c8           adc 0xc8                    ; add memory to accumulator with carry
  |||||||   0x0000890a      efeeef         isb 0xefee
  |||||||   0x0000890d      72             hlt
  |||||||   0x0000890e      c8             iny                         ; increment index y by one
  |||||||   0x0000890f      f5ed           sbc 0xed,x                  ; subtract memory from accumulator with borrow
  |||||||   0x00008911      e9ec           sbc #0xec                   ; subtract memory from accumulator with borrow
  |||||||   0x00008913      e9f4           sbc #0xf4                   ; subtract memory from accumulator with borrow
  |||||||   0x00008915      79a227         adc 0x27a2,y                ; add memory to accumulator with carry
  --------> 0x00008918      bd4789         lda 0x8947,x                ; load accumulator with memory
  |||||||   0x0000891b      c52d           cmp 0x2d                    ; compare memory and accumulator
  ========< 0x0000891d      d007           bne 0x514108                ; branch on result not zero
  |||||||   0x0000891f      bd6f89         lda 0x896f,x                ; load accumulator with memory
  |||||||   0x00008922      c52e           cmp 0x2e                    ; compare memory and accumulator
  ========< 0x00008924      f010           beq 0x514108                ; branch on result zero
  --------> 0x00008926      ca             dex                         ; decrement index x by one
  ========< 0x00008927      10ef           bpl 0x514108                ; branch on result plus
  --------> 0x00008929      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x0000892c      d7e8           dcp 0xe8,x
  |||||||   0x0000892e      e1f4           sbc (0xf4,x)                ; subtract memory from accumulator with borrow
  |||||||   0x00008930      bf8d00         lax 0x008d,y
  |||||||   0x00008933      4c7a80         jmp 0x807a                  ; jump to new location
  --------> 0x00008936      e018           cpx #0x18                   ; compare memory and index x
  ========< 0x00008938      f008           beq 0x514108                ; branch on result zero
  |||||||   0x0000893a      e020           cpx #0x20                   ; compare memory and index x
  ========< 0x0000893c      b004           bcs 0x514108                ; branch on carry set
  |||||||   0x0000893e      a509           lda 0x09                    ; load accumulator with memory
  ========< 0x00008940      30e7           bmi 0x514108                ; branch on result minus
  --------> 0x00008942      a945           lda #0x45                   ; load accumulator with memory
  ========< 0x00008944      4ce892         jmp 0x92e8                  ; jump to new location
  |||||||   0x00008947      e8             inx                         ; increment index x by one
  |||||||   0x00008948      5124           eor (0x24),y                ; "exclusive-or" memory with accumulator
  |||||||   0x0000894a      3a             nop                         ; no operation
  |||||||   0x0000894b      9f6a16         sha 0x166a,y
  |||||||   0x0000894e      bb5898         lae 0x9858,y
  |||||||   0x00008951      68             pla                         ; pull accumulator from stack
  |||||||   0x00008952      d8             cld                         ; clear decimal mode
  |||||||   0x00008953      2db0c9         and 0xc9b0                  ; "and" memory with accumulator
  |||||||   0x00008956      9956c4         sta 0xc456,y                ; store accumulator in memory
  |||||||   0x00008959      5456           nop 0x56,x                  ; no operation
  |||||||   0x0000895b      58             cli                         ; clear interrupt disable bit
  |||||||   0x0000895c      62             hlt
  |||||||   0x0000895d      88             dey                         ; decrement index y by one
  |||||||   0x0000895e      88             dey                         ; decrement index y by one
  |||||||   0x0000895f      310f           and (0x0f),y                ; "and" memory with accumulator
  |||||||   0x00008961      40             rti                         ; return from interrupt
  |||||||   0x00008962      f8             sed                         ; set decimal mode
  |||||||   0x00008963      94da           sty 0xda,x                  ; store index y in memory
  |||||||   0x00008965      1c92f0         nop 0xf092,x                ; no operation
  |||||||   0x00008968      5b487e         sre 0x7e48,y
  |||||||   0x0000896b      9c3aef         shy 0xef3a,x
  |||||||   0x0000896e      8087           nop #0x87                   ; no operation
  |||||||   0x00008970      6a             ror a                       ; rotate one bit right (memory or accumulator)
  |||||||   0x00008971      de2b14         dec 0x142b,x                ; decrement memory by one
  |||||||   0x00008974      b8             clv                         ; clear overflow flag
  |||||||   0x00008975      80a9           nop #0xa9                   ; no operation
  |||||||   0x00008977      78             sei                         ; set interrupt disable status
  |||||||   0x00008978      18             clc                         ; clear carry flag
  |||||||   0x00008979      d8             cld                         ; clear decimal mode
  |||||||   0x0000897a      78             sei                         ; set interrupt disable status
  |||||||   0x0000897b      3ed03b         rol 0x3bd0,x                ; rotate one bit left (memory or accumulator)
  |||||||   0x0000897e      5b6bf5         sre 0xf56b,y
  |||||||   0x00008981      6a             ror a                       ; rotate one bit right (memory or accumulator)
  |||||||   0x00008982      696a           adc #0x6a                   ; add memory to accumulator with carry
  |||||||   0x00008984      915a           sta (0x5a),y                ; store accumulator in memory
  |||||||   0x00008986      9e3aa0         shx 0xa03a,y
  |||||||   0x00008989      f008           beq 0x514108                ; branch on result zero
  |||||||   0x0000898b      4a             lsr a                       ; shift right one bit (memory or accumulator)
  |||||||   0x0000898c      6b32           arr #0x32
  |||||||   0x0000898e      f149           sbc (0x49),y                ; subtract memory from accumulator with borrow
  |||||||   0x00008990      43a8           sre (0xa8,x)
  |||||||   0x00008992      141b           nop 0x1b,x                  ; no operation
  |||||||   0x00008994      66f0           ror 0xf0                    ; rotate one bit right (memory or accumulator)
  |||||||   0x00008996      80a5           nop #0xa5                   ; no operation
  |||||||   0x00008998      0cc920         nop 0x20c9                  ; no operation
  ========< 0x0000899b      9007           bcc 0x514108                ; branch on carry clear
  |||||||   0x0000899d      c928           cmp #0x28                   ; compare memory and accumulator
  ========< 0x0000899f      b003           bcs 0x514108                ; branch on carry set
  ========< 0x000089a1      4cb689         jmp 0x89b6                  ; jump to new location
  --------> 0x000089a4      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000089a7      c6e9           dec 0xe9                    ; decrement memory by one
  |||||||   0x000089a9      f2             hlt
  |||||||   0x000089aa      e5ad           sbc 0xad                    ; subtract memory from accumulator with borrow
  |||||||   0x000089ac      d7e8           dcp 0xe8,x
  |||||||   0x000089ae      e1f4           sbc (0xf4,x)                ; subtract memory from accumulator with borrow
  |||||||   0x000089b0      bf8d00         lax 0x008d,y
  |||||||   0x000089b3      4c0295         jmp 0x9502                  ; jump to new location
  --------> 0x000089b6      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000089b9      c6e9           dec 0xe9                    ; decrement memory by one
  |||||||   0x000089bb      f2             hlt
  |||||||   0x000089bc      e5ad           sbc 0xad                    ; subtract memory from accumulator with borrow
  |||||||   0x000089be      00             brk                         ; force break
  |||||||   0x000089bf      203f4c         jsr 0x4c3f                  ; jump to new location saving return address
  ========< 0x000089c2      d003           bne 0x514108                ; branch on result not zero
  --------> 0x000089c4      4c0295         jmp 0x9502                  ; jump to new location
  --------> 0x000089c7      a5a7           lda 0xa7                    ; load accumulator with memory
  ========< 0x000089c9      f009           beq 0x514108                ; branch on result zero
  |||||||   0x000089cb      a50c           lda 0x0c                    ; load accumulator with memory
  |||||||   0x000089cd      2901           and #0x01                   ; "and" memory with accumulator
  ========< 0x000089cf      f026           beq 0x514108                ; branch on result zero
  ========< 0x000089d1      4cda89         jmp 0x89da                  ; jump to new location
  --------> 0x000089d4      a50c           lda 0x0c                    ; load accumulator with memory
  |||||||   0x000089d6      2901           and #0x01                   ; "and" memory with accumulator
  ========< 0x000089d8      d01d           bne 0x514108                ; branch on result not zero
  --------> 0x000089da      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000089dd      c6e9           dec 0xe9                    ; decrement memory by one
  |||||||   0x000089df      f2             hlt
  |||||||   0x000089e0      e5a0           sbc 0xa0                    ; subtract memory from accumulator with borrow
  |||||||   0x000089e2      e2f2           nop #0xf2                   ; no operation
  |||||||   0x000089e4      efe1e4         isb 0xe4e1
  |||||||   0x000089e7      f3e9           isb (0xe9),y
  |||||||   0x000089e9      e4e5           cpx 0xe5                    ; compare memory and index x
  |||||||   0x000089eb      f38d           isb (0x8d),y
  |||||||   0x000089ed      efeeec         isb 0xecee
  |||||||   0x000089f0      f9a18d         sbc 0x8da1,y                ; subtract memory from accumulator with borrow
  |||||||   0x000089f3      00             brk                         ; force break
  |||||||   0x000089f4      4c0295         jmp 0x9502                  ; jump to new location
  --------> 0x000089f7      a90a           lda #0x0a                   ; load accumulator with memory
  |||||||   0x000089f9      204b4c         jsr 0x4c4b                  ; jump to new location saving return address
  |||||||   0x000089fc      20394c         jsr 0x4c39                  ; jump to new location saving return address
  |||||||   0x000089ff      20424c         jsr 0x4c42                  ; jump to new location saving return address
  |||||||   0x00008a02      29fc           and #0xfc                   ; "and" memory with accumulator
  |||||||   0x00008a04      c9ec           cmp #0xec                   ; compare memory and accumulator
  ========< 0x00008a06      f008           beq 0x514108                ; branch on result zero
  |||||||   0x00008a08      c980           cmp #0x80                   ; compare memory and accumulator
  ========< 0x00008a0a      b05e           bcs 0x514108                ; branch on carry set
  |||||||   0x00008a0c      c92c           cmp #0x2c                   ; compare memory and accumulator
  ========< 0x00008a0e      f05a           beq 0x514108                ; branch on result zero
  --------> 0x00008a10      203c4c         jsr 0x4c3c                  ; jump to new location saving return address
  |||||||   0x00008a13      20424c         jsr 0x4c42                  ; jump to new location saving return address
  |||||||   0x00008a16      29fc           and #0xfc                   ; "and" memory with accumulator
  |||||||   0x00008a18      c9ec           cmp #0xec                   ; compare memory and accumulator
  ========< 0x00008a1a      f008           beq 0x514108                ; branch on result zero
  |||||||   0x00008a1c      c980           cmp #0x80                   ; compare memory and accumulator
  ========< 0x00008a1e      b04a           bcs 0x514108                ; branch on carry set
  |||||||   0x00008a20      c92c           cmp #0x2c                   ; compare memory and accumulator
  ========< 0x00008a22      f046           beq 0x514108                ; branch on result zero
  --------> 0x00008a24      203c4c         jsr 0x4c3c                  ; jump to new location saving return address
  |||||||   0x00008a27      20424c         jsr 0x4c42                  ; jump to new location saving return address
  |||||||   0x00008a2a      29fc           and #0xfc                   ; "and" memory with accumulator
  |||||||   0x00008a2c      c9ec           cmp #0xec                   ; compare memory and accumulator
  ========< 0x00008a2e      f008           beq 0x514108                ; branch on result zero
  |||||||   0x00008a30      c980           cmp #0x80                   ; compare memory and accumulator
  ========< 0x00008a32      b036           bcs 0x514108                ; branch on carry set
  |||||||   0x00008a34      c92c           cmp #0x2c                   ; compare memory and accumulator
  ========< 0x00008a36      f032           beq 0x514108                ; branch on result zero
  --------> 0x00008a38      a52d           lda 0x2d                    ; load accumulator with memory
  |||||||   0x00008a3a      38             sec                         ; set carry flag
  |||||||   0x00008a3b      e5a9           sbc 0xa9                    ; subtract memory from accumulator with borrow
  |||||||   0x00008a3d      8da38a         sta 0x8aa3                  ; store accumulator in memory
  |||||||   0x00008a40      a52e           lda 0x2e                    ; load accumulator with memory
  |||||||   0x00008a42      38             sec                         ; set carry flag
  |||||||   0x00008a43      e5aa           sbc 0xaa                    ; subtract memory from accumulator with borrow
  |||||||   0x00008a45      8da48a         sta 0x8aa4                  ; store accumulator in memory
  |||||||   0x00008a48      a905           lda #0x05                   ; load accumulator with memory
  |||||||   0x00008a4a      858a           sta 0x8a                    ; store accumulator in memory
  |||||||   0x00008a4c      858b           sta 0x8b                    ; store accumulator in memory
  |||||||   0x00008a4e      38             sec                         ; set carry flag
  |||||||   0x00008a4f      eda38a         sbc 0x8aa3                  ; subtract memory from accumulator with borrow
  |||||||   0x00008a52      8da38a         sta 0x8aa3                  ; store accumulator in memory
  |||||||   0x00008a55      858c           sta 0x8c                    ; store accumulator in memory
  |||||||   0x00008a57      a905           lda #0x05                   ; load accumulator with memory
  |||||||   0x00008a59      38             sec                         ; set carry flag
  |||||||   0x00008a5a      eda48a         sbc 0x8aa4                  ; subtract memory from accumulator with borrow
  |||||||   0x00008a5d      8da48a         sta 0x8aa4                  ; store accumulator in memory
  |||||||   0x00008a60      858d           sta 0x8d                    ; store accumulator in memory
  |||||||   0x00008a62      a907           lda #0x07                   ; load accumulator with memory
  |||||||   0x00008a64      200c6c         jsr 0x6c0c                  ; jump to new location saving return address
  ========< 0x00008a67      4c0295         jmp 0x9502                  ; jump to new location
  --------> 0x00008a6a      8e038b         stx 0x8b03                  ; store index x in memory
  |||||||   0x00008a6d      a52d           lda 0x2d                    ; load accumulator with memory
  |||||||   0x00008a6f      38             sec                         ; set carry flag
  |||||||   0x00008a70      fd404a         sbc 0x4a40,x                ; subtract memory from accumulator with borrow
  |||||||   0x00008a73      8da38a         sta 0x8aa3                  ; store accumulator in memory
  |||||||   0x00008a76      a52e           lda 0x2e                    ; load accumulator with memory
  |||||||   0x00008a78      38             sec                         ; set carry flag
  |||||||   0x00008a79      fd604a         sbc 0x4a60,x                ; subtract memory from accumulator with borrow
  |||||||   0x00008a7c      8da48a         sta 0x8aa4                  ; store accumulator in memory
  |||||||   0x00008a7f      a905           lda #0x05                   ; load accumulator with memory
  |||||||   0x00008a81      858a           sta 0x8a                    ; store accumulator in memory
  |||||||   0x00008a83      858b           sta 0x8b                    ; store accumulator in memory
  |||||||   0x00008a85      38             sec                         ; set carry flag
  |||||||   0x00008a86      eda38a         sbc 0x8aa3                  ; subtract memory from accumulator with borrow
  |||||||   0x00008a89      8da38a         sta 0x8aa3                  ; store accumulator in memory
  |||||||   0x00008a8c      858c           sta 0x8c                    ; store accumulator in memory
  |||||||   0x00008a8e      a905           lda #0x05                   ; load accumulator with memory
  |||||||   0x00008a90      38             sec                         ; set carry flag
  |||||||   0x00008a91      eda48a         sbc 0x8aa4                  ; subtract memory from accumulator with borrow
  |||||||   0x00008a94      8da48a         sta 0x8aa4                  ; store accumulator in memory
  |||||||   0x00008a97      858d           sta 0x8d                    ; store accumulator in memory
  |||||||   0x00008a99      a907           lda #0x07                   ; load accumulator with memory
  |||||||   0x00008a9b      200c6c         jsr 0x6c0c                  ; jump to new location saving return address
  ========< 0x00008a9e      9005           bcc 0x514108                ; branch on carry clear
  ========< 0x00008aa0      4c0295         jmp 0x9502                  ; jump to new location
  |||||||   0x00008aa3      00             brk                         ; force break
  |||||||   0x00008aa4      00             brk                         ; force break
  --------> 0x00008aa5      ad404a         lda 0x4a40                  ; load accumulator with memory
  |||||||   0x00008aa8      48             pha                         ; push accumulator on stack
  |||||||   0x00008aa9      ad604a         lda 0x4a60                  ; load accumulator with memory
  |||||||   0x00008aac      48             pha                         ; push accumulator on stack
  |||||||   0x00008aad      ada38a         lda 0x8aa3                  ; load accumulator with memory
  |||||||   0x00008ab0      8d404a         sta 0x4a40                  ; store accumulator in memory
  |||||||   0x00008ab3      ada48a         lda 0x8aa4                  ; load accumulator with memory
  |||||||   0x00008ab6      8d604a         sta 0x4a60                  ; store accumulator in memory
  |||||||   0x00008ab9      38             sec                         ; set carry flag
  |||||||   0x00008aba      a200           ldx #0x00                   ; load index x with memory
  |||||||   0x00008abc      20186c         jsr 0x6c18                  ; jump to new location saving return address
  |||||||   0x00008abf      68             pla                         ; pull accumulator from stack
  |||||||   0x00008ac0      8d604a         sta 0x4a60                  ; store accumulator in memory
  |||||||   0x00008ac3      68             pla                         ; pull accumulator from stack
  |||||||   0x00008ac4      8d404a         sta 0x4a40                  ; store accumulator in memory
  --------> 0x00008ac7      20274c         jsr 0x4c27                  ; jump to new location saving return address
  |||||||   0x00008aca      293f           and #0x3f                   ; "and" memory with accumulator
  ========< 0x00008acc      f0f9           beq 0x514108                ; branch on result zero
  |||||||   0x00008ace      a8             tay                         ; transfer accumulator to index y
  |||||||   0x00008acf      290f           and #0x0f                   ; "and" memory with accumulator
  |||||||   0x00008ad1      c90a           cmp #0x0a                   ; compare memory and accumulator
  ========< 0x00008ad3      b0f2           bcs 0x514108                ; branch on carry set
  |||||||   0x00008ad5      98             tya                         ; transfer index y to accumulator
  |||||||   0x00008ad6      c931           cmp #0x31                   ; compare memory and accumulator
  ========< 0x00008ad8      b0ed           bcs 0x514108                ; branch on carry set
  |||||||   0x00008ada      8d048b         sta 0x8b04                  ; store accumulator in memory
  |||||||   0x00008add      f8             sed                         ; set decimal mode
  |||||||   0x00008ade      ae038b         ldx 0x8b03                  ; load index x with memory
  |||||||   0x00008ae1      bdc04a         lda 0x4ac0,x                ; load accumulator with memory
  |||||||   0x00008ae4      38             sec                         ; set carry flag
  |||||||   0x00008ae5      ed048b         sbc 0x8b04                  ; subtract memory from accumulator with borrow
  |||||||   0x00008ae8      9dc04a         sta 0x4ac0,x                ; store accumulator in memory
  ========< 0x00008aeb      b005           bcs 0x514108                ; branch on carry set
  |||||||   0x00008aed      a900           lda #0x00                   ; load accumulator with memory
  |||||||   0x00008aef      9d004a         sta 0x4a00,x                ; store accumulator in memory
  --------> 0x00008af2      d8             cld                         ; clear decimal mode
  ========< 0x00008af3      4c0295         jmp 0x9502                  ; jump to new location
  |||||||   0x00008af6      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008af9      c2cf           nop #0xcf                   ; no operation
  |||||||   0x00008afb      cfcda1         dcp 0xa1cd
  |||||||   0x00008afe      8d004c         sta 0x4c00                  ; store accumulator in memory
  |||||||   0x00008b01      02             hlt
  |||||||   0x00008b02      9500           sta 0x00,x                  ; store accumulator in memory
  |||||||   0x00008b04      00             brk                         ; force break
  ========< 0x00008b05      4c0295         jmp 0x9502                  ; jump to new location
  |||||||   0x00008b08      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008b0b      c7e5           dcp 0xe5
  |||||||   0x00008b0d      f4ad           nop 0xad,x                  ; no operation
  |||||||   0x00008b0f      00             brk                         ; force break
  |||||||   0x00008b10      203f4c         jsr 0x4c3f                  ; jump to new location saving return address
   ||||||   0x00008b13      f027           beq 0x514108                ; branch on result zero
   ||||||   0x00008b15      20394c         jsr 0x4c39                  ; jump to new location saving return address
   ||||||   0x00008b18      20424c         jsr 0x4c42                  ; jump to new location saving return address
  ,=======< 0x00008b1b      d017           bne 0x514108                ; branch on result not zero
  |||||||   0x00008b1d      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008b20      ceeff4         dec 0xf4ef                  ; decrement memory by one
  |||||||   0x00008b23      e8             inx                         ; increment index x by one
  |||||||   0x00008b24      e9ee           sbc #0xee                   ; subtract memory from accumulator with borrow
  |||||||   0x00008b26      e7a0           isb 0xa0
  |||||||   0x00008b28      f4ef           nop 0xef,x                  ; no operation
  |||||||   0x00008b2a      a0e7           ldy #0xe7                   ; load index y with memory
  |||||||   0x00008b2c      e5f4           sbc 0xf4                    ; subtract memory from accumulator with borrow
  |||||||   0x00008b2e      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x00008b30      00             brk                         ; force break
  ========< 0x00008b31      4c0295         jmp 0x9502                  ; jump to new location
  `-------> 0x00008b34      a953           lda #0x53                   ; load accumulator with memory
   ||||||   0x00008b36      20861d         jsr 0x1d86                  ; jump to new location saving return address
   ||||||   0x00008b39      2009a7         jsr 0xa709                  ; jump to new location saving return address
  .-------> 0x00008b3c      4c0295         jmp 0x9502                  ; jump to new location
  |||||||   0x00008b3f      a50c           lda 0x0c                    ; load accumulator with memory
  |||||||   0x00008b41      29f8           and #0xf8                   ; "and" memory with accumulator
  |||||||   0x00008b43      c920           cmp #0x20                   ; compare memory and accumulator
  ========< 0x00008b45      f003           beq 0x514108                ; branch on result zero
  ========< 0x00008b47      4cd98b         jmp 0x8bd9                  ; jump to new location
  --------> 0x00008b4a      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008b4d      c8             iny                         ; increment index y by one
  |||||||   0x00008b4e      efece5         isb 0xe5ec
  |||||||   0x00008b51      a0f5           ldy #0xf5                   ; load index y with memory
  |||||||   0x00008b53      f0a0           beq 0x514108                ; branch on result zero
  |||||||   0x00008b55      a68d           ldx 0x8d                    ; load index x with memory
  |||||||   0x00008b57      f2             hlt
  |||||||   0x00008b58      e5f0           sbc 0xf0                    ; subtract memory from accumulator with borrow
   ||||||   0x00008b5a      e1e9           sbc (0xe9,x)                ; subtract memory from accumulator with borrow
   ||||||   0x00008b5c      f2             hlt
   ||||||   0x00008b5d      8d00a5         sta 0xa500                  ; store accumulator in memory
   ||||||   0x00008b60      0c29fc         nop 0xfc29                  ; no operation
   ||||||   0x00008b63      c920           cmp #0x20                   ; compare memory and accumulator
  ,=======< 0x00008b65      d021           bne 0x514108                ; branch on result not zero
  |||||||   0x00008b67      20064c         jsr 0x4c06                  ; jump to new location saving return address
  |||||||   0x00008b6a      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008b6d      d3e1           dcp (0xe1),y
  |||||||   0x00008b6f      e9ec           sbc #0xec                   ; subtract memory from accumulator with borrow
  |||||||   0x00008b71      f3a0           isb (0xa0),y
  |||||||   0x00008b73      edf5f3         sbc 0xf3f5                  ; subtract memory from accumulator with borrow
  |||||||   0x00008b76      f4a0           nop 0xa0,x                  ; no operation
  |||||||   0x00008b78      e2e5           nop #0xe5                   ; no operation
  |||||||   0x00008b7a      8decef         sta 0xefec                  ; store accumulator in memory
  |||||||   0x00008b7d      f7e5           isb 0xe5,x
  |||||||   0x00008b7f      f2             hlt
  |||||||   0x00008b80      e5e4           sbc 0xe4                    ; subtract memory from accumulator with borrow
  |||||||   0x00008b82      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x00008b84      00             brk                         ; force break
  ========< 0x00008b85      4c7a80         jmp 0x807a                  ; jump to new location
  `-------> 0x00008b88      a905           lda #0x05                   ; load accumulator with memory
   ||||||   0x00008b8a      8d008d         sta 0x8d00                  ; store accumulator in memory
  --------> 0x00008b8d      2086a3         jsr 0xa386                  ; jump to new location saving return address
  |||||||   0x00008b90      20d8a2         jsr 0xa2d8                  ; jump to new location saving return address
  |||||||   0x00008b93      a50c           lda 0x0c                    ; load accumulator with memory
  |||||||   0x00008b95      29fc           and #0xfc                   ; "and" memory with accumulator
  |||||||   0x00008b97      c924           cmp #0x24                   ; compare memory and accumulator
  ========< 0x00008b99      d03b           bne 0x514108                ; branch on result not zero
  |||||||   0x00008b9b      a905           lda #0x05                   ; load accumulator with memory
  |||||||   0x00008b9d      202d4c         jsr 0x4c2d                  ; jump to new location saving return address
  |||||||   0x00008ba0      ce008d         dec 0x8d00                  ; decrement memory by one
  ========< 0x00008ba3      d0e8           bne 0x514108                ; branch on result not zero
  --------> 0x00008ba5      20274c         jsr 0x4c27                  ; jump to new location saving return address
  |||||||   0x00008ba8      2903           and #0x03                   ; "and" memory with accumulator
  ========< 0x00008baa      f0f9           beq 0x514108                ; branch on result zero
  |||||||   0x00008bac      f8             sed                         ; set decimal mode
  |||||||   0x00008bad      18             clc                         ; clear carry flag
  |||||||   0x00008bae      6dc04a         adc 0x4ac0                  ; add memory to accumulator with carry
  |||||||   0x00008bb1      d8             cld                         ; clear decimal mode
  ========< 0x00008bb2      9002           bcc 0x514108                ; branch on carry clear
  |||||||   0x00008bb4      a999           lda #0x99                   ; load accumulator with memory
  --------> 0x00008bb6      8dc04a         sta 0x4ac0                  ; store accumulator in memory
  |||||||   0x00008bb9      c910           cmp #0x10                   ; compare memory and accumulator
  ========< 0x00008bbb      90e8           bcc 0x514108                ; branch on carry clear
  |||||||   0x00008bbd      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008bc0      c8             iny                         ; increment index y by one
  |||||||   0x00008bc1      f5ec           sbc 0xec,x                  ; subtract memory from accumulator with borrow
  |||||||   0x00008bc3      eca0ee         cpx 0xeea0                  ; compare memory and index x
  |||||||   0x00008bc6      eff7a0         isb 0xa0f7
  |||||||   0x00008bc9      00             brk                         ; force break
  |||||||   0x00008bca      adc04a         lda 0x4ac0                  ; load accumulator with memory
  |||||||   0x00008bcd      200c4c         jsr 0x4c0c                  ; jump to new location saving return address
  |||||||   0x00008bd0      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008bd3      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x00008bd5      00             brk                         ; force break
  ========< 0x00008bd6      4c0295         jmp 0x9502                  ; jump to new location
  --------> 0x00008bd9      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008bdc      c8             iny                         ; increment index y by one
  |||||||   0x00008bdd      efece5         isb 0xe5ec
  |||||||   0x00008be0      a0f5           ldy #0xf5                   ; load index y with memory
  |||||||   0x00008be2      f0a0           beq 0x514108                ; branch on result zero
  |||||||   0x00008be4      a6a0           ldx 0xa0                    ; load index x with memory
  |||||||   0x00008be6      e3e1           isb (0xe1,x)
  |||||||   0x00008be8      edf0a1         sbc 0xa1f0                  ; subtract memory from accumulator with borrow
   ||||||   0x00008beb      8d0020         sta 0x2000                  ; store accumulator in memory
   ||||||   0x00008bee      214c           and (0x4c,x)                ; "and" memory with accumulator
   ||||||   0x00008bf0      c901           cmp #0x01                   ; compare memory and accumulator
  ,=======< 0x00008bf2      f00b           beq 0x514108                ; branch on result zero
  |||||||   0x00008bf4      c902           cmp #0x02                   ; compare memory and accumulator
  ========< 0x00008bf6      f007           beq 0x514108                ; branch on result zero
  |||||||   0x00008bf8      c903           cmp #0x03                   ; compare memory and accumulator
  ========< 0x00008bfa      f003           beq 0x514108                ; branch on result zero
  ========< 0x00008bfc      4c178c         jmp 0x8c17                  ; jump to new location
  `-------> 0x00008bff      20004c         jsr 0x4c00                  ; jump to new location saving return address
   ||||||   0x00008c02      cfeea0         dcp 0xa0ee
   ||||||   0x00008c05      ece1ee         cpx 0xeee1                  ; compare memory and index x
   ||||||   0x00008c08      e4a0           cpx 0xa0                    ; compare memory and index x
   ||||||   0x00008c0a      eff2a0         isb 0xa0f2
   ||||||   0x00008c0d      f3e8           isb (0xe8),y
   ||||||   0x00008c0f      e9f0           sbc #0xf0                   ; subtract memory from accumulator with borrow
   ||||||   0x00008c11      a18d           lda (0x8d,x)                ; load accumulator with memory
   ||||||   0x00008c13      00             brk                         ; force break
  ,=======< 0x00008c14      4c0295         jmp 0x9502                  ; jump to new location
  --------> 0x00008c17      a50c           lda 0x0c                    ; load accumulator with memory
  |||||||   0x00008c19      c91c           cmp #0x1c                   ; compare memory and accumulator
  ========< 0x00008c1b      f010           beq 0x514108                ; branch on result zero
  |||||||   0x00008c1d      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008c20      cfeea0         dcp 0xa0ee
  |||||||   0x00008c23      e6ef           inc 0xef                    ; increment memory by one
  |||||||   0x00008c25      eff4a1         isb 0xa1f4
  |||||||   0x00008c28      8d004c         sta 0x4c00                  ; store accumulator in memory
  |||||||   0x00008c2b      02             hlt
  |||||||   0x00008c2c      9520           sta 0x20,x                  ; store accumulator in memory
  |||||||   0x00008c2e      00             brk                         ; force break
  |||||||   0x00008c2f      4c8dc6         jmp 0xc68d                  ; jump to new location
  |||||||   0x00008c32      eff2a0         isb 0xa0f2
  |||||||   0x00008c35      e8             inx                         ; increment index x by one
  |||||||   0x00008c36      eff7a0         isb 0xa0f7
  |||||||   0x00008c39      ede1ee         sbc 0xeee1                  ; subtract memory from accumulator with borrow
  |||||||   0x00008c3c      f98de8         sbc 0xe88d,y                ; subtract memory from accumulator with borrow
  |||||||   0x00008c3f      eff5f2         isb 0xf2f5
  |||||||   0x00008c42      f3bf           isb (0xbf),y
  |||||||   0x00008c44      a0a8           ldy #0xa8                   ; load index y with memory
  |||||||   0x00008c46      b1ad           lda (0xad),y                ; load accumulator with memory
  |||||||   0x00008c48      b9a9a0         lda 0xa0a9,y                ; load accumulator with memory
  |||||||   0x00008c4b      00             brk                         ; force break
  |||||||   0x00008c4c      20154c         jsr 0x4c15                  ; jump to new location saving return address
  |||||||   0x00008c4f      38             sec                         ; set carry flag
  |||||||   0x00008c50      e9b0           sbc #0xb0                   ; subtract memory from accumulator with borrow
  ========< 0x00008c52      f04e           beq 0x514108                ; branch on result zero
  |||||||   0x00008c54      c90a           cmp #0x0a                   ; compare memory and accumulator
  ========< 0x00008c56      b04a           bcs 0x514108                ; branch on carry set
  |||||||   0x00008c58      858a           sta 0x8a                    ; store accumulator in memory
  |||||||   0x00008c5a      20094c         jsr 0x4c09                  ; jump to new location saving return address
  |||||||   0x00008c5d      20064c         jsr 0x4c06                  ; jump to new location saving return address
  |||||||   0x00008c60      20064c         jsr 0x4c06                  ; jump to new location saving return address
  |||||||   0x00008c63      38             sec                         ; set carry flag
  |||||||   0x00008c64      6688           ror 0x88                    ; rotate one bit right (memory or accumulator)
  |||||||   0x00008c66      ad9010         lda 0x1090                  ; load accumulator with memory
  ========< 0x00008c69      f003           beq 0x514108                ; branch on result zero
  ========< 0x00008c6b      4cfa8c         jmp 0x8cfa                  ; jump to new location
  --------> 0x00008c6e      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008c71      d7e9           dcp 0xe9,x
  |||||||   0x00008c73      ecf4a0         cpx 0xa0f4                  ; compare memory and index x
  |||||||   0x00008c76      f4e8           nop 0xe8,x                  ; no operation
  |||||||   0x00008c78      eff5a0         isb 0xa0f5
  |||||||   0x00008c7b      f3e5           isb (0xe5),y
  |||||||   0x00008c7d      f48d           nop 0x8d,x                  ; no operation
  |||||||   0x00008c7f      e1a0           sbc (0xa0,x)                ; subtract memory from accumulator with borrow
  |||||||   0x00008c81      f7e1           isb 0xe1,x
  |||||||   0x00008c83      f4e3           nop 0xe3,x                  ; no operation
  |||||||   0x00008c85      e8             inx                         ; increment index x by one
  |||||||   0x00008c86      bfa000         lax 0x00a0,y
  --------> 0x00008c89      20154c         jsr 0x4c15                  ; jump to new location saving return address
  |||||||   0x00008c8c      c9d9           cmp #0xd9                   ; compare memory and accumulator
  ========< 0x00008c8e      f018           beq 0x514108                ; branch on result zero
  |||||||   0x00008c90      c9ce           cmp #0xce                   ; compare memory and accumulator
  ========< 0x00008c92      d00a           bne 0x514108                ; branch on result not zero
  |||||||   0x00008c94      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008c97      ceef8d         dec 0x8def                  ; decrement memory by one
  |||||||   0x00008c9a      00             brk                         ; force break
  ========< 0x00008c9b      4cfa8c         jmp 0x8cfa                  ; jump to new location
  --------> 0x00008c9e      c985           cmp #0x85                   ; compare memory and accumulator
  ========< 0x00008ca0      d0e7           bne 0x514108                ; branch on result not zero
  --------> 0x00008ca2      20064c         jsr 0x4c06                  ; jump to new location saving return address
  ========< 0x00008ca5      4c7a80         jmp 0x807a                  ; jump to new location
  --------> 0x00008ca8      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008cab      d9e5f3         cmp 0xf3e5,y                ; compare memory and accumulator
  |||||||   0x00008cae      8d8d00         sta 0x008d                  ; store accumulator in memory
  |||||||   0x00008cb1      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008cb4      d7e8           dcp 0xe8,x
  |||||||   0x00008cb6      efa0f7         isb 0xf7a0
  |||||||   0x00008cb9      e9ec           sbc #0xec                   ; subtract memory from accumulator with borrow
  |||||||   0x00008cbb      ec8df3         cpx 0xf38d                  ; compare memory and index x
  |||||||   0x00008cbe      f4e1           nop 0xe1,x                  ; no operation
  |||||||   0x00008cc0      eee4a0         inc 0xa0e4                  ; increment memory by one
  |||||||   0x00008cc3      e7f5           isb 0xf5
  |||||||   0x00008cc5      e1f2           sbc (0xf2,x)                ; subtract memory from accumulator with borrow
  |||||||   0x00008cc7      e4bf           cpx 0xbf                    ; compare memory and index x
  |||||||   0x00008cc9      a000           ldy #0x00                   ; load index y with memory
  |||||||   0x00008ccb      207b4c         jsr 0x4c7b                  ; jump to new location saving return address
  |||||||   0x00008cce      20064c         jsr 0x4c06                  ; jump to new location saving return address
  |||||||   0x00008cd1      a57b           lda 0x7b                    ; load accumulator with memory
  |||||||   0x00008cd3      8588           sta 0x88                    ; store accumulator in memory
  ========< 0x00008cd5      3012           bmi 0x514108                ; branch on result minus
  |||||||   0x00008cd7      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x00008cd8      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x00008cd9      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x00008cda      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x00008cdb      a8             tay                         ; transfer accumulator to index y
  |||||||   0x00008cdc      b98310         lda 0x1083,y                ; load accumulator with memory
  |||||||   0x00008cdf      c9d3           cmp #0xd3                   ; compare memory and accumulator
  ========< 0x00008ce1      f004           beq 0x514108                ; branch on result zero
  |||||||   0x00008ce3      c9c4           cmp #0xc4                   ; compare memory and accumulator
  ========< 0x00008ce5      d013           bne 0x514108                ; branch on result not zero
  --------> 0x00008ce7      6688           ror 0x88                    ; rotate one bit right (memory or accumulator)
  --------> 0x00008ce9      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008cec      ceefee         dec 0xeeef                  ; decrement memory by one
  |||||||   0x00008cef      e5a0           sbc 0xa0                    ; subtract memory from accumulator with borrow
  ========< 0x00008cf1      f0ef           beq 0x514108                ; branch on result zero
  |||||||   0x00008cf3      f3f4           isb (0xf4),y
  |||||||   0x00008cf5      e5e4           sbc 0xe4                    ; subtract memory from accumulator with borrow
  |||||||   0x00008cf7      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x00008cf9      00             brk                         ; force break
  --------> 0x00008cfa      20f797         jsr 0x97f7                  ; jump to new location saving return address
  ========< 0x00008cfd      4c12a7         jmp 0xa712                  ; jump to new location
  |||||||   0x00008d00      00             brk                         ; force break
  |||||||   0x00008d01      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008d04      c9e7           cmp #0xe7                   ; compare memory and accumulator
  |||||||   0x00008d06      eee9f4         inc 0xf4e9                  ; increment memory by one
  |||||||   0x00008d09      e5a0           sbc 0xa0                    ; subtract memory from accumulator with borrow
  |||||||   0x00008d0b      f4ef           nop 0xef,x                  ; no operation
  |||||||   0x00008d0d      f2             hlt
  |||||||   0x00008d0e      e3e8           isb (0xe8,x)
  |||||||   0x00008d10      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x00008d12      00             brk                         ; force break
  |||||||   0x00008d13      ad8611         lda 0x1186                  ; load accumulator with memory
  ========< 0x00008d16      d013           bne 0x514108                ; branch on result not zero
  |||||||   0x00008d18      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008d1b      ceefee         dec 0xeeef                  ; decrement memory by one
  |||||||   0x00008d1e      e5a0           sbc 0xa0                    ; subtract memory from accumulator with borrow
  |||||||   0x00008d20      eff7ee         isb 0xeef7
  |||||||   0x00008d23      e5e4           sbc 0xe4                    ; subtract memory from accumulator with borrow
  |||||||   0x00008d25      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x00008d27      00             brk                         ; force break
  ========< 0x00008d28      4c0295         jmp 0x9502                  ; jump to new location
  --------> 0x00008d2b      f8             sed                         ; set decimal mode
  |||||||   0x00008d2c      ad8611         lda 0x1186                  ; load accumulator with memory
  |||||||   0x00008d2f      18             clc                         ; clear carry flag
  |||||||   0x00008d30      e901           sbc #0x01                   ; subtract memory from accumulator with borrow
  |||||||   0x00008d32      8d8611         sta 0x1186                  ; store accumulator in memory
  |||||||   0x00008d35      d8             cld                         ; clear decimal mode
  |||||||   0x00008d36      a9f0           lda #0xf0                   ; load accumulator with memory
  |||||||   0x00008d38      8510           sta 0x10                    ; store accumulator in memory
  ========< 0x00008d3a      4c0295         jmp 0x9502                  ; jump to new location
  |||||||   0x00008d3d      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008d40      ca             dex                         ; decrement index x by one
  |||||||   0x00008d41      e9ed           sbc #0xed                   ; subtract memory from accumulator with borrow
  |||||||   0x00008d43      edf9a0         sbc 0xa0f9                  ; subtract memory from accumulator with borrow
  |||||||   0x00008d46      ecefe3         cpx 0xe3ef                  ; compare memory and index x
  |||||||   0x00008d49      eb8d           sbc #0x8d                   ; subtract memory from accumulator with borrow
  |||||||   0x00008d4b      c4e9           cpy 0xe9                    ; compare memory and index y
  |||||||   0x00008d4d      f2             hlt
  |||||||   0x00008d4e      ad0020         lda 0x2000                  ; load accumulator with memory
  |||||||   0x00008d51      3f4cf0         rla 0xf04c,x
  |||| ||   0x00008d54      1520           ora 0x20,x                  ; "or" memory with accumulator
  |||| ||   0x00008d56      394c20         and 0x204c,y                ; "and" memory with accumulator
  |||| ||   0x00008d59      42             hlt
  |||| ||   0x00008d5a      4cd010         jmp 0x10d0                  ; jump to new location
  |||||||   0x00008d5d      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008d60      ceefa0         dec 0xa0ef                  ; decrement memory by one
  |||||||   0x00008d63      ecefe3         cpx 0xe3ef                  ; compare memory and index x
  |||||||   0x00008d66      eba1           sbc #0xa1                   ; subtract memory from accumulator with borrow
  |||||||   0x00008d68      8d004c         sta 0x4c00                  ; store accumulator in memory
  |||||||   0x00008d6b      02             hlt
  |||||||   0x00008d6c      95ad           sta 0xad,x                  ; store accumulator in memory
  |||| ||   0x00008d6e      8411           sty 0x11                    ; store index y in memory
  ||||,===< 0x00008d70      f00b           beq 0x514108                ; branch on result zero
  |||||||   0x00008d72      a953           lda #0x53                   ; load accumulator with memory
  |||||||   0x00008d74      20861d         jsr 0x1d86                  ; jump to new location saving return address
  |||||||   0x00008d77      2003a7         jsr 0xa703                  ; jump to new location saving return address
  ========< 0x00008d7a      4c0295         jmp 0x9502                  ; jump to new location
  ||||`---> 0x00008d7d      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||| ||   0x00008d80      ceefa0         dec 0xa0ef                  ; decrement memory by one
  |||| ||   0x00008d83      ebe5           sbc #0xe5                   ; subtract memory from accumulator with borrow
  |||| ||   0x00008d85      f9f3a1         sbc 0xa1f3,y                ; subtract memory from accumulator with borrow
  |||| ||   0x00008d88      8d004c         sta 0x4c00                  ; store accumulator in memory
  |||||||   0x00008d8b      02             hlt
  |||||||   0x00008d8c      958e           sta 0x8e,x                  ; store accumulator in memory
  |||||||   0x00008d8e      9d8d8c         sta 0x8c8d,x                ; store accumulator in memory
  |||||||   0x00008d91      9e8d20         shx 0x208d,y
  |||||||   0x00008d94      72             hlt
  |||||||   0x00008d95      4cae9d         jmp 0x9dae                  ; jump to new location
  |||||||   0x00008d98      8dac9e         sta 0x9eac                  ; store accumulator in memory
  |||||||   0x00008d9b      8d6000         sta 0x0060                  ; store accumulator in memory
  |||||||   0x00008d9e      00             brk                         ; force break
  |||||||   0x00008d9f      8ebd8d         stx 0x8dbd                  ; store index x in memory
  |||||||   0x00008da2      8cbe8d         sty 0x8dbe                  ; store index y in memory
  --------> 0x00008da5      206c4c         jsr 0x4c6c                  ; jump to new location saving return address
  |||||||   0x00008da8      2907           and #0x07                   ; "and" memory with accumulator
  ========< 0x00008daa      f0f9           beq 0x514108                ; branch on result zero
  |||||||   0x00008dac      c906           cmp #0x06                   ; compare memory and accumulator
  ========< 0x00008dae      f0f5           beq 0x514108                ; branch on result zero
  |||||||   0x00008db0      aebe8d         ldx 0x8dbe                  ; load index x with memory
  |||||||   0x00008db3      208d4c         jsr 0x4c8d                  ; jump to new location saving return address
  |||||||   0x00008db6      aebd8d         ldx 0x8dbd                  ; load index x with memory
  |||||||   0x00008db9      acbe8d         ldy 0x8dbe                  ; load index y with memory
  |||||||   0x00008dbc      60             rts                         ; return from subroutine
  |||||||   0x00008dbd      00             brk                         ; force break
  |||||||   0x00008dbe      00             brk                         ; force break
  |||||||   0x00008dbf      a000           ldy #0x00                   ; load index y with memory
  |||||||   0x00008dc1      98             tya                         ; transfer index y to accumulator
  |||||||   0x00008dc2      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x00008dc3      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x00008dc4      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x00008dc5      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x00008dc6      aa             tax                         ; transfer accumulator to index x
  |||||||   0x00008dc7      bd8010         lda 0x1080,x                ; load accumulator with memory
  ========< 0x00008dca      d023           bne 0x514108                ; branch on result not zero
  |||||||   0x00008dcc      bd8310         lda 0x1083,x                ; load accumulator with memory
  |||||||   0x00008dcf      c9c4           cmp #0xc4                   ; compare memory and accumulator
  ========< 0x00008dd1      f018           beq 0x514108                ; branch on result zero
  |||||||   0x00008dd3      208d8d         jsr 0x8d8d                  ; jump to new location saving return address
  |||||||   0x00008dd6      20544c         jsr 0x4c54                  ; jump to new location saving return address
  |||||||   0x00008dd9      dd8510         cmp 0x1085,x                ; compare memory and accumulator
  ========< 0x00008ddc      900d           bcc 0x514108                ; branch on carry clear
  |||||||   0x00008dde      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008de1      c6e5           dec 0xe5                    ; decrement memory by one
  |||||||   0x00008de3      ececa1         cpx 0xa1ec                  ; compare memory and index x
  |||||||   0x00008de6      8d0020         sta 0x2000                  ; store accumulator in memory
  |||||||   0x00008de9      9f8dc8         sha 0xc88d,y
  |||||||   0x00008dec      4cc18d         jmp 0x8dc1                  ; jump to new location
  --------> 0x00008def      60             rts                         ; return from subroutine
  |||||||   0x00008df0      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008df3      cbec           sbx 0xec
  |||||||   0x00008df5      e9ed           sbc #0xed                   ; subtract memory from accumulator with borrow
  |||||||   0x00008df7      e2ad           nop #0xad                   ; no operation
  |||||||   0x00008df9      00             brk                         ; force break
  |||||||   0x00008dfa      ad8711         lda 0x1187                  ; load accumulator with memory
  |||||||   0x00008dfd      f054           beq 0x514108                ; branch on result zero
  |||||||   0x00008dff      a50c           lda 0x0c                    ; load accumulator with memory
  |||||||   0x00008e01      c91c           cmp #0x1c                   ; compare memory and accumulator
  ========< 0x00008e03      d063           bne 0x514108                ; branch on result not zero
  |||||||   0x00008e05      203f4c         jsr 0x4c3f                  ; jump to new location saving return address
  ========< 0x00008e08      f06b           beq 0x514108                ; branch on result zero
  |||||||   0x00008e0a      20394c         jsr 0x4c39                  ; jump to new location saving return address
  |||||||   0x00008e0d      201e4c         jsr 0x4c1e                  ; jump to new location saving return address
  |||||||   0x00008e10      c90d           cmp #0x0d                   ; compare memory and accumulator
  ========< 0x00008e12      f02c           beq 0x514108                ; branch on result zero
  |||||||   0x00008e14      c90c           cmp #0x0c                   ; compare memory and accumulator
  ========< 0x00008e16      d012           bne 0x514108                ; branch on result not zero
  |||||||   0x00008e18      20bf8d         jsr 0x8dbf                  ; jump to new location saving return address
  |||||||   0x00008e1b      a5a7           lda 0xa7                    ; load accumulator with memory
  ========< 0x00008e1d      3062           bmi 0x514108                ; branch on result minus
  ========< 0x00008e1f      d05d           bne 0x514108                ; branch on result not zero
  |||||||   0x00008e21      a5a8           lda 0xa8                    ; load accumulator with memory
  ========< 0x00008e23      3053           bmi 0x514108                ; branch on result minus
  ========< 0x00008e25      1054           bpl 0x514108                ; branch on result plus
  ========< 0x00008e27      4c758e         jmp 0x8e75                  ; jump to new location
  --------> 0x00008e2a      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008e2d      ceeff4         dec 0xf4ef                  ; decrement memory by one
  |||||||   0x00008e30      a0e3           ldy #0xe3                   ; load index y with memory
  |||||||   0x00008e32      ece9ed         cpx 0xede9                  ; compare memory and index x
  |||||||   0x00008e35      e2e1           nop #0xe1                   ; no operation
  |||||||   0x00008e37      e2ec           nop #0xec                   ; no operation
  |||||||   0x00008e39      e5a1           sbc 0xa1                    ; subtract memory from accumulator with borrow
  |||||||   0x00008e3b      8d004c         sta 0x4c00                  ; store accumulator in memory
  |||||||   0x00008e3e      758e           adc 0x8e,x                  ; add memory to accumulator with carry
  --------> 0x00008e40      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008e43      c9ed           cmp #0xed                   ; compare memory and accumulator
  ========< 0x00008e45      f0e1           beq 0x514108                ; branch on result zero
  |||||||   0x00008e47      f3f3           isb (0xf3),y
  |||||||   0x00008e49      e1e2           sbc (0xe2,x)                ; subtract memory from accumulator with borrow
  |||||||   0x00008e4b      ece5a1         cpx 0xa1e5                  ; compare memory and index x
  |||||||   0x00008e4e      8d004c         sta 0x4c00                  ; store accumulator in memory
  |||||||   0x00008e51      758e           adc 0x8e,x                  ; add memory to accumulator with carry
  |||||||   0x00008e53      20064c         jsr 0x4c06                  ; jump to new location saving return address
  |||||||   0x00008e56      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008e59      d7e9           dcp 0xe9,x
  |||||||   0x00008e5b      f4e8           nop 0xe8,x                  ; no operation
  |||||||   0x00008e5d      a0f7           ldy #0xf7                   ; load index y with memory
  |||||||   0x00008e5f      e8             inx                         ; increment index x by one
  |||||||   0x00008e60      e1f4           sbc (0xf4,x)                ; subtract memory from accumulator with borrow
  |||||||   0x00008e62      bf8d00         lax 0x008d,y
  |||||||   0x00008e65      4c758e         jmp 0x8e75                  ; jump to new location
  --------> 0x00008e68      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008e6b      cfeea0         dcp 0xa0ee
  |||||||   0x00008e6e      e6ef           inc 0xef                    ; increment memory by one
  |||||||   0x00008e70      eff4a1         isb 0xa1f4
  |||||||   0x00008e73      8d004c         sta 0x4c00                  ; store accumulator in memory
  |||||||   0x00008e76      02             hlt
  |||||||   0x00008e77      954c           sta 0x4c,x                  ; store accumulator in memory
  |||||||   0x00008e79      1a             nop                         ; no operation
  |||||||   0x00008e7a      834c           sax (0x4c,x)
  |||||||   0x00008e7c      62             hlt
  |||||||   0x00008e7d      834c           sax (0x4c,x)
  |||||||   0x00008e7f      f383           isb (0x83),y
  ========< 0x00008e81      4cac83         jmp 0x83ac                  ; jump to new location
  |||||||   0x00008e84      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008e87      ccefef         cpy 0xefef                  ; compare memory and index y
  |||||||   0x00008e8a      ebad           sbc #0xad                   ; subtract memory from accumulator with borrow
  |||||||   0x00008e8c      00             brk                         ; force break
  |||||||   0x00008e8d      203f4c         jsr 0x4c3f                  ; jump to new location saving return address
  || ||||   0x00008e90      f018           beq 0x514108                ; branch on result zero
  || ||||   0x00008e92      20394c         jsr 0x4c39                  ; jump to new location saving return address
  || ||||   0x00008e95      201e4c         jsr 0x4c1e                  ; jump to new location saving return address
  || ||||   0x00008e98      a204           ldx #0x04                   ; load index x with memory
  ||.-----> 0x00008e9a      ddb28e         cmp 0x8eb2,x                ; compare memory and accumulator
  ========< 0x00008e9d      f00e           beq 0x514108                ; branch on result zero
  |||||||   0x00008e9f      ca             dex                         ; decrement index x by one
  ||`=====< 0x00008ea0      10f8           bpl 0x514108                ; branch on result plus
  || ||||   0x00008ea2      a949           lda #0x49                   ; load accumulator with memory
  || ||||   0x00008ea4      20861d         jsr 0x1d86                  ; jump to new location saving return address
  || ||||   0x00008ea7      2000a7         jsr 0xa700                  ; jump to new location saving return address
  ========< 0x00008eaa      4c7a80         jmp 0x807a                  ; jump to new location
  --------> 0x00008ead      a94c           lda #0x4c                   ; load accumulator with memory
  ||,=====< 0x00008eaf      4ce892         jmp 0x92e8                  ; jump to new location
  |||||||   0x00008eb2      898a           nop #0x8a                   ; no operation
  |||||||   0x00008eb4      a0a4           ldy #0xa4                   ; load index y with memory
  |||||||   0x00008eb6      f8             sed                         ; set decimal mode
  |||||||   0x00008eb7      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008eba      cde9f8         cmp 0xf8e9                  ; compare memory and accumulator
  |||||||   0x00008ebd      a0d2           ldy #0xd2                   ; load index y with memory
  |||||||   0x00008ebf      e5e1           sbc 0xe1                    ; subtract memory from accumulator with borrow
  |||||||   0x00008ec1      e7e5           isb 0xe5
  |||||||   0x00008ec3      eef4f3         inc 0xf3f4                  ; increment memory by one
  |||||||   0x00008ec6      8d00a9         sta 0xa900                  ; store accumulator in memory
  |||||||   0x00008ec9      4d4ce8         eor 0xe84c                  ; "exclusive-or" memory with accumulator
  |||||||   0x00008ecc      92             hlt
  |||||||   0x00008ecd      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008ed0      cee5f7         dec 0xf7e5                  ; decrement memory by one
  |||||||   0x00008ed3      a0cf           ldy #0xcf                   ; load index y with memory
  |||||||   0x00008ed5      f2             hlt
  |||||||   0x00008ed6      e4e5           cpx 0xe5                    ; compare memory and index x
  |||||||   0x00008ed8      f2             hlt
  |||||||   0x00008ed9      8d00a9         sta 0xa900                  ; store accumulator in memory
  |||||||   0x00008edc      4d2086         eor 0x8620                  ; "exclusive-or" memory with accumulator
  |||||||   0x00008edf      1d2003         ora 0x0320,x                ; "or" memory with accumulator
  |||||||   0x00008ee2      a74c           lax 0x4c
  |||||||   0x00008ee4      02             hlt
  |||||||   0x00008ee5      9520           sta 0x20,x                  ; store accumulator in memory
  |||||||   0x00008ee7      00             brk                         ; force break
  |||||||   0x00008ee8      4ccff0         jmp 0xf0cf                  ; jump to new location
  |||||||   0x00008eeb      e5ee           sbc 0xee                    ; subtract memory from accumulator with borrow
  |||||||   0x00008eed      ad0020         lda 0x2000                  ; load accumulator with memory
  |||||||   0x00008ef0      3f4cf0         rla 0xf04c,x
  |||||||   0x00008ef3      4c2039         jmp 0x3920                  ; jump to new location
  |||||||   0x00008ef6      4ca000         jmp 0x00a0                  ; jump to new location
  --------> 0x00008ef9      b9404a         lda 0x4a40,y                ; load accumulator with memory
  |||||||   0x00008efc      c5a9           cmp 0xa9                    ; compare memory and accumulator
  ========< 0x00008efe      d018           bne 0x514108                ; branch on result not zero
  |||||||   0x00008f00      b9604a         lda 0x4a60,y                ; load accumulator with memory
  |||||||   0x00008f03      c5aa           cmp 0xaa                    ; compare memory and accumulator
  ========< 0x00008f05      d011           bne 0x514108                ; branch on result not zero
  |||||||   0x00008f07      b9804a         lda 0x4a80,y                ; load accumulator with memory
  |||||||   0x00008f0a      c509           cmp 0x09                    ; compare memory and accumulator
  ========< 0x00008f0c      d00a           bne 0x514108                ; branch on result not zero
  |||||||   0x00008f0e      b9004a         lda 0x4a00,y                ; load accumulator with memory
  |||||||   0x00008f11      c901           cmp #0x01                   ; compare memory and accumulator
  ========< 0x00008f13      d003           bne 0x514108                ; branch on result not zero
  ========< 0x00008f15      4c208f         jmp 0x8f20                  ; jump to new location
  --------> 0x00008f18      c8             iny                         ; increment index y by one
  |||||||   0x00008f19      c020           cpy #0x20                   ; compare memory and index y
  ========< 0x00008f1b      d0dc           bne 0x514108                ; branch on result not zero
  ========< 0x00008f1d      4c2b8f         jmp 0x8f2b                  ; jump to new location
  --------> 0x00008f20      a953           lda #0x53                   ; load accumulator with memory
  |||||||   0x00008f22      20861d         jsr 0x1d86                  ; jump to new location saving return address
  |||||||   0x00008f25      2006a7         jsr 0xa706                  ; jump to new location saving return address
  ========< 0x00008f28      4c0295         jmp 0x9502                  ; jump to new location
  --------> 0x00008f2b      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008f2e      ceeff4         dec 0xf4ef                  ; decrement memory by one
  |||||||   0x00008f31      e8             inx                         ; increment index x by one
  |||||||   0x00008f32      e9ee           sbc #0xee                   ; subtract memory from accumulator with borrow
  |||||||   0x00008f34      e7a0           isb 0xa0
  |||||||   0x00008f36      f4ef           nop 0xef,x                  ; no operation
  |||||||   0x00008f38      8deff0         sta 0xf0ef                  ; store accumulator in memory
  |||||||   0x00008f3b      e5ee           sbc 0xee                    ; subtract memory from accumulator with borrow
  --------> 0x00008f3d      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x00008f3f      00             brk                         ; force break
  --------> 0x00008f40      4c0295         jmp 0x9502                  ; jump to new location
  |||||||   0x00008f43      20004c         jsr 0x4c00                  ; jump to new location saving return address
  ========< 0x00008f46      d0f5           bne 0x514108                ; branch on result not zero
  |||||||   0x00008f48      f3e8           isb (0xe8),y
  |||||||   0x00008f4a      ad0020         lda 0x2000                  ; load accumulator with memory
  |||||||   0x00008f4d      3f4cd0         rla 0xd04c,x
  ||||||    0x00008f50      034c           slo (0x4c,x)
  |||||||   0x00008f52      02             hlt
  |||||||   0x00008f53      9520           sta 0x20,x                  ; store accumulator in memory
  |||||||   0x00008f55      00             brk                         ; force break
  |||||||   0x00008f56      4cd7ef         jmp 0xefd7                  ; jump to new location
  |||||||   0x00008f59      eea7f4         inc 0xf4a7                  ; increment memory by one
  |||||||   0x00008f5c      a0e2           ldy #0xe2                   ; load index y with memory
  |||||||   0x00008f5e      f5e4           sbc 0xe4,x                  ; subtract memory from accumulator with borrow
  |||||||   0x00008f60      e7e5           isb 0xe5
  |||||||   0x00008f62      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x00008f64      00             brk                         ; force break
  |||||||   0x00008f65      4c0295         jmp 0x9502                  ; jump to new location
  |||||||   0x00008f68      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008f6b      d1f5           cmp (0xf5),y                ; compare memory and accumulator
  |||||||   0x00008f6d      e9f4           sbc #0xf4                   ; subtract memory from accumulator with borrow
  |||||||   0x00008f6f      ba             tsx                         ; transfer stack pointer to index x
  |||||||   0x00008f70      8dd3e1         sta 0xe1d3                  ; store accumulator in memory
  |||||||   0x00008f73      f6e5           inc 0xe5,x                  ; increment memory by one
  |||||||   0x00008f75      a0e7           ldy #0xe7                   ; load index y with memory
  |||||||   0x00008f77      e1ed           sbc (0xed,x)                ; subtract memory from accumulator with borrow
  |||||||   0x00008f79      e5bf           sbc 0xbf                    ; subtract memory from accumulator with borrow
  |||||||   0x00008f7b      a000           ldy #0x00                   ; load index y with memory
  --------> 0x00008f7d      20154c         jsr 0x4c15                  ; jump to new location saving return address
  |||||||   0x00008f80      c9d9           cmp #0xd9                   ; compare memory and accumulator
  ========< 0x00008f82      f00e           beq 0x514108                ; branch on result zero
  |||||||   0x00008f84      c9ce           cmp #0xce                   ; compare memory and accumulator
  ========< 0x00008f86      d0f5           bne 0x514108                ; branch on result not zero
  |||||||   0x00008f88      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008f8b      ceef8d         dec 0x8def                  ; decrement memory by one
  |||||||   0x00008f8e      00             brk                         ; force break
  ========< 0x00008f8f      4c7a80         jmp 0x807a                  ; jump to new location
  --------> 0x00008f92      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008f95      d9e5f3         cmp 0xf3e5,y                ; compare memory and accumulator
  |||||||   0x00008f98      8d00a9         sta 0xa900                  ; store accumulator in memory
  |||||||   0x00008f9b      02             hlt
  |||||||   0x00008f9c      20096c         jsr 0x6c09                  ; jump to new location saving return address
  |||||||   0x00008f9f      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00008fa2      d3e1           dcp (0xe1),y
  |||||||   0x00008fa4      f6e9           inc 0xe9,x                  ; increment memory by one
  |||||||   0x00008fa6      eee7ae         inc 0xaee7                  ; increment memory by one
  |||||||   0x00008fa9      aeae8d         ldx 0x8dae                  ; load index x with memory
  |||||||   0x00008fac      00             brk                         ; force break
  |||||||   0x00008fad      a22f           ldx #0x2f                   ; load index x with memory
  --------> 0x00008faf      b502           lda 0x02,x                  ; load accumulator with memory
  |||||||   0x00008fb1      9d00bc         sta 0xbc00,x                ; store accumulator in memory
  |||||||   0x00008fb4      ca             dex                         ; decrement index x by one
  ========< 0x00008fb5      10f8           bpl 0x514108                ; branch on result plus
  |||||||   0x00008fb7      202d6c         jsr 0x6c2d                  ; jump to new location saving return address
  |||||||   0x00008fba      533a           sre (0x3a),y
  ========< 0x00008fbc      5052           bvc 0x514108                ; branch on overflow clear
  |||||||   0x00008fbe      5459           nop 0x59,x                  ; no operation
  |||||||   0x00008fc0      2e4441         rol 0x4144                  ; rotate one bit left (memory or accumulator)
  |||||||   0x00008fc3      5441           nop 0x41,x                  ; no operation
  |||||||   0x00008fc5      00             brk                         ; force break
  |||||||   0x00008fc6      00             brk                         ; force break
  |||||||   0x00008fc7      bc3000         ldy 0x0030,x                ; load index y with memory
  |||||||   0x00008fca      202d6c         jsr 0x6c2d                  ; jump to new location saving return address
  |||||||   0x00008fcd      533a           sre (0x3a),y
  ========< 0x00008fcf      4c4953         jmp 0x5349                  ; jump to new location
  |||||||   0x00008fd2      5400           nop 0x00,x                  ; no operation
  |||||||   0x00008fd4      00             brk                         ; force break
  |||||||   0x00008fd5      4a             lsr a                       ; shift right one bit (memory or accumulator)
  |||||||   0x00008fd6      00             brk                         ; force break
  |||||||   0x00008fd7      02             hlt
  |||||||   0x00008fd8      a200           ldx #0x00                   ; load index x with memory
  |||||||   0x00008fda      20246c         jsr 0x6c24                  ; jump to new location saving return address
  |||||||   0x00008fdd      544c           nop 0x4c,x                  ; TLIST
  |||||||   0x00008fdf      4953           eor #0x53                   
  |||||||   0x00008fe1      5400           nop 0x00,x                  
  |||||||   0x00008fe3      202d6c         jsr 0x6c2d                  ; jump to new location saving return address
  |||||||   0x00008fe6      533a           sre (0x3a),y
  |||||||   0x00008fe8      534c           sre (0x4c),y
  |||||||   0x00008fea      4953           eor #0x53                   ; "exclusive-or" memory with accumulator
  |||||||   0x00008fec      5400           nop 0x00,x                  ; no operation
  |||||||   0x00008fee      00             brk                         ; force break
  |||||||   0x00008fef      4a             lsr a                       ; shift right one bit (memory or accumulator)
  |||||||   0x00008ff0      00             brk                         ; force break
  |||||||   0x00008ff1      02             hlt
  |||||||   0x00008ff2      a200           ldx #0x00                   ; load index x with memory
  |||||||   0x00008ff4      20246c         jsr 0x6c24                  ; jump to new location saving return address
  ========< 0x00008ff7      4c4953         jmp 0x5349                  ; LIST
  |||||||   0x00008ffa      5400           nop 0x00,x                  
  |||||||   0x00008ffc      202d6c         jsr 0x6c2d                  ; jump to new location saving return address
  |||||||   0x00008fff      533a           sre (0x3a),y
  |||||||   0x00009001      52             hlt
  |||||||   0x00009002      4f5354         sre 0x5453
  |||||||   0x00009005      4552           eor 0x52                    ; "exclusive-or" memory with accumulator
  |||||||   0x00009007      00             brk                         ; force break
  |||||||   0x00009008      00             brk                         ; force break
  ========< 0x00009009      1000           bpl 0x514108                ; branch on result plus
  --------> 0x0000900b      0420           nop 0x20                    ; no operation
  |||||||   0x0000900d      00             brk                         ; force break
  |||||||   0x0000900e      4cc4ef         jmp 0xefc4                  ; jump to new location
  |||||||   0x00009011      eee5ae         inc 0xaee5                  ; increment memory by one
  |||||||   0x00009014      8d00a5         sta 0xa500                  ; store accumulator in memory
  |||||||   0x00009017      09f0           ora #0xf0                   ; "or" memory with accumulator
  |||||||   0x00009019      05a9           ora 0xa9                    ; "or" memory with accumulator
  |||||||   0x0000901b      08             php                         ; push processor status on stack
  |||||||   0x0000901c      20096c         jsr 0x6c09                  ; jump to new location saving return address
  ========< 0x0000901f      4c7a80         jmp 0x807a                  ; jump to new location
  |||||||   0x00009022      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00009025      d2             hlt
  |||||||   0x00009026      e5e1           sbc 0xe1                    ; subtract memory from accumulator with borrow
  |||||||   0x00009028      e4f9           cpx 0xf9                    ; compare memory and index x
  |||||||   0x0000902a      aeaeae         ldx 0xaeae                  ; load index x with memory
  |||||||   0x0000902d      8d00a9         sta 0xa900                  ; store accumulator in memory
  |||||||   0x00009030      52             hlt
  ========< 0x00009031      4ce892         jmp 0x92e8                  ; jump to new location
  |||||||   0x00009034      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00009037      d3e5           dcp (0xe5),y
  |||||||   0x00009039      e1f2           sbc (0xf2,x)                ; subtract memory from accumulator with borrow
  |||||||   0x0000903b      e3e8           isb (0xe8,x)
  |||||||   0x0000903d      ad0020         lda 0x2000                  ; load accumulator with memory
  |||||||   0x00009040      3f4cf0         rla 0xf04c,x
  ||||| |   0x00009043      05a9           ora 0xa9                    ; "or" memory with accumulator
  ||||| |   0x00009045      534c           sre (0x4c),y
  |||||||   0x00009047      e8             inx                         ; increment index x by one
  |||||||   0x00009048      92             hlt
  ========< 0x00009049      4c0295         jmp 0x9502                  ; jump to new location
  |||||||   0x0000904c      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x0000904f      d4e1           nop 0xe1,x                  ; no operation
  |||||||   0x00009051      ecebad         cpx 0xadeb                  ; compare memory and index x
  |||||||   0x00009054      00             brk                         ; force break
  |||||||   0x00009055      203f4c         jsr 0x4c3f                  ; jump to new location saving return address
  ||| |||   0x00009058      f018           beq 0x514108                ; branch on result zero
  ||| |||   0x0000905a      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x0000905d      c6f5           dec 0xf5                    ; decrement memory by one
  |||||||   0x0000905f      eeeef9         inc 0xf9ee                  ; increment memory by one
  |||||||   0x00009062      aca0ee         ldy 0xeea0                  ; load index y with memory
  |||||||   0x00009065      ef8df2         isb 0xf28d
  |||||||   0x00009068      e5f3           sbc 0xf3                    ; subtract memory from accumulator with borrow
  |||`====< 0x0000906a      f0ef           beq 0x514108                ; branch on result zero
  ||| |||   0x0000906c      eef3e5         inc 0xe5f3                  ; increment memory by one
  ||| |||   0x0000906f      a18d           lda (0x8d,x)                ; load accumulator with memory
  ||| |||   0x00009071      00             brk                         ; force break
  |||,====< 0x00009072      4c0295         jmp 0x9502                  ; jump to new location
  |||||||   0x00009075      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00009078      d5f3           cmp 0xf3,x                  ; compare memory and accumulator
  |||||||   0x0000907a      e5a0           sbc 0xa0                    ; subtract memory from accumulator with borrow
  |||||||   0x0000907c      e9f4           sbc #0xf4                   ; subtract memory from accumulator with borrow
  |||||||   0x0000907e      e5ed           sbc 0xed                    ; subtract memory from accumulator with borrow
  |||||||   0x00009080      8d00a9         sta 0xa900                  ; store accumulator in memory
  |||||||   0x00009083      554c           eor 0x4c,x                  ; "exclusive-or" memory with accumulator
  |||||||   0x00009085      e8             inx                         ; increment index x by one
  |||||||   0x00009086      92             hlt
  |||||||   0x00009087      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x0000908a      d6e9           dec 0xe9,x                  ; decrement memory by one
  |||||||   0x0000908c      e5f7           sbc 0xf7                    ; subtract memory from accumulator with borrow
  |||||||   0x0000908e      a0e1           ldy #0xe1                   ; load index y with memory
  |||||||   0x00009090      a0e7           ldy #0xe7                   ; load index y with memory
  |||||||   0x00009092      e5ed           sbc 0xed                    ; subtract memory from accumulator with borrow
  |||||||   0x00009094      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x00009096      00             brk                         ; force break
  |||||||   0x00009097      ad8511         lda 0x1185                  ; load accumulator with memory
  ========< 0x0000909a      d016           bne 0x514108                ; branch on result not zero
  |||||||   0x0000909c      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x0000909f      d9eff5         cmp 0xf5ef,y                ; compare memory and accumulator
  |||||||   0x000090a2      a0e8           ldy #0xe8                   ; load index y with memory
  |||||||   0x000090a4      e1f6           sbc (0xf6,x)                ; subtract memory from accumulator with borrow
  |||||||   0x000090a6      e5a0           sbc 0xa0                    ; subtract memory from accumulator with borrow
  |||||||   0x000090a8      eeefee         inc 0xeeef                  ; increment memory by one
  |||||||   0x000090ab      e5a1           sbc 0xa1                    ; subtract memory from accumulator with borrow
  |||||||   0x000090ad      8d004c         sta 0x4c00                  ; store accumulator in memory
  |||||||   0x000090b0      02             hlt
  |||||||   0x000090b1      95f8           sta 0xf8,x                  ; store accumulator in memory
  |||||||   0x000090b3      ad8511         lda 0x1185                  ; load accumulator with memory
  |||||||   0x000090b6      38             sec                         ; set carry flag
  |||||||   0x000090b7      e901           sbc #0x01                   ; subtract memory from accumulator with borrow
  |||||||   0x000090b9      8d8511         sta 0x1185                  ; store accumulator in memory
  |||||||   0x000090bc      d8             cld                         ; clear decimal mode
  |||||||   0x000090bd      a956           lda #0x56                   ; load accumulator with memory
  ========< 0x000090bf      4ce892         jmp 0x92e8                  ; jump to new location
  |||||||   0x000090c2      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000090c5      d8             cld                         ; clear decimal mode
  |||||||   0x000090c6      ade9f4         lda 0xf4e9                  ; load accumulator with memory
  |||||||   0x000090c9      a000           ldy #0x00                   ; load index y with memory
  |||||||   0x000090cb      a60c           ldx 0x0c                    ; load index x with memory
  |||||||   0x000090cd      8a             txa                         ; transfer index x to accumulator
  |||||||   0x000090ce      29fc           and #0xfc                   ; "and" memory with accumulator
  |||||||   0x000090d0      c920           cmp #0x20                   ; compare memory and accumulator
  ========< 0x000090d2      f011           beq 0x514108                ; branch on result zero
  |||||||   0x000090d4      c91c           cmp #0x1c                   ; compare memory and accumulator
  ========< 0x000090d6      d051           bne 0x514108                ; branch on result not zero
  |||||||   0x000090d8      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000090db      f7e8           isb 0xe8,x
  |||||||   0x000090dd      e1f4           sbc (0xf4,x)                ; subtract memory from accumulator with borrow
  |||||||   0x000090df      bf8d00         lax 0x008d,y
  |||||||   0x000090e2      4c7a80         jmp 0x807a                  ; jump to new location
  --------> 0x000090e5      20064c         jsr 0x4c06                  ; jump to new location saving return address
  |||||||   0x000090e8      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000090eb      d5ee           cmp 0xee,x                  ; compare memory and accumulator
  |||||||   0x000090ed      e4e5           cpx 0xe5                    ; compare memory and index x
  |||||||   0x000090ef      f2             hlt
  |||||||   0x000090f0      a0f3           ldy #0xf3                   ; load index y with memory
  |||||||   0x000090f2      e1e9           sbc (0xe9,x)                ; subtract memory from accumulator with borrow
  |||||||   0x000090f4      eca18d         cpx 0x8da1                  ; compare memory and index x
  |||||||   0x000090f7      00             brk                         ; force break
  ========< 0x000090f8      4c0295         jmp 0x9502                  ; jump to new location
  --------> 0x000090fb      20064c         jsr 0x4c06                  ; jump to new location saving return address
  |||||||   0x000090fe      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00009101      ceefa0         dec 0xa0ef                  ; decrement memory by one
  |||||||   0x00009104      ece1ee         cpx 0xeee1                  ; compare memory and index x
  |||||||   0x00009107      e4a0           cpx 0xa0                    ; compare memory and index x
  |||||||   0x00009109      eee5e1         inc 0xe1e5                  ; increment memory by one
  |||||||   0x0000910c      f2             hlt
  |||||||   0x0000910d      e2f9           nop #0xf9                   ; no operation
  |||||||   0x0000910f      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x00009111      00             brk                         ; force break
  ========< 0x00009112      4c0295         jmp 0x9502                  ; jump to new location
  --------> 0x00009115      20064c         jsr 0x4c06                  ; jump to new location saving return address
  --------> 0x00009118      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x0000911b      ceeff4         dec 0xf4ef                  ; decrement memory by one
  |||||||   0x0000911e      a0e8           ldy #0xe8                   ; load index y with memory
  |||||||   0x00009120      e5f2           sbc 0xf2                    ; subtract memory from accumulator with borrow
  |||||||   0x00009122      e5a1           sbc 0xa1                    ; subtract memory from accumulator with borrow
  |||||||   0x00009124      8d004c         sta 0x4c00                  ; store accumulator in memory
  |||||||   0x00009127      02             hlt
  |||||||   0x00009128      95c9           sta 0xc9,x                  ; store accumulator in memory
  --------> 0x0000912a      14d0           nop 0xd0,x                  ; no operation
  |||||||   0x0000912c      2120           and (0x20,x)                ; "and" memory with accumulator
  |||||||   0x0000912e      5c96aa         nop 0xaa96,x                ; no operation
  |||||||   0x00009131      a91c           lda #0x1c                   ; load accumulator with memory
  |||||||   0x00009133      20784c         jsr 0x4c78                  ; jump to new location saving return address
  ========< 0x00009136      b005           bcs 0x514108                ; branch on carry set
  |||||||   0x00009138      207596         jsr 0x9675                  ; jump to new location saving return address
  ========< 0x0000913b      90be           bcc 0x514108                ; branch on carry clear
  --------> 0x0000913d      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00009140      e3e1           isb (0xe1,x)
  |||||||   0x00009142      f2             hlt
  ========< 0x00009143      f0e5           beq 0x514108                ; branch on result zero
  |||||||   0x00009145      f4a1           nop 0xa1,x                  ; no operation
  |||||||   0x00009147      8d00a2         sta 0xa200                  ; store accumulator in memory
  |||||||   0x0000914a      1b4c0b         slo 0x0b4c,y
  |||||||   0x0000914d      92             hlt
  --------> 0x0000914e      c910           cmp #0x10                   ; compare memory and accumulator
  ========< 0x00009150      d010           bne 0x514108                ; branch on result not zero
  |||||||   0x00009152      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00009155      e8             inx                         ; increment index x by one
  |||||||   0x00009156      eff2f3         isb 0xf3f2
  |||||||   0x00009159      e5a1           sbc 0xa1                    ; subtract memory from accumulator with borrow
  |||||||   0x0000915b      8d00ca         sta 0xca00                  ; store accumulator in memory
  |||||||   0x0000915e      ca             dex                         ; decrement index x by one
  ========< 0x0000915f      4c0b92         jmp 0x920b                  ; jump to new location
  --------> 0x00009162      c928           cmp #0x28                   ; compare memory and accumulator
  ========< 0x00009164      d023           bne 0x514108                ; branch on result not zero
  |||||||   0x00009166      205c96         jsr 0x965c                  ; jump to new location saving return address
  |||||||   0x00009169      4a             lsr a                       ; shift right one bit (memory or accumulator)
  |||||||   0x0000916a      c935           cmp #0x35                   ; compare memory and accumulator
  ========< 0x0000916c      f0a7           beq 0x514108                ; branch on result zero
  |||||||   0x0000916e      207596         jsr 0x9675                  ; jump to new location saving return address
  ========< 0x00009171      9088           bcc 0x514108                ; branch on carry clear
  |||||||   0x00009173      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00009176      f3eb           isb (0xeb),y
  |||||||   0x00009178      e9e6           sbc #0xe6                   ; subtract memory from accumulator with borrow
  |||||||   0x0000917a      e6a1           inc 0xa1                    ; increment memory by one
  |||||||   0x0000917c      8d00ad         sta 0xad00                  ; store accumulator in memory
  |||||||   0x0000917f      cd0320         cmp 0x2003                  ; compare memory and accumulator
  |||||||   0x00009182      466c           lsr 0x6c                    ; shift right one bit (memory or accumulator)
  |||||||   0x00009184      a60c           ldx 0x0c                    ; load index x with memory
  ========< 0x00009186      4c0b92         jmp 0x920b                  ; jump to new location
  --------> 0x00009189      c924           cmp #0x24                   ; compare memory and accumulator
  ========< 0x0000918b      f003           beq 0x514108                ; branch on result zero
  ========< 0x0000918d      4c0892         jmp 0x9208                  ; jump to new location
  --------> 0x00009190      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00009193      f3e8           isb (0xe8),y
  |||||||   0x00009195      e9f0           sbc #0xf0                   ; subtract memory from accumulator with borrow
  |||||||   0x00009197      a18d           lda (0x8d,x)                ; load accumulator with memory
  |||||||   0x00009199      00             brk                         ; force break
  |||||||   0x0000919a      207596         jsr 0x9675                  ; jump to new location saving return address
  ========< 0x0000919d      b04d           bcs 0x514108                ; branch on carry set
  |||||||   0x0000919f      a517           lda 0x17                    ; load accumulator with memory
  ========< 0x000091a1      d01b           bne 0x514108                ; branch on result not zero
  |||||||   0x000091a3      ad8811         lda 0x1188                  ; load accumulator with memory
  ========< 0x000091a6      d003           bne 0x514108                ; branch on result not zero
  ========< 0x000091a8      4c4392         jmp 0x9243                  ; jump to new location
  --------> 0x000091ab      f8             sed                         ; set decimal mode
  |||||||   0x000091ac      38             sec                         ; set carry flag
  |||||||   0x000091ad      e901           sbc #0x01                   ; subtract memory from accumulator with borrow
  |||||||   0x000091af      d8             cld                         ; clear decimal mode
  |||||||   0x000091b0      8d8811         sta 0x1188                  ; store accumulator in memory
  |||||||   0x000091b3      a60c           ldx 0x0c                    ; load index x with memory
  |||||||   0x000091b5      206192         jsr 0x9261                  ; jump to new location saving return address
  |||||||   0x000091b8      a914           lda #0x14                   ; load accumulator with memory
  |||||||   0x000091ba      850c           sta 0x0c                    ; store accumulator in memory
  ========< 0x000091bc      d013           bne 0x514108                ; branch on result not zero
  --------> 0x000091be      a50c           lda 0x0c                    ; load accumulator with memory
  |||||||   0x000091c0      aa             tax                         ; transfer accumulator to index x
  |||||||   0x000091c1      18             clc                         ; clear carry flag
  |||||||   0x000091c2      6904           adc #0x04                   ; add memory to accumulator with carry
  |||||||   0x000091c4      850c           sta 0x0c                    ; store accumulator in memory
  |||||||   0x000091c6      206192         jsr 0x9261                  ; jump to new location saving return address
  |||||||   0x000091c9      a517           lda 0x17                    ; load accumulator with memory
  |||||||   0x000091cb      38             sec                         ; set carry flag
  |||||||   0x000091cc      e901           sbc #0x01                   ; subtract memory from accumulator with borrow
  |||||||   0x000091ce      9de04a         sta 0x4ae0,x                ; store accumulator in memory
  --------> 0x000091d1      a900           lda #0x00                   ; load accumulator with memory
  |||||||   0x000091d3      8517           sta 0x17                    ; store accumulator in memory
  |||||||   0x000091d5      8dd582         sta 0x82d5                  ; store accumulator in memory
  |||||||   0x000091d8      8d0781         sta 0x8107                  ; store accumulator in memory
  |||||||   0x000091db      adcd03         lda 0x03cd                  ; load accumulator with memory
  |||||||   0x000091de      20466c         jsr 0x6c46                  ; jump to new location saving return address
  |||||||   0x000091e1      adc04a         lda 0x4ac0                  ; load accumulator with memory
  |||||||   0x000091e4      9dc04a         sta 0x4ac0,x                ; store accumulator in memory
  |||||||   0x000091e7      e680           inc 0x80                    ; increment memory by one
  ========< 0x000091e9      4c0295         jmp 0x9502                  ; jump to new location
  --------> 0x000091ec      a60c           ldx 0x0c                    ; load index x with memory
  |||||||   0x000091ee      206192         jsr 0x9261                  ; jump to new location saving return address
  |||||||   0x000091f1      adcd03         lda 0x03cd                  ; load accumulator with memory
  |||||||   0x000091f4      20466c         jsr 0x6c46                  ; jump to new location saving return address
  |||||||   0x000091f7      a517           lda 0x17                    ; load accumulator with memory
  |||||||   0x000091f9      9de04a         sta 0x4ae0,x                ; store accumulator in memory
  |||||||   0x000091fc      adc04a         lda 0x4ac0                  ; load accumulator with memory
  |||||||   0x000091ff      9dc04a         sta 0x4ac0,x                ; store accumulator in memory
  |||||||   0x00009202      a900           lda #0x00                   ; load accumulator with memory
  |||||||   0x00009204      8517           sta 0x17                    ; store accumulator in memory
  ========< 0x00009206      f02c           beq 0x514108                ; branch on result zero
  --------> 0x00009208      20064c         jsr 0x4c06                  ; jump to new location saving return address
  --------> 0x0000920b      a01f           ldy #0x1f                   ; load index y with memory
  --------> 0x0000920d      b9404a         lda 0x4a40,y                ; load accumulator with memory
  |||||||   0x00009210      c52d           cmp 0x2d                    ; compare memory and accumulator
  ========< 0x00009212      d01a           bne 0x514108                ; branch on result not zero
  |||||||   0x00009214      b9604a         lda 0x4a60,y                ; load accumulator with memory
  |||||||   0x00009217      c52e           cmp 0x2e                    ; compare memory and accumulator
  ========< 0x00009219      d013           bne 0x514108                ; branch on result not zero
  |||||||   0x0000921b      b9804a         lda 0x4a80,y                ; load accumulator with memory
  |||||||   0x0000921e      c509           cmp 0x09                    ; compare memory and accumulator
  ========< 0x00009220      d00c           bne 0x514108                ; branch on result not zero
  |||||||   0x00009222      b9004a         lda 0x4a00,y                ; load accumulator with memory
  ========< 0x00009225      f007           beq 0x514108                ; branch on result zero
  |||||||   0x00009227      c50c           cmp 0x0c                    ; compare memory and accumulator
  ========< 0x00009229      f003           beq 0x514108                ; branch on result zero
  ========< 0x0000922b      4c1891         jmp 0x9118                  ; jump to new location
  --------> 0x0000922e      88             dey                         ; decrement index y by one
  ========< 0x0000922f      10dc           bpl 0x514108                ; branch on result plus
  |||||||   0x00009231      206192         jsr 0x9261                  ; jump to new location saving return address
  --------> 0x00009234      a91c           lda #0x1c                   ; load accumulator with memory
  |||||||   0x00009236      850c           sta 0x0c                    ; store accumulator in memory
  |||||||   0x00009238      8d0781         sta 0x8107                  ; store accumulator in memory
  |||||||   0x0000923b      8dd582         sta 0x82d5                  ; store accumulator in memory
  |||||||   0x0000923e      e680           inc 0x80                    ; increment memory by one
  ========< 0x00009240      4c0295         jmp 0x9502                  ; jump to new location
  --------> 0x00009243      20064c         jsr 0x4c06                  ; jump to new location saving return address
  |||||||   0x00009246      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00009249      ceefa0         dec 0xa0ef                  ; decrement memory by one
  |||||||   0x0000924c      f3eb           isb (0xeb),y
  |||||||   0x0000924e      e9e6           sbc #0xe6                   ; subtract memory from accumulator with borrow
  |||||||   0x00009250      e6f3           inc 0xf3                    ; increment memory by one
  |||||||   0x00009252      a0ef           ldy #0xef                   ; load index y with memory
  |||||||   0x00009254      ee8de2         inc 0xe28d                  ; increment memory by one
  |||||||   0x00009257      efe1f2         isb 0xf2e1
  |||||||   0x0000925a      e4a1           cpx 0xa1                    ; compare memory and index x
  |||||||   0x0000925c      8d004c         sta 0x4c00                  ; store accumulator in memory
  |||||||   0x0000925f      02             hlt
  |||||||   0x00009260      958e           sta 0x8e,x                  ; store accumulator in memory
  ========< 0x00009262      7092           bvs 0x514108                ; branch on overflow set
  |||||||   0x00009264      20484c         jsr 0x4c48                  ; jump to new location saving return address
  |||||||   0x00009267      adf411         lda 0x11f4                  ; load accumulator with memory
  |||||||   0x0000926a      297f           and #0x7f                   ; "and" memory with accumulator
  |||||||   0x0000926c      8df411         sta 0x11f4                  ; store accumulator in memory
  |||||||   0x0000926f      a900           lda #0x00                   ; load accumulator with memory
  |||||||   0x00009271      9d004a         sta 0x4a00,x                ; store accumulator in memory
  |||||||   0x00009274      9d204a         sta 0x4a20,x                ; store accumulator in memory
  |||||||   0x00009277      a509           lda 0x09                    ; load accumulator with memory
  |||||||   0x00009279      9d804a         sta 0x4a80,x                ; store accumulator in memory
  |||||||   0x0000927c      a52d           lda 0x2d                    ; load accumulator with memory
  |||||||   0x0000927e      9d404a         sta 0x4a40,x                ; store accumulator in memory
  |||||||   0x00009281      a52e           lda 0x2e                    ; load accumulator with memory
  |||||||   0x00009283      9d604a         sta 0x4a60,x                ; store accumulator in memory
  |||||||   0x00009286      60             rts                         ; return from subroutine
  |||||||   0x00009287      00             brk                         ; force break
  |||||||   0x00009288      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x0000928b      d9e5ec         cmp 0xece5,y                ; compare memory and accumulator
  |||||||   0x0000928e      eca000         cpx 0x00a0                  ; compare memory and index x
  |||||||   0x00009291      a50c           lda 0x0c                    ; load accumulator with memory
  |||||||   0x00009293      29fc           and #0xfc                   ; "and" memory with accumulator
  |||||||   0x00009295      aa             tax                         ; transfer accumulator to index x
  |||||||   0x00009296      29f8           and #0xf8                   ; "and" memory with accumulator
  |||||||   0x00009298      c920           cmp #0x20                   ; compare memory and accumulator
  ========< 0x0000929a      f00b           beq 0x514108                ; branch on result zero
  |||||||   0x0000929c      a945           lda #0x45                   ; load accumulator with memory
  |||||||   0x0000929e      20861d         jsr 0x1d86                  ; jump to new location saving return address
  |||||||   0x000092a1      2003a7         jsr 0xa703                  ; jump to new location saving return address
  ========< 0x000092a4      4c0295         jmp 0x9502                  ; jump to new location
  --------> 0x000092a7      e020           cpx #0x20                   ; compare memory and index x
  ========< 0x000092a9      f015           beq 0x514108                ; branch on result zero
  |||||||   0x000092ab      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000092ae      c8             iny                         ; increment index y by one
  |||||||   0x000092af      cfc9d3         dcp 0xd3c9
  |||||||   0x000092b2      d4a1           nop 0xa1,x                  ; no operation
  |||||||   0x000092b4      8d00a5         sta 0xa500                  ; store accumulator in memory
  |||||||   0x000092b7      0c38e9         nop 0xe938                  ; no operation
  |||||||   0x000092ba      0485           nop 0x85                    ; no operation
  |||||||   0x000092bc      0c4c02         nop 0x024c                  ; no operation
  |||||||   0x000092bf      9520           sta 0x20,x                  ; store accumulator in memory
  |||||||   0x000092c1      00             brk                         ; force break
  |||||||   0x000092c2      4cc6d5         jmp 0xd5c6                  ; jump to new location
  |||||||   0x000092c5      d2             hlt
  |||||||   0x000092c6      cca18d         cpy 0x8da1                  ; compare memory and index y
  |||||||   0x000092c9      00             brk                         ; force break
  --------> 0x000092ca      a50c           lda 0x0c                    ; load accumulator with memory
  |||||||   0x000092cc      18             clc                         ; clear carry flag
  |||||||   0x000092cd      6904           adc #0x04                   ; add memory to accumulator with carry
  |||||||   0x000092cf      850c           sta 0x0c                    ; store accumulator in memory
  |||||||   0x000092d1      8d0781         sta 0x8107                  ; store accumulator in memory
  ========< 0x000092d4      4c0295         jmp 0x9502                  ; jump to new location
  |||||||   0x000092d7      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000092da      da             nop                         ; no operation
  |||||||   0x000092db      adf3f4         lda 0xf4f3                  ; load accumulator with memory
  |||||||   0x000092de      e1f4           sbc (0xf4,x)                ; subtract memory from accumulator with borrow
  |||||||   0x000092e0      f3ae           isb (0xae),y
  |||||||   0x000092e2      aeae8d         ldx 0x8dae                  ; load index x with memory
  |||||||   0x000092e5      00             brk                         ; force break
  |||||||   0x000092e6      a95a           lda #0x5a                   ; load accumulator with memory
  --`--`--> 0x000092e8      20861d         jsr 0x1d86                  ; jump to new location saving return address
  || || |   0x000092eb      2000a7         jsr 0xa700                  ; jump to new location saving return address
  || ||,==< 0x000092ee      4c0295         jmp 0x9502                  ; jump to new location
  || ||||   0x000092f1      8c0693         sty 0x9306                  ; store index y in memory
  || ||||   0x000092f4      20574c         jsr 0x4c57                  ; jump to new location saving return address
  || ||||   0x000092f7      18             clc                         ; clear carry flag
  || ||||   0x000092f8      6901           adc #0x01                   ; add memory to accumulator with carry
  || ||||   0x000092fa      8d0493         sta 0x9304                  ; store accumulator in memory
  || ||||   0x000092fd      20724c         jsr 0x4c72                  ; jump to new location saving return address
  || ||||   0x00009300      ac0693         ldy 0x9306                  ; load index y with memory
  || ||||   0x00009303      c9ff           cmp #0xff                   ; compare memory and accumulator
  || ||||   0x00009305      60             rts                         ; return from subroutine
  || ||||   0x00009306      00             brk                         ; force break
  || ||||   0x00009307      a90a           lda #0x0a                   ; load accumulator with memory
  ||.-----> 0x00009309      48             pha                         ; push accumulator on stack
  |||||||   0x0000930a      201b4c         jsr 0x4c1b                  ; jump to new location saving return address
  |||||||   0x0000930d      68             pla                         ; pull accumulator from stack
  |||||||   0x0000930e      e901           sbc #0x01                   ; subtract memory from accumulator with borrow
  ||`=====< 0x00009310      b0f7           bcs 0x514108                ; branch on carry set
  || ||||   0x00009312      60             rts                         ; return from subroutine
  || ||||   0x00009313      00             brk                         ; force break
  || ||||   0x00009314      ad1393         lda 0x9313                  ; load accumulator with memory
  ||,=====< 0x00009317      3007           bmi 0x514108                ; branch on result minus
  |||||||   0x00009319      20274c         jsr 0x4c27                  ; jump to new location saving return address
  |||||||   0x0000931c      2907           and #0x07                   ; "and" memory with accumulator
  ========< 0x0000931e      f004           beq 0x514108                ; branch on result zero
  --`-----> 0x00009320      4e1393         lsr 0x9313                  ; shift right one bit (memory or accumulator)
  |||||||   0x00009323      60             rts                         ; return from subroutine
  --------> 0x00009324      a50c           lda 0x0c                    ; load accumulator with memory
  |||||||   0x00009326      c91c           cmp #0x1c                   ; compare memory and accumulator
  ========< 0x00009328      d0f6           bne 0x514108                ; branch on result not zero
  |||||||   0x0000932a      201b4c         jsr 0x4c1b                  ; jump to new location saving return address
  |||||||   0x0000932d      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00009330      8dd4e8         sta 0xe8d4                  ; store accumulator in memory
  |||||||   0x00009333      eff5a0         isb 0xa0f5
  |||||||   0x00009336      f3f0           isb (0xf0),y
  || ||||   0x00009338      e9e5           sbc #0xe5                   ; subtract memory from accumulator with borrow
  || ||||   0x0000933a      f4e8           nop 0xe8,x                  ; no operation
  || ||||   0x0000933c      8df4f2         sta 0xf2f4                  ; store accumulator in memory
  || ||||   0x0000933f      efecec         isb 0xecec
  || ||||   0x00009342      f3a0           isb (0xa0),y
  || ||||   0x00009344      f5ee           sbc 0xee,x                  ; subtract memory from accumulator with borrow
  || ||||   0x00009346      e4e5           cpx 0xe5                    ; compare memory and index x
  || ||||   0x00009348      f2             hlt
  || ||||   0x00009349      8df4e8         sta 0xe8f4                  ; store accumulator in memory
  || ||||   0x0000934c      e5a0           sbc 0xa0                    ; subtract memory from accumulator with borrow
  || ||||   0x0000934e      e2f2           nop #0xf2                   ; no operation
  || ||||   0x00009350      e9e4           sbc #0xe4                   ; subtract memory from accumulator with borrow
  || ||||   0x00009352      e7e5           isb 0xe5
  || ||||   0x00009354      a18d           lda (0x8d,x)                ; load accumulator with memory
  || ||||   0x00009356      00             brk                         ; force break
  || ||||   0x00009357      200793         jsr 0x9307                  ; jump to new location saving return address
  || ||||   0x0000935a      a900           lda #0x00                   ; load accumulator with memory
  || ||||   0x0000935c      8de093         sta 0x93e0                  ; store accumulator in memory
  ||.-----> 0x0000935f      ade093         lda 0x93e0                  ; load accumulator with memory
  |||||||   0x00009362      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x00009363      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x00009364      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x00009365      8de193         sta 0x93e1                  ; store accumulator in memory
  |||||||   0x00009368      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x00009369      aa             tax                         ; transfer accumulator to index x
  |||||||   0x0000936a      bd8010         lda 0x1080,x                ; load accumulator with memory
  ========< 0x0000936d      d04e           bne 0x514108                ; branch on result not zero
  |||||||   0x0000936f      bd8310         lda 0x1083,x                ; load accumulator with memory
  |||||||   0x00009372      c9c4           cmp #0xc4                   ; compare memory and accumulator
  ========< 0x00009374      f047           beq 0x514108                ; branch on result zero
  |||||||   0x00009376      c9d3           cmp #0xd3                   ; compare memory and accumulator
  ========< 0x00009378      f043           beq 0x514108                ; branch on result zero
  |||||||   0x0000937a      20064c         jsr 0x4c06                  ; jump to new location saving return address
  |||||||   0x0000937d      ace193         ldy 0x93e1                  ; load index y with memory
  --------> 0x00009380      b90010         lda 0x1000,y                ; load accumulator with memory
  ========< 0x00009383      1007           bpl 0x514108                ; branch on result plus
  |||||||   0x00009385      20034c         jsr 0x4c03                  ; jump to new location saving return address
  |||||||   0x00009388      c8             iny                         ; increment index y by one
  ========< 0x00009389      4c8093         jmp 0x9380                  ; jump to new location
  --------> 0x0000938c      0980           ora #0x80                   ; "or" memory with accumulator
  |||||||   0x0000938e      20034c         jsr 0x4c03                  ; jump to new location saving return address
  |||||||   0x00009391      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x00009394      a0f3           ldy #0xf3                   ; load index y with memory
  |||||||   0x00009396      eee5e1         inc 0xe1e5                  ; increment memory by one
  |||||||   0x00009399      ebf3           sbc #0xf3                   ; subtract memory from accumulator with borrow
  |||||||   0x0000939b      8de1e3         sta 0xe3e1                  ; store accumulator in memory
  |||||||   0x0000939e      f2             hlt
  |||||||   0x0000939f      eff3f3         isb 0xf3f3
  |||||||   0x000093a2      00             brk                         ; force break
  |||||||   0x000093a3      a203           ldx #0x03                   ; load index x with memory
  --------> 0x000093a5      200793         jsr 0x9307                  ; jump to new location saving return address
  |||||||   0x000093a8      a9ae           lda #0xae                   ; load accumulator with memory
  |||||||   0x000093aa      20034c         jsr 0x4c03                  ; jump to new location saving return address
  |||||||   0x000093ad      ca             dex                         ; decrement index x by one
  ========< 0x000093ae      d0f5           bne 0x514108                ; branch on result not zero
  |||||||   0x000093b0      ade193         lda 0x93e1                  ; load accumulator with memory
  |||||||   0x000093b3      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x000093b4      a8             tay                         ; transfer accumulator to index y
  |||||||   0x000093b5      b98510         lda 0x1085,y                ; load accumulator with memory
  |||||||   0x000093b8      20f192         jsr 0x92f1                  ; jump to new location saving return address
  ========< 0x000093bb      b025           bcs 0x514108                ; branch on carry set
  --------> 0x000093bd      eee093         inc 0x93e0                  ; increment memory by one
  |||||||   0x000093c0      ade093         lda 0x93e0                  ; load accumulator with memory
  |||||||   0x000093c3      c906           cmp #0x06                   ; compare memory and accumulator
  ========< 0x000093c5      f003           beq 0x514108                ; branch on result zero
  --`=====< 0x000093c7      4c5f93         jmp 0x935f                  ; jump to new location
  --------> 0x000093ca      20004c         jsr 0x4c00                  ; jump to new location saving return address
  || ||||   0x000093cd      8d8dd4         sta 0xd48d                  ; store accumulator in memory
  || ||||   0x000093d0      f2             hlt
  || ||||   0x000093d1      efecec         isb 0xecec
  || ||||   0x000093d4      f3a0           isb (0xa0),y
  || ||||   0x000093d6      e5f6           sbc 0xf6                    ; subtract memory from accumulator with borrow
  || ||||   0x000093d8      e1e4           sbc (0xe4,x)                ; subtract memory from accumulator with borrow
  || ||||   0x000093da      e5e4           sbc 0xe4                    ; subtract memory from accumulator with borrow
  || ||||   0x000093dc      a18d           lda (0x8d,x)                ; load accumulator with memory
  || ||||   0x000093de      00             brk                         ; force break
  || ||||   0x000093df      60             rts                         ; return from subroutine
  || ||||   0x000093e0      00             brk                         ; force break
  || ||||   0x000093e1      00             brk                         ; force break
  --------> 0x000093e2      20064c         jsr 0x4c06                  ; jump to new location saving return address
  || ||||   0x000093e5      20064c         jsr 0x4c06                  ; jump to new location saving return address
  || ||||   0x000093e8      20004c         jsr 0x4c00                  ; jump to new location saving return address
  || ||||   0x000093eb      c3e1           dcp (0xe1,x)
  || ||||   0x000093ed      f5e7           sbc 0xe7,x                  ; subtract memory from accumulator with borrow
  || ||||   0x000093ef      e8             inx                         ; increment index x by one
  || ||||   0x000093f0      f4a1           nop 0xa1,x                  ; no operation
  || ||||   0x000093f2      8d8dd4         sta 0xd48d                  ; store accumulator in memory
  || ||||   0x000093f5      e8             inx                         ; increment index x by one
  || ||||   0x000093f6      e5a0           sbc 0xa0                    ; subtract memory from accumulator with borrow
  || ||||   0x000093f8      f4f2           nop 0xf2,x                  ; no operation
  || ||||   0x000093fa      efecec         isb 0xecec
  || ||||   0x000093fd      f38d           isb (0x8d),y
  || ||||   0x000093ff      e4e5           cpx 0xe5                    ; compare memory and index x
  || ||||   0x00009401      ede1ee         sbc 0xeee1                  ; subtract memory from accumulator with borrow
  || ||||   0x00009404      e4a0           cpx 0xa0                    ; compare memory and index x
  || ||||   0x00009406      e1a0           sbc (0xa0,x)                ; subtract memory from accumulator with borrow
  || ||||   0x00009408      00             brk                         ; force break
  || ||||   0x00009409      201e6c         jsr 0x6c1e                  ; jump to new location saving return address
  || ||||   0x0000940c      bd8410         lda 0x1084,x                ; load accumulator with memory
  || ||||   0x0000940f      20574c         jsr 0x4c57                  ; jump to new location saving return address
  || ||||   0x00009412      8d1794         sta 0x9417                  ; store accumulator in memory
  || ||||   0x00009415      0a             asl a                       ; shift left one bit (memory or accumulator)
  || ||||   0x00009416      6900           adc #0x00                   ; add memory to accumulator with carry
  || ||||   0x00009418      8d1f94         sta 0x941f                  ; store accumulator in memory
  || ||||   0x0000941b      a963           lda #0x63                   ; load accumulator with memory
  || ||||   0x0000941d      38             sec                         ; set carry flag
  || ||||   0x0000941e      e900           sbc #0x00                   ; subtract memory from accumulator with borrow
  || ||||   0x00009420      20544c         jsr 0x4c54                  ; jump to new location saving return address
  || ||||   0x00009423      8d8794         sta 0x9487                  ; store accumulator in memory
  || ||||   0x00009426      c910           cmp #0x10                   ; compare memory and accumulator
  ||,=====< 0x00009428      b006           bcs 0x514108                ; branch on carry set
  |||||||   0x0000942a      20094c         jsr 0x4c09                  ; jump to new location saving return address
  ========< 0x0000942d      4c3394         jmp 0x9433                  ; jump to new location
  ||`-----> 0x00009430      200c4c         jsr 0x4c0c                  ; jump to new location saving return address
  --------> 0x00009433      20004c         jsr 0x4c00                  ; jump to new location saving return address
  || ||||   0x00009436      a0e7           ldy #0xe7                   ; load index y with memory
  ========< 0x00009438      f08d           beq 0x514108                ; branch on result zero
  || ||||   0x0000943a      f4ef           nop 0xef,x                  ; no operation
  || ||||   0x0000943c      ececa1         cpx 0xa1ec                  ; compare memory and index x
  || ||||   0x0000943f      8d8dc4         sta 0xc48d                  ; store accumulator in memory
  || ||||   0x00009442      eff3f4         isb 0xf4f3
  || ||||   0x00009445      a0f4           ldy #0xf4                   ; load index y with memory
  || ||||   0x00009447      e8             inx                         ; increment index x by one
  || ||||   0x00009448      eff5a0         isb 0xa0f5
  ========< 0x0000944b      f0e1           beq 0x514108                ; branch on result zero
  || ||||   0x0000944d      f9bfa0         sbc 0xa0bf,y                ; subtract memory from accumulator with borrow
  || ||||   0x00009450      00             brk                         ; force break
  ||.-----> 0x00009451      20154c         jsr 0x4c15                  ; jump to new location saving return address
  |||||||   0x00009454      c9d9           cmp #0xd9                   ; compare memory and accumulator
  ========< 0x00009456      f024           beq 0x514108                ; branch on result zero
  |||||||   0x00009458      c9ce           cmp #0xce                   ; compare memory and accumulator
  ||`=====< 0x0000945a      d0f5           bne 0x514108                ; branch on result not zero
  || ||||   0x0000945c      20034c         jsr 0x4c03                  ; jump to new location saving return address
  || ||||   0x0000945f      20064c         jsr 0x4c06                  ; jump to new location saving return address
  ||.-----> 0x00009462      20484c         jsr 0x4c48                  ; jump to new location saving return address
  |||||||   0x00009465      a52d           lda 0x2d                    ; load accumulator with memory
  |||||||   0x00009467      9d404a         sta 0x4a40,x                ; store accumulator in memory
  |||||||   0x0000946a      a52e           lda 0x2e                    ; load accumulator with memory
  |||||||   0x0000946c      9d604a         sta 0x4a60,x                ; store accumulator in memory
  |||||||   0x0000946f      a9e4           lda #0xe4                   ; load accumulator with memory
  |||||||   0x00009471      9d004a         sta 0x4a00,x                ; store accumulator in memory
  |||||||   0x00009474      8688           stx 0x88                    ; store index x in memory
  |||||||   0x00009476      20f797         jsr 0x97f7                  ; jump to new location saving return address
  ========< 0x00009479      4c0fa7         jmp 0xa70f                  ; jump to new location
  --------> 0x0000947c      20034c         jsr 0x4c03                  ; jump to new location saving return address
  |||||||   0x0000947f      20064c         jsr 0x4c06                  ; jump to new location saving return address
  |||||||   0x00009482      f8             sed                         ; set decimal mode
  |||||||   0x00009483      ad8311         lda 0x1183                  ; load accumulator with memory
  |||||||   0x00009486      e900           sbc #0x00                   ; subtract memory from accumulator with borrow
  |||||||   0x00009488      aa             tax                         ; transfer accumulator to index x
  |||||||   0x00009489      ad8211         lda 0x1182                  ; load accumulator with memory
  |||||||   0x0000948c      e900           sbc #0x00                   ; subtract memory from accumulator with borrow
  |||||||   0x0000948e      d8             cld                         ; clear decimal mode
  ||`=====< 0x0000948f      90d1           bcc 0x514108                ; branch on carry clear
  || ||||   0x00009491      8d8211         sta 0x1182                  ; store accumulator in memory
  || ||||   0x00009494      8e8311         stx 0x1183                  ; store index x in memory
  || ||||   0x00009497      e680           inc 0x80                    ; increment memory by one
  || ||||   0x00009499      60             rts                         ; return from subroutine
  || ||||   0x0000949a      adff94         lda 0x94ff                  ; load accumulator with memory
  || ||||   0x0000949d      c98f           cmp #0x8f                   ; compare memory and accumulator
  ||,=====< 0x0000949f      d013           bne 0x514108                ; branch on result not zero
  |||||||   0x000094a1      201b4c         jsr 0x4c1b                  ; jump to new location saving return address
  |||||||   0x000094a4      20004c         jsr 0x4c00                  ; jump to new location saving return address
  |||||||   0x000094a7      c2f5           nop #0xf5                   ; no operation
  |||||||   0x000094a9      f2             hlt
  |||||||   0x000094aa      eee9ee         inc 0xeee9                  ; increment memory by one
  |||||||   0x000094ad      e7a1           isb 0xa1
  |||||||   0x000094af      8d0020         sta 0x2000                  ; store accumulator in memory
  |||||||   0x000094b2      874c           sax 0x4c
  ||`-----> 0x000094b4      60             rts                         ; return from subroutine
  || ||||   0x000094b5      a50c           lda 0x0c                    ; load accumulator with memory
  || ||||   0x000094b7      c91c           cmp #0x1c                   ; compare memory and accumulator
  ||,=====< 0x000094b9      d042           bne 0x514108                ; branch on result not zero
  |||||||   0x000094bb      a900           lda #0x00                   ; load accumulator with memory
  |||||||   0x000094bd      8dfe94         sta 0x94fe                  ; store accumulator in memory
  --------> 0x000094c0      adfe94         lda 0x94fe                  ; load accumulator with memory
  |||||||   0x000094c3      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x000094c4      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x000094c5      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x000094c6      0a             asl a                       ; shift left one bit (memory or accumulator)
  |||||||   0x000094c7      a8             tay                         ; transfer accumulator to index y
  |||||||   0x000094c8      b98010         lda 0x1080,y                ; load accumulator with memory
  ========< 0x000094cb      d026           bne 0x514108                ; branch on result not zero
  |||||||   0x000094cd      b98310         lda 0x1083,y                ; load accumulator with memory
  |||||||   0x000094d0      c9c4           cmp #0xc4                   ; compare memory and accumulator
  ========< 0x000094d2      f01f           beq 0x514108                ; branch on result zero
  |||||||   0x000094d4      c9d0           cmp #0xd0                   ; compare memory and accumulator
  ========< 0x000094d6      f01b           beq 0x514108                ; branch on result zero
  |||||||   0x000094d8      b98510         lda 0x1085,y                ; load accumulator with memory
  |||||||   0x000094db      20f192         jsr 0x92f1                  ; jump to new location saving return address
  ========< 0x000094de      9013           bcc 0x514108                ; branch on carry clear
  |||||||   0x000094e0      a9d0           lda #0xd0                   ; load accumulator with memory
  |||||||   0x000094e2      998310         sta 0x1083,y                ; store accumulator in memory
  |||||||   0x000094e5      20004c         jsr 0x4c00                  ; jump to new location saving return address
  ========< 0x000094e8      d0ef           bne 0x514108                ; branch on result not zero
  |||||||   0x000094ea      e9f3           sbc #0xf3                   ; subtract memory from accumulator with borrow
  |||||||   0x000094ec      efeee5         isb 0xe5ee
  |||||||   0x000094ef      e4a1           cpx 0xa1                    ; compare memory and index x
  |||||||   0x000094f1      8d00ee         sta 0xee00                  ; store accumulator in memory
  |||||||   0x000094f4      fe94ad         inc 0xad94,x                ; increment memory by one
  |||||||   0x000094f7      fe94c9         inc 0xc994,x                ; increment memory by one
  |||||||   0x000094fa      06d0           asl 0xd0                    ; shift left one bit (memory or accumulator)
  |||||||   0x000094fc      c360           dcp (0x60,x)
  || ||||   0x000094fe      00             brk                         ; force break
  || ||||   0x000094ff      00             brk                         ; force break
  || ||||   0x00009500      c6ca           dec 0xca                    ; decrement memory by one
  `--````-> 0x00009502      a902           lda #0x02                   ; load accumulator with memory
   |        0x00009504      202d4c         jsr 0x4c2d                  ; jump to new location saving return address
   |        0x00009507      205096         jsr 0x9650                  ; jump to new location saving return address
   |        0x0000950a      a205           ldx #0x05                   ; load index x with memory
   |    .-> 0x0000950c      8a             txa                         ; transfer index x to accumulator
   |    |   0x0000950d      0a             asl a                       ; shift left one bit (memory or accumulator)
   |    |   0x0000950e      0a             asl a                       ; shift left one bit (memory or accumulator)
   |    |   0x0000950f      0a             asl a                       ; shift left one bit (memory or accumulator)
   |    |   0x00009510      0a             asl a                       ; shift left one bit (memory or accumulator)
   |    |   0x00009511      a8             tay                         ; transfer accumulator to index y
   |    |   0x00009512      b98010         lda 0x1080,y                ; load accumulator with memory
   |   ,==< 0x00009515      d015           bne 0x514108                ; branch on result not zero
   |   ||   0x00009517      b98310         lda 0x1083,y                ; load accumulator with memory
   |   ||   0x0000951a      c9d3           cmp #0xd3                   ; compare memory and accumulator
   |  ,===< 0x0000951c      d00e           bne 0x514108                ; branch on result not zero
   |  |||   0x0000951e      20274c         jsr 0x4c27                  ; jump to new location saving return address
   |  |||   0x00009521      290f           and #0x0f                   ; "and" memory with accumulator
   | ,====< 0x00009523      d007           bne 0x514108                ; branch on result not zero
   | ||||   0x00009525      a9c7           lda #0xc7                   ; load accumulator with memory
   | ||||   0x00009527      998310         sta 0x1083,y                ; store accumulator in memory
   | ||||   0x0000952a      e680           inc 0x80                    ; increment memory by one
   | ```--> 0x0000952c      ca             dex                         ; decrement index x by one
   |    `=< 0x0000952d      10dd           bpl 0x514108                ; branch on result plus
   |        0x0000952f      20214c         jsr 0x4c21                  ; jump to new location saving return address
   |        0x00009532      8dff94         sta 0x94ff                  ; store accumulator in memory
   |        0x00009535      4a             lsr a                       ; shift right one bit (memory or accumulator)
   |        0x00009536      c935           cmp #0x35                   ; compare memory and accumulator
   |    ,=< 0x00009538      d003           bne 0x514108                ; branch on result not zero
   |    |   0x0000953a      201493         jsr 0x9314                  ; jump to new location saving return address
   |    `-> 0x0000953d      adff94         lda 0x94ff                  ; load accumulator with memory
   |        0x00009540      c904           cmp #0x04                   ; compare memory and accumulator
   |    ,=< 0x00009542      d006           bne 0x514108                ; branch on result not zero
   |    |   0x00009544      20b594         jsr 0x94b5                  ; jump to new location saving return address
   |    |   0x00009547      201b4c         jsr 0x4c1b                  ; jump to new location saving return address
   |    `-> 0x0000954a      209a94         jsr 0x949a                  ; jump to new location saving return address
   |        0x0000954d      209495         jsr 0x9594                  ; jump to new location saving return address
   |        0x00009550      20b695         jsr 0x95b6                  ; jump to new location saving return address
   |        0x00009553      206f4c         jsr 0x4c6f                  ; jump to new location saving return address
   |        0x00009556      205c96         jsr 0x965c                  ; jump to new location saving return address
   |        0x00009559      c901           cmp #0x01                   ; compare memory and accumulator
   |    ,=< 0x0000955b      d025           bne 0x514108                ; branch on result not zero
   |    |   0x0000955d      a50c           lda 0x0c                    ; load accumulator with memory
   |    |   0x0000955f      c914           cmp #0x14                   ; compare memory and accumulator
   |   ,==< 0x00009561      f00c           beq 0x514108                ; branch on result zero
   |   ||   0x00009563      c915           cmp #0x15                   ; compare memory and accumulator
   |  ,===< 0x00009565      f008           beq 0x514108                ; branch on result zero
   |  |||   0x00009567      c928           cmp #0x28                   ; compare memory and accumulator
   | ,====< 0x00009569      9017           bcc 0x514108                ; branch on carry clear
   | ||||   0x0000956b      c92c           cmp #0x2c                   ; compare memory and accumulator
   |,=====< 0x0000956d      b013           bcs 0x514108                ; branch on carry set
   |||``--> 0x0000956f      20004c         jsr 0x4c00                  ; jump to new location saving return address
   |||  |   0x00009572      d2             hlt
   |||  |   0x00009573      eff5e7         isb 0xe7f5
   |||  |   0x00009576      e8             inx                         ; increment index x by one
   |||  |   0x00009577      a0f3           ldy #0xf3                   ; load index y with memory
   |||  |   0x00009579      e5e1           sbc 0xe1                    ; subtract memory from accumulator with borrow
   |||  |   0x0000957b      f3a1           isb (0xa1),y
   |||  |   0x0000957d      8d0020         sta 0x2000                  ; store accumulator in memory
   |||  |   0x00009580      979f           sax 0x9f,y
   |``--`-> 0x00009582      ad4748         lda 0x4847                  ; load accumulator with memory
   |        0x00009585      29fc           and #0xfc                   ; "and" memory with accumulator
   |        0x00009587      c9d4           cmp #0xd4                   ; compare memory and accumulator
   |    ,=< 0x00009589      d003           bne 0x514108                ; branch on result not zero
   |    |   0x0000958b      20b296         jsr 0x96b2                  ; jump to new location saving return address
   |    `-> 0x0000958e      20d8a2         jsr 0xa2d8                  ; jump to new location saving return address
  ========< 0x00009591      4c7a80         jmp 0x807a                  ; jump to new location
   |        0x00009594      2409           bit 0x09                    ; test bits in memory with accumulator
   |    ,=< 0x00009596      101d           bpl 0x514108                ; branch on result plus
   |    |   0x00009598      20274c         jsr 0x4c27                  ; jump to new location saving return address
   |    |   0x0000959b      c969           cmp #0x69                   ; compare memory and accumulator
   |   ,==< 0x0000959d      d016           bne 0x514108                ; branch on result not zero
   |   ||   0x0000959f      20004c         jsr 0x4c00                  ; jump to new location saving return address
   |   ||   0x000095a2      c5c1           cmp 0xc1                    ; compare memory and accumulator
   |   ||   0x000095a4      d2             hlt
   |   ||   0x000095a5      d4c8           nop 0xc8,x                  ; no operation
   |   ||   0x000095a7      d1d5           cmp (0xd5),y                ; compare memory and accumulator
   |   ||   0x000095a9      c1cb           cmp (0xcb,x)                ; compare memory and accumulator
   |   ||   0x000095ab      c5a1           cmp 0xa1                    ; compare memory and accumulator
   |   ||   0x000095ad      8d0020         sta 0x2000                  ; store accumulator in memory
   |   ||   0x000095b0      934c20         sha 0x204c,x
   |   ||   0x000095b3      874c           sax 0x4c
   |  |``-> 0x000095b5      60             rts                         ; return from subroutine
   |  |     0x000095b6      a52d           lda 0x2d                    ; load accumulator with memory
   |  |     0x000095b8      c9e9           cmp #0xe9                   ; compare memory and accumulator
   |  |,.-> 0x000095ba      d02b           bne 0x514108                ; branch on result not zero
   |  |||   0x000095bc      a52e           lda 0x2e                    ; load accumulator with memory
   |  |||   0x000095be      c9eb           cmp #0xeb                   ; compare memory and accumulator
   | ,====< 0x000095c0      d025           bne 0x514108                ; branch on result not zero
   | ||||   0x000095c2      a509           lda 0x09                    ; load accumulator with memory
   |,=====< 0x000095c4      d021           bne 0x514108                ; branch on result not zero
   ||||||   0x000095c6      201b4c         jsr 0x4c1b                  ; jump to new location saving return address
   ||||||   0x000095c9      20004c         jsr 0x4c00                  ; jump to new location saving return address
   ||||||   0x000095cc      8da200         sta 0x00a2                  ; store accumulator in memory
   ||||||   0x000095cf      ad8c11         lda 0x118c                  ; load accumulator with memory
  ,=======< 0x000095d2      f014           beq 0x514108                ; branch on result zero
  |||||||   0x000095d4      20004c         jsr 0x4c00                  ; jump to new location saving return address
  ||||||`=< 0x000095d7      d0e1           bne 0x514108                ; branch on result not zero
  ||||||    0x000095d9      f3f3           isb (0xf3),y
  ||||||    0x000095db      aca0d3         ldy 0xd3a0                  ; load index y with memory
  ||||||    0x000095de      e5e5           sbc 0xe5                    ; subtract memory from accumulator with borrow
  ||||||    0x000095e0      ebe5           sbc #0xe5                   ; subtract memory from accumulator with borrow
  ||||||    0x000095e2      f2             hlt
  ||||||    0x000095e3      a1a2           lda (0xa2,x)                ; load accumulator with memory
  ||||||    0x000095e5      8d0060         sta 0x6000                  ; store accumulator in memory
  `-------> 0x000095e8      20004c         jsr 0x4c00                  ; jump to new location saving return address
   |  |     0x000095eb      d4e8           nop 0xe8,x                  ; no operation
   |  |     0x000095ed      eff5a0         isb 0xa0f5
   |  | .-> 0x000095f0      e1f2           sbc (0xf2,x)                ; subtract memory from accumulator with borrow
   |  | |   0x000095f2      f4a0           nop 0xa0,x                  ; no operation
   |  | |   0x000095f4      eeeff4         inc 0xf4ef                  ; increment memory by one
   |  | |   0x000095f7      8df5f0         sta 0xf0f5                  ; store accumulator in memory
   |  | |   0x000095fa      efeea0         isb 0xa0ee
   |  | |   0x000095fd      e1a0           sbc (0xa0,x)                ; subtract memory from accumulator with borrow
   |  | |   0x000095ff      d3e1           dcp (0xe1),y
   |  | |   0x00009601      e3f2           isb (0xf2,x)
   |  | |   0x00009603      e5e4           sbc 0xe4                    ; subtract memory from accumulator with borrow
   |  | |   0x00009605      8dd1f5         sta 0xf5d1                  ; store accumulator in memory
   |  | |   0x00009608      e5f3           sbc 0xf3                    ; subtract memory from accumulator with borrow
   |  | |   0x0000960a      f4a1           nop 0xa1,x                  ; no operation
   |  | |   0x0000960c      8dd0e1         sta 0xe1d0                  ; store accumulator in memory
   |  |     0x0000960f      f3f3           isb (0xf3),y
   |  |     0x00009611      e1e7           sbc (0xe7,x)                ; subtract memory from accumulator with borrow
   |  |     0x00009613      e5a0           sbc 0xa0                    ; subtract memory from accumulator with borrow
   |  |     0x00009615      e4e5           cpx 0xe5                    ; compare memory and index x
   |  |     0x00009617      eee9e5         inc 0xe5e9                  ; increment memory by one
   |  |     0x0000961a      e4a1           cpx 0xa1                    ; compare memory and index x
   |  |     0x0000961c      a28d           ldx #0x8d                   ; load index x with memory
   |  |     0x0000961e      00             brk                         ; force break
   |  |     0x0000961f      e62e           inc 0x2e                    ; increment memory by one
   |  |     0x00009621      e603           inc 0x03                    ; increment memory by one
   |  |     0x00009623      60             rts                         ; return from subroutine
   |  |     0x00009624      20214c         jsr 0x4c21                  ; jump to new location saving return address
   |  |     0x00009627      c9ff           cmp #0xff                   ; compare memory and accumulator
   |  | ,=< 0x00009629      d017           bne 0x514108                ; branch on result not zero
   |  | |   0x0000962b      a520           lda 0x20                    ; load accumulator with memory
   |  | |   0x0000962d      c98c           cmp #0x8c                   ; compare memory and accumulator
   |  |,==< 0x0000962f      f011           beq 0x514108                ; branch on result zero
   |  |||   0x00009631      a901           lda #0x01                   ; load accumulator with memory
   |  |||   0x00009633      850e           sta 0x0e                    ; store accumulator in memory
   |  |||   0x00009635      2c2484         bit 0x8424                  ; test bits in memory with accumulator
   | ,====< 0x00009638      3007           bmi 0x514108                ; branch on result minus
   | ||||   0x0000963a      201b4c         jsr 0x4c1b                  ; jump to new location saving return address
   | ||||   0x0000963d      38             sec                         ; set carry flag
   | ||||   0x0000963e      6e2484         ror 0x8424                  ; rotate one bit right (memory or accumulator)
   | `----> 0x00009641      60             rts                         ; return from subroutine
   |  |``-> 0x00009642      2c2484         bit 0x8424                  ; test bits in memory with accumulator
   |  | ,=< 0x00009645      3001           bmi 0x514108                ; branch on result minus
   |  | |   0x00009647      60             rts                         ; return from subroutine
   |  | `-> 0x00009648      a900           lda #0x00                   ; load accumulator with memory
   |  |     0x0000964a      8d2484         sta 0x8424                  ; store accumulator in memory
  ========< 0x0000964d      4c2d4c         jmp 0x4c2d                  ; jump to new location
   |  |     0x00009650      a580           lda 0x80                    ; load accumulator with memory
   |  | ,=< 0x00009652      f007           beq 0x514108                ; branch on result zero
   |  | |   0x00009654      20304c         jsr 0x4c30                  ; jump to new location saving return address
   |  | |   0x00009657      a900           lda #0x00                   ; load accumulator with memory
   |  | |   0x00009659      8580           sta 0x80                    ; store accumulator in memory
   |  | `-> 0x0000965b      60             rts                         ; return from subroutine
   |  |     0x0000965c      8e6696         stx 0x9666                  ; store index x in memory
   |  |     0x0000965f      8c6896         sty 0x9668                  ; store index y in memory
   |  |     0x00009662      20214c         jsr 0x4c21                  ; jump to new location saving return address
   |  |     0x00009665      a200           ldx #0x00                   ; load index x with memory
   |  |     0x00009667      a000           ldy #0x00                   ; load index y with memory
   |  |     0x00009669      60             rts                         ; return from subroutine
   |  |     0x0000966a      aa             tax                         ; transfer accumulator to index x
   |  |     0x0000966b      a50c           lda 0x0c                    ; load accumulator with memory
   |  |     0x0000966d      20784c         jsr 0x4c78                  ; jump to new location saving return address
   |  |     0x00009670      a9ff           lda #0xff                   ; load accumulator with memory
   |  |     0x00009672      6900           adc #0x00                   ; add memory to accumulator with carry
   |  |     0x00009674      60             rts                         ; return from subroutine
   |  |     0x00009675      a031           ldy #0x31                   ; load index y with memory
   |  |     0x00009677      208c96         jsr 0x968c                  ; jump to new location saving return address
   |  | ,=< 0x0000967a      b035           bcs 0x514108                ; branch on carry set
   |  | |   0x0000967c      a047           ldy #0x47                   ; load index y with memory
   |  | |   0x0000967e      208c96         jsr 0x968c                  ; jump to new location saving return address
   |  |,==< 0x00009681      b02e           bcs 0x514108                ; branch on carry set
   |  |||   0x00009683      a03d           ldy #0x3d                   ; load index y with memory
   |  |||   0x00009685      208c96         jsr 0x968c                  ; jump to new location saving return address
   | ,====< 0x00009688      b027           bcs 0x514108                ; branch on carry set
   | ||||   0x0000968a      a03b           ldy #0x3b                   ; load index y with memory
   | ||||   0x0000968c      b90048         lda 0x4800,y                ; load accumulator with memory
   |,=====< 0x0000968f      f006           beq 0x514108                ; branch on result zero
   ||||||   0x00009691      aa             tax                         ; transfer accumulator to index x
   ||||||   0x00009692      a91c           lda #0x1c                   ; load accumulator with memory
  ========< 0x00009694      4c784c         jmp 0x4c78                  ; jump to new location
   |`-----> 0x00009697      b90049         lda 0x4900,y                ; load accumulator with memory
   | ||||   0x0000969a      c91b           cmp #0x1b                   ; compare memory and accumulator
   |,=====< 0x0000969c      f013           beq 0x514108                ; branch on result zero
   ||||||   0x0000969e      29fc           and #0xfc                   ; "and" memory with accumulator
   ||||||   0x000096a0      c91c           cmp #0x1c                   ; compare memory and accumulator
  ,=======< 0x000096a2      f00d           beq 0x514108                ; branch on result zero
  |||||||   0x000096a4      c924           cmp #0x24                   ; compare memory and accumulator
  ========< 0x000096a6      f009           beq 0x514108                ; branch on result zero
  |||||||   0x000096a8      c910           cmp #0x10                   ; compare memory and accumulator
  ========< 0x000096aa      f005           beq 0x514108                ; branch on result zero
  |||||||   0x000096ac      c928           cmp #0x28                   ; compare memory and accumulator
  ========< 0x000096ae      f001           beq 0x514108                ; branch on result zero
  |||||||   0x000096b0      18             clc                         ; clear carry flag
  `-``-``-> 0x000096b1      60             rts                         ; return from subroutine
   |  |     0x000096b2      20004c         jsr 0x4c00                  ; jump to new location saving return address
   |  |     0x000096b5      c6ad           dec 0xad                    ; decrement memory by one
   |  |     0x000096b7      c1ad           cmp (0xad,x)                ; compare memory and accumulator
   |  |     0x000096b9      ccadcc         cpy 0xccad                  ; compare memory and index y
   |  |     0x000096bc      add3a1         lda 0xa1d3                  ; load accumulator with memory
   |  |     0x000096bf      a1a1           lda (0xa1,x)                ; load accumulator with memory
   |  |     0x000096c1      8d0020         sta 0x2000                  ; store accumulator in memory
   |  |     0x000096c4      6b83           arr #0x83
   |  |     0x000096c6      201b4c         jsr 0x4c1b                  ; jump to new location saving return address
   |  |     0x000096c9      206b83         jsr 0x836b                  ; jump to new location saving return address
   |  |     0x000096cc      a50c           lda 0x0c                    ; load accumulator with memory
   |  |     0x000096ce      48             pha                         ; push accumulator on stack
   |  |     0x000096cf      a900           lda #0x00                   ; load accumulator with memory
   |  |     0x000096d1      850c           sta 0x0c                    ; store accumulator in memory
   |  |     0x000096d3      201b4c         jsr 0x4c1b                  ; jump to new location saving return address
   |  |     0x000096d6      2478           bit 0x78                    ; test bits in memory with accumulator
   |  | ,=< 0x000096d8      102e           bpl 0x514108                ; branch on result plus
   |  | |   0x000096da      a920           lda #0x20                   ; load accumulator with memory
   |  | |   0x000096dc      8df196         sta 0x96f1                  ; store accumulator in memory
   |  |.--> 0x000096df      a00d           ldy #0x0d                   ; load index y with memory
   | .----> 0x000096e1      aa             tax                         ; transfer accumulator to index x
   |.-----> 0x000096e2      48             pha                         ; push accumulator on stack
   ||||||   0x000096e3      68             pla                         ; pull accumulator from stack
   ||||||   0x000096e4      ca             dex                         ; decrement index x by one
   |`=====< 0x000096e5      d0fb           bne 0x514108                ; branch on result not zero
   | ||||   0x000096e7      48             pha                         ; push accumulator on stack
   | ||||   0x000096e8      209c4c         jsr 0x4c9c                  ; jump to new location saving return address
   | ||||   0x000096eb      4ef196         lsr 0x96f1                  ; shift right one bit (memory or accumulator)
   |,=====< 0x000096ee      900d           bcc 0x514108                ; branch on carry clear
   ||||||   0x000096f0      a900           lda #0x00                   ; load accumulator with memory
   ||||||   0x000096f2      49b4           eor #0xb4                   ; "exclusive-or" memory with accumulator
   ||||||   0x000096f4      8df196         sta 0x96f1                  ; store accumulator in memory
   ||||||   0x000096f7      a910           lda #0x10                   ; load accumulator with memory
  .-------> 0x000096f9      e901           sbc #0x01                   ; subtract memory from accumulator with borrow
  `=======< 0x000096fb      d0fc           bne 0x514108                ; branch on result not zero
   |`-----> 0x000096fd      68             pla                         ; pull accumulator from stack
   | ||||   0x000096fe      88             dey                         ; decrement index y by one
   | `====< 0x000096ff      d0e0           bne 0x514108                ; branch on result not zero
   |  |||   0x00009701      18             clc                         ; clear carry flag
   |  |||   0x00009702      6901           adc #0x01                   ; add memory to accumulator with carry
   |  |||   0x00009704      c960           cmp #0x60                   ; compare memory and accumulator
   |  |`==< 0x00009706      90d7           bcc 0x514108                ; branch on carry clear
   |  | `-> 0x00009708      a205           ldx #0x05                   ; load index x with memory
   |  |     0x0000970a      8e0e97         stx 0x970e                  ; store index x in memory
   |  | .-> 0x0000970d      a900           lda #0x00                   ; load accumulator with memory
   |  | |   0x0000970f      0a             asl a                       ; shift left one bit (memory or accumulator)
   |  | |   0x00009710      0a             asl a                       ; shift left one bit (memory or accumulator)
   |  | |   0x00009711      0a             asl a                       ; shift left one bit (memory or accumulator)
   |  | |   0x00009712      0a             asl a                       ; shift left one bit (memory or accumulator)
   |  | |   0x00009713      a8             tay                         ; transfer accumulator to index y
   |  | |   0x00009714      b98010         lda 0x1080,y                ; load accumulator with memory
   |  |,==< 0x00009717      d01a           bne 0x514108                ; branch on result not zero
   |  |||   0x00009719      b98310         lda 0x1083,y                ; load accumulator with memory
   |  |||   0x0000971c      c9c4           cmp #0xc4                   ; compare memory and accumulator
   | ,====< 0x0000971e      f013           beq 0x514108                ; branch on result zero
   | ||||   0x00009720      20724c         jsr 0x4c72                  ; jump to new location saving return address
   | ||||   0x00009723      20544c         jsr 0x4c54                  ; jump to new location saving return address
   | ||||   0x00009726      d98510         cmp 0x1085,y                ; compare memory and accumulator
   |,=====< 0x00009729      9008           bcc 0x514108                ; branch on carry clear
   ||||||   0x0000972b      ae0e97         ldx 0x970e                  ; load index x with memory
   ||||||   0x0000972e      a901           lda #0x01                   ; load accumulator with memory
   ||||||   0x00009730      208d4c         jsr 0x4c8d                  ; jump to new location saving return address
   |``-`--> 0x00009733      ce0e97         dec 0x970e                  ; decrement memory by one
   |  | `=< 0x00009736      10d5           bpl 0x514108                ; branch on result plus
   |  |     0x00009738      201b4c         jsr 0x4c1b                  ; jump to new location saving return address
   |  |     0x0000973b      201b4c         jsr 0x4c1b                  ; jump to new location saving return address
   |  |     0x0000973e      68             pla                         ; pull accumulator from stack
   |  |     0x0000973f      850c           sta 0x0c                    ; store accumulator in memory
   |  |     0x00009741      a52d           lda 0x2d                    ; load accumulator with memory
   |  |     0x00009743      c936           cmp #0x36                   ; compare memory and accumulator
   |  | ,=< 0x00009745      d02d           bne 0x514108                ; branch on result not zero
   |  | |   0x00009747      a52e           lda 0x2e                    ; load accumulator with memory
   |  | |   0x00009749      c98a           cmp #0x8a                   ; compare memory and accumulator
   |  |,==< 0x0000974b      d027           bne 0x514108                ; branch on result not zero
   |  |||   0x0000974d      20004c         jsr 0x4c00                  ; jump to new location saving return address
   |  |||   0x00009750      8dc6e1         sta 0xe1c6                  ; store accumulator in memory
   |  |||   0x00009753      ecece9         cpx 0xe9ec                  ; compare memory and index x
   |  |||   0x00009756      eee7a0         inc 0xa0e7                  ; increment memory by one
   |  |||   0x00009759      e9ee           sbc #0xee                   ; subtract memory from accumulator with borrow
   |  |||   0x0000975b      f4ef           nop 0xef,x                  ; no operation
   |  |||   0x0000975d      8df5ee         sta 0xeef5                  ; store accumulator in memory
   |  |||   0x00009760      e4e5           cpx 0xe5                    ; compare memory and index x
   |  |||   0x00009762      f2             hlt
   |  |||   0x00009763      f7ef           isb 0xef,x
   |  |||   0x00009765      f2             hlt
   |  |||   0x00009766      ece4a1         cpx 0xa1e4                  ; compare memory and index x
   |  |||   0x00009769      a18d           lda (0x8d,x)                ; load accumulator with memory
   |  |||   0x0000976b      00             brk                         ; force break
   |  |||   0x0000976c      a911           lda #0x11                   ; load accumulator with memory
   |  |||   0x0000976e      204b4c         jsr 0x4c4b                  ; jump to new location saving return address
   | ,====< 0x00009771      4c7597         jmp 0x9775                  ; jump to new location
   | ||``-> 0x00009774      60             rts                         ; return from subroutine
   | `--.-> 0x00009775      a200           ldx #0x00                   ; load index x with memory
   |  | |   0x00009777      20406c         jsr 0x6c40                  ; jump to new location saving return address
   |  | |   0x0000977a      202d6c         jsr 0x6c2d                  ; jump to new location saving return address
   |  | |   0x0000977d      533a           sre (0x3a),y
   |  | |   0x0000977f      544c           nop 0x4c,x                  ; no operation
   |  | |   0x00009781      4953           eor #0x53                   ; "exclusive-or" memory with accumulator
   |  | |   0x00009783      5400           nop 0x00,x                  ; no operation
   |  | |   0x00009785      00             brk                         ; force break
   |  | |   0x00009786      4a             lsr a                       ; shift right one bit (memory or accumulator)
   |  | |   0x00009787      00             brk                         ; force break
   |  | |   0x00009788      02             hlt
   |  | |   0x00009789      a908           lda #0x08                   ; load accumulator with memory
   |  | |   0x0000978b      20096c         jsr 0x6c09                  ; jump to new location saving return address
   |  | |   0x0000978e      a9ff           lda #0xff                   ; load accumulator with memory
   |  | |   0x00009790      8509           sta 0x09                    ; store accumulator in memory
   |  | |   0x00009792      adc04a         lda 0x4ac0                  ; load accumulator with memory
   |  | |   0x00009795      48             pha                         ; push accumulator on stack
   |  | |   0x00009796      a200           ldx #0x00                   ; load index x with memory
   |  | |   0x00009798      20246c         jsr 0x6c24                  ; jump to new location saving return address
   |  | |   0x0000979b      544c           nop 0x4c,x                  ; TLIST
   |  | |   0x0000979d      4953           eor #0x53                   
   |  | |   0x0000979f      5400           nop 0x00,x                  
   |  | |   0x000097a1      68             pla                         ; pull accumulator from stack
   |  | |   0x000097a2      8dc04a         sta 0x4ac0                  ; store accumulator in memory
   |  | |   0x000097a5      a201           ldx #0x01                   ; load index x with memory
   |  | |   0x000097a7      20246c         jsr 0x6c24                  ; jump to new location saving return address
   |  | |   0x000097aa      4d4149         eor 0x4941                  ; MAIN.OUT
   |  | |   0x000097ad      4e2e4f         lsr 0x4f2e                  
   |  | |   0x000097b0      5554           eor 0x54,x                  
   |  | |   0x000097b2      00             brk                         
   |  |,==< 0x000097b3      d03c           bne 0x514108                ; branch on result not zero
   |  |||   0x000097b5      20394c         jsr 0x4c39                  ; jump to new location saving return address
   |  |||   0x000097b8      20424c         jsr 0x4c42                  ; jump to new location saving return address
   | ,====< 0x000097bb      f034           beq 0x514108                ; branch on result zero
   | ||||   0x000097bd      85be           sta 0xbe                    ; store accumulator in memory
   | ||||   0x000097bf      a50c           lda 0x0c                    ; load accumulator with memory
   | ||||   0x000097c1      c930           cmp #0x30                   ; compare memory and accumulator
   |,=====< 0x000097c3      b008           bcs 0x514108                ; branch on carry set
   ||||||   0x000097c5      c928           cmp #0x28                   ; compare memory and accumulator
  ,=======< 0x000097c7      b01c           bcs 0x514108                ; branch on carry set
  |||||||   0x000097c9      c920           cmp #0x20                   ; compare memory and accumulator
  ========< 0x000097cb      b027           bcs 0x514108                ; branch on carry set
  ||`-----> 0x000097cd      a5be           lda 0xbe                    ; load accumulator with memory
  || ||||   0x000097cf      c92c           cmp #0x2c                   ; compare memory and accumulator
  ||,=====< 0x000097d1      b021           bcs 0x514108                ; branch on carry set
  |||||||   0x000097d3      c924           cmp #0x24                   ; compare memory and accumulator
  ========< 0x000097d5      b01a           bcs 0x514108                ; branch on carry set
  |||||||   0x000097d7      c91b           cmp #0x1b                   ; compare memory and accumulator
  ========< 0x000097d9      f016           beq 0x514108                ; branch on result zero
  |||||||   0x000097db      c912           cmp #0x12                   ; compare memory and accumulator
  ========< 0x000097dd      b015           bcs 0x514108                ; branch on carry set
  |||||||   0x000097df      c910           cmp #0x10                   ; compare memory and accumulator
  ========< 0x000097e1      b00e           bcs 0x514108                ; branch on carry set
  ========< 0x000097e3      900f           bcc 0x514108                ; branch on carry clear
  `-------> 0x000097e5      a5be           lda 0xbe                    ; load accumulator with memory
   ||||||   0x000097e7      c928           cmp #0x28                   ; compare memory and accumulator
  ,=======< 0x000097e9      b009           bcs 0x514108                ; branch on carry set
  |||||||   0x000097eb      c924           cmp #0x24                   ; compare memory and accumulator
  ========< 0x000097ed      b002           bcs 0x514108                ; branch on carry set
  ========< 0x000097ef      9003           bcc 0x514108                ; branch on carry clear
  ---`-`--> 0x000097f1      a900           lda #0x00                   ; load accumulator with memory
  ||| | |   0x000097f3      60             rts                         ; return from subroutine
  `-`-----> 0x000097f4      a9ff           lda #0xff                   ; load accumulator with memory
   |  | |   0x000097f6      60             rts                         ; return from subroutine
   |  | |   0x000097f7      a200           ldx #0x00                   ; load index x with memory
   |  | |   0x000097f9      20406c         jsr 0x6c40                  ; jump to new location saving return address
   |  | |   0x000097fc      a950           lda #0x50                   ; load accumulator with memory
   `======< 0x000097fe      4c861d         jmp 0x1d86                  ; jump to new location
  --------> 0x00009801      a52d           lda 0x2d                    ; load accumulator with memory
      | |   0x00009803      4a             lsr a                       ; shift right one bit (memory or accumulator)
      | |   0x00009804      4a             lsr a                       ; shift right one bit (memory or accumulator)
      | |   0x00009805      4a             lsr a                       ; shift right one bit (memory or accumulator)
      | |   0x00009806      4a             lsr a                       ; shift right one bit (memory or accumulator)
      | |   0x00009807      8504           sta 0x04                    ; store accumulator in memory
      | |   0x00009809      a52d           lda 0x2d                    ; load accumulator with memory
      | |   0x0000980b      290f           and #0x0f                   ; "and" memory with accumulator
      | |   0x0000980d      8502           sta 0x02                    ; store accumulator in memory
      | |   0x0000980f      c908           cmp #0x08                   ; compare memory and accumulator
      |,==< 0x00009811      b00c           bcs 0x514108                ; branch on carry set
      |||   0x00009813      0910           ora #0x10                   ; "or" memory with accumulator
      |||   0x00009815      8502           sta 0x02                    ; store accumulator in memory
      |||   0x00009817      c604           dec 0x04                    ; decrement memory by one
      |||   0x00009819      a504           lda 0x04                    ; load accumulator with memory
      |||   0x0000981b      290f           and #0x0f                   ; "and" memory with accumulator
      |||   0x0000981d      8504           sta 0x04                    ; store accumulator in memory
      |`--> 0x0000981f      a52e           lda 0x2e                    ; load accumulator with memory
      | |   0x00009821      4a             lsr a                       ; shift right one bit (memory or accumulator)
      | |   0x00009822      4a             lsr a                       ; shift right one bit (memory or accumulator)
      | |   0x00009823      4a             lsr a                       ; shift right one bit (memory or accumulator)
      | |   0x00009824      4a             lsr a                       ; shift right one bit (memory or accumulator)
      | |   0x00009825      8505           sta 0x05                    ; store accumulator in memory
      | |   0x00009827      a52e           lda 0x2e                    ; load accumulator with memory
      | |   0x00009829      290f           and #0x0f                   ; "and" memory with accumulator
      | |   0x0000982b      8503           sta 0x03                    ; store accumulator in memory
      | |   0x0000982d      c908           cmp #0x08                   ; compare memory and accumulator
      |,==< 0x0000982f      b00c           bcs 0x514108                ; branch on carry set
      |||   0x00009831      0910           ora #0x10                   ; "or" memory with accumulator
      |||   0x00009833      8503           sta 0x03                    ; store accumulator in memory
      |||   0x00009835      c605           dec 0x05                    ; decrement memory by one
      |||   0x00009837      a505           lda 0x05                    ; load accumulator with memory
      |||   0x00009839      290f           and #0x0f                   ; "and" memory with accumulator
      |||   0x0000983b      8505           sta 0x05                    ; store accumulator in memory
      |`--> 0x0000983d      20e198         jsr 0x98e1                  ; jump to new location saving return address
      | |   0x00009840      20f698         jsr 0x98f6                  ; jump to new location saving return address
      | |   0x00009843      20334c         jsr 0x4c33                  ; jump to new location saving return address
      | |   0x00009846      20514c         jsr 0x4c51                  ; jump to new location saving return address
  ========< 0x00009849      4c994c         jmp 0x4c99                  ; jump to new location
      | |   0x0000984c      a200           ldx #0x00                   ; load index x with memory
      |.--> 0x0000984e      bd0045         lda 0x4500,x                ; load accumulator with memory
      |||   0x00009851      9d0044         sta 0x4400,x                ; store accumulator in memory
      |||   0x00009854      bd0047         lda 0x4700,x                ; load accumulator with memory
      |||   0x00009857      9d0046         sta 0x4600,x                ; store accumulator in memory
      |||   0x0000985a      e8             inx                         ; increment index x by one
      |`==< 0x0000985b      d0f1           bne 0x514108                ; branch on result not zero
      | |   0x0000985d      60             rts                         ; return from subroutine
      | |   0x0000985e      a200           ldx #0x00                   ; load index x with memory
      |.--> 0x00009860      bd0044         lda 0x4400,x                ; load accumulator with memory
      |||   0x00009863      9d0045         sta 0x4500,x                ; store accumulator in memory
      |||   0x00009866      bd0046         lda 0x4600,x                ; load accumulator with memory
      |||   0x00009869      9d0047         sta 0x4700,x                ; store accumulator in memory
      |||   0x0000986c      e8             inx                         ; increment index x by one
      |`==< 0x0000986d      d0f1           bne 0x514108                ; branch on result not zero
      | |   0x0000986f      60             rts                         ; return from subroutine
      | |   0x00009870      a200           ldx #0x00                   ; load index x with memory
      |.--> 0x00009872      bd0046         lda 0x4600,x                ; load accumulator with memory
      |||   0x00009875      9d0044         sta 0x4400,x                ; store accumulator in memory
      |||   0x00009878      bd0047         lda 0x4700,x                ; load accumulator with memory
      |||   0x0000987b      9d0045         sta 0x4500,x                ; store accumulator in memory
      |||   0x0000987e      e8             inx                         ; increment index x by one
      |`==< 0x0000987f      d0f1           bne 0x514108                ; branch on result not zero
      | |   0x00009881      60             rts                         ; return from subroutine
      | |   0x00009882      a200           ldx #0x00                   ; load index x with memory
      |.--> 0x00009884      bd0044         lda 0x4400,x                ; load accumulator with memory
      |||   0x00009887      9d0046         sta 0x4600,x                ; store accumulator in memory
      |||   0x0000988a      bd0045         lda 0x4500,x                ; load accumulator with memory
      |||   0x0000988d      9d0047         sta 0x4700,x                ; store accumulator in memory
      |||   0x00009890      e8             inx                         ; increment index x by one
      |`==< 0x00009891      d0f1           bne 0x514108                ; branch on result not zero
      | |   0x00009893      60             rts                         ; return from subroutine
      | |   0x00009894      18             clc                         ; clear carry flag
      | |   0x00009895      98             tya                         ; transfer index y to accumulator
      | |   0x00009896      0a             asl a                       ; shift left one bit (memory or accumulator)
      | |   0x00009897      85be           sta 0xbe                    ; store accumulator in memory
      | |   0x00009899      8a             txa                         ; transfer index x to accumulator
      | |   0x0000989a      05be           ora 0xbe                    ; "or" memory with accumulator
      | |   0x0000989c      18             clc                         ; clear carry flag
      | |   0x0000989d      6944           adc #0x44                   ; add memory to accumulator with carry
      | |   0x0000989f      48             pha                         ; push accumulator on stack
      | |   0x000098a0      18             clc                         ; clear carry flag
      | |   0x000098a1      8a             txa                         ; transfer index x to accumulator
      | |   0x000098a2      6504           adc 0x04                    ; add memory to accumulator with carry
      | |   0x000098a4      290f           and #0x0f                   ; "and" memory with accumulator
      | |   0x000098a6      aa             tax                         ; transfer accumulator to index x
      | |   0x000098a7      18             clc                         ; clear carry flag
      | |   0x000098a8      98             tya                         ; transfer index y to accumulator
      | |   0x000098a9      6505           adc 0x05                    ; add memory to accumulator with carry
      | |   0x000098ab      290f           and #0x0f                   ; "and" memory with accumulator
      | |   0x000098ad      18             clc                         ; clear carry flag
      | |   0x000098ae      6914           adc #0x14                   ; add memory to accumulator with carry
      | |   0x000098b0      a8             tay                         ; transfer accumulator to index y
      | |   0x000098b1      86b1           stx 0xb1                    ; store index x in memory
      | |   0x000098b3      84b0           sty 0xb0                    ; store index y in memory
      | |   0x000098b5      68             pla                         ; pull accumulator from stack
      | |   0x000098b6      60             rts                         ; return from subroutine
      | |   0x000098b7      a201           ldx #0x01                   ; load index x with memory
      | |   0x000098b9      a000           ldy #0x00                   ; load index y with memory
      | |   0x000098bb      209498         jsr 0x9894                  ; jump to new location saving return address
      | |   0x000098be      200b99         jsr 0x990b                  ; jump to new location saving return address
      | |   0x000098c1      a201           ldx #0x01                   ; load index x with memory
      | |   0x000098c3      a001           ldy #0x01                   ; load index y with memory
      | |   0x000098c5      209498         jsr 0x9894                  ; jump to new location saving return address
      | |   0x000098c8      200b99         jsr 0x990b                  ; jump to new location saving return address
      | |   0x000098cb      60             rts                         ; return from subroutine
      | |   0x000098cc      a200           ldx #0x00                   ; load index x with memory
      | |   0x000098ce      a000           ldy #0x00                   ; load index y with memory
      | |   0x000098d0      209498         jsr 0x9894                  ; jump to new location saving return address
      | |   0x000098d3      200b99         jsr 0x990b                  ; jump to new location saving return address
      | |   0x000098d6      a200           ldx #0x00                   ; load index x with memory
      | |   0x000098d8      a001           ldy #0x01                   ; load index y with memory
      | |   0x000098da      209498         jsr 0x9894                  ; jump to new location saving return address
      | |   0x000098dd      200b99         jsr 0x990b                  ; jump to new location saving return address
      | |   0x000098e0      60             rts                         ; return from subroutine
      | |   0x000098e1      a200           ldx #0x00                   ; load index x with memory
      | |   0x000098e3      a000           ldy #0x00                   ; load index y with memory
      | |   0x000098e5      209498         jsr 0x9894                  ; jump to new location saving return address
      | |   0x000098e8      200b99         jsr 0x990b                  ; jump to new location saving return address
      | |   0x000098eb      a201           ldx #0x01                   ; load index x with memory
      | |   0x000098ed      a000           ldy #0x00                   ; load index y with memory
      | |   0x000098ef      209498         jsr 0x9894                  ; jump to new location saving return address
      | |   0x000098f2      200b99         jsr 0x990b                  ; jump to new location saving return address
      | |   0x000098f5      60             rts                         ; return from subroutine
      | |   0x000098f6      a200           ldx #0x00                   ; load index x with memory
      | |   0x000098f8      a001           ldy #0x01                   ; load index y with memory
      | |   0x000098fa      209498         jsr 0x9894                  ; jump to new location saving return address
      | |   0x000098fd      200b99         jsr 0x990b                  ; jump to new location saving return address
      | |   0x00009900      a201           ldx #0x01                   ; load index x with memory
      | |   0x00009902      a001           ldy #0x01                   ; load index y with memory
      | |   0x00009904      209498         jsr 0x9894                  ; jump to new location saving return address
      | |   0x00009907      200b99         jsr 0x990b                  ; jump to new location saving return address
      | |   0x0000990a      60             rts                         ; return from subroutine
      | |   0x0000990b      8589           sta 0x89                    ; store accumulator in memory
      |.--> 0x0000990d      20006c         jsr 0x6c00                  ; jump to new location saving return address
      |`==< 0x00009910      b0fb           bcs 0x514108                ; branch on carry set
      | |   0x00009912      a5b0           lda 0xb0                    ; load accumulator with memory
      | |   0x00009914      e913           sbc #0x13                   ; subtract memory from accumulator with borrow
      | |   0x00009916      0a             asl a                       ; shift left one bit (memory or accumulator)
      | |   0x00009917      0a             asl a                       ; shift left one bit (memory or accumulator)
      | |   0x00009918      0a             asl a                       ; shift left one bit (memory or accumulator)
      | |   0x00009919      0a             asl a                       ; shift left one bit (memory or accumulator)
      | |   0x0000991a      05b1           ora 0xb1                    ; "or" memory with accumulator
      | |   0x0000991c      858a           sta 0x8a                    ; store accumulator in memory
      | |   0x0000991e      a000           ldy #0x00                   ; load index y with memory
      | |   0x00009920      8488           sty 0x88                    ; store index y in memory
      |.--> 0x00009922      b188           lda (0x88),y                ; load accumulator with memory
      |||   0x00009924      c916           cmp #0x16                   ; compare memory and accumulator
     ,====< 0x00009926      f010           beq 0x514108                ; branch on result zero
     ||||   0x00009928      c917           cmp #0x17                   ; compare memory and accumulator
    ,=====< 0x0000992a      f00c           beq 0x514108                ; branch on result zero
    |||||   0x0000992c      c918           cmp #0x18                   ; compare memory and accumulator
   ,======< 0x0000992e      f008           beq 0x514108                ; branch on result zero
   ||||||   0x00009930      c919           cmp #0x19                   ; compare memory and accumulator
  ,=======< 0x00009932      f019           beq 0x514108                ; branch on result zero
  --------> 0x00009934      c8             iny                         ; increment index y by one
  |||||`==< 0x00009935      d0eb           bne 0x514108                ; branch on result not zero
  ||||| |   0x00009937      60             rts                         ; return from subroutine
  |```----> 0x00009938      a208           ldx #0x08                   ; load index x with memory
  |   | |   0x0000993a      a58a           lda 0x8a                    ; load accumulator with memory
  |   |.--> 0x0000993c      ca             dex                         ; decrement index x by one
  ========< 0x0000993d      30f5           bmi 0x514108                ; branch on result minus
  |   |||   0x0000993f      dd6499         cmp 0x9964,x                ; compare memory and accumulator
  |   |`==< 0x00009942      d0f8           bne 0x514108                ; branch on result not zero
  |   | |   0x00009944      bd3012         lda 0x1230,x                ; load accumulator with memory
  ========< 0x00009947      30eb           bmi 0x514108                ; branch on result minus
  |   | |   0x00009949      a9df           lda #0xdf                   ; load accumulator with memory
  |   |,==< 0x0000994b      d013           bne 0x514108                ; branch on result not zero
  `-------> 0x0000994d      a208           ldx #0x08                   ; load index x with memory
      |||   0x0000994f      a58a           lda 0x8a                    ; load accumulator with memory
     .----> 0x00009951      ca             dex                         ; decrement index x by one
  ========< 0x00009952      30e0           bmi 0x514108                ; branch on result minus
     ||||   0x00009954      dd6c99         cmp 0x996c,x                ; compare memory and accumulator
     `====< 0x00009957      d0f8           bne 0x514108                ; branch on result not zero
      |||   0x00009959      bd3812         lda 0x1238,x                ; load accumulator with memory
  ========< 0x0000995c      10d6           bpl 0x514108                ; branch on result plus
      |||   0x0000995e      a91a           lda #0x1a                   ; load accumulator with memory
      |`--> 0x00009960      9188           sta (0x88),y                ; store accumulator in memory
  ========< 0x00009962      d0d0           bne 0x514108                ; branch on result not zero
      | |   0x00009964      4f45a4         sre 0xa445
      | |   0x00009967      1719           slo 0x19,x
      | |   0x00009969      63fe           rra (0xfe,x)
      | |   0x0000996b      88             dey                         ; decrement index y by one
      | |   0x0000996c      4e58e2         lsr 0xe258                  ; shift right one bit (memory or accumulator)
      | |   0x0000996f      042c           nop 0x2c                    ; no operation
      | |   0x00009971      c500           cmp 0x00                    ; compare memory and accumulator
      | |   0x00009973      de1816         dec 0x1618,x                ; decrement memory by one
      | |   0x00009976      1618           asl 0x18,x                  ; shift left one bit (memory or accumulator)
      | |   0x00009978      18             clc                         ; clear carry flag
      | |   0x00009979      1717           slo 0x17,x
      | |   0x0000997b      1600           asl 0x00,x                  ; shift left one bit (memory or accumulator)
      | |   0x0000997d      00             brk                         ; force break
      | |   0x0000997e      2409           bit 0x09                    ; test bits in memory with accumulator
      |,==< 0x00009980      1003           bpl 0x514108                ; branch on result plus
      |||   0x00009982      a903           lda #0x03                   ; load accumulator with memory
      |||   0x00009984      60             rts                         ; return from subroutine
      |`--> 0x00009985      20214c         jsr 0x4c21                  ; jump to new location saving return address
      | |   0x00009988      c920           cmp #0x20                   ; compare memory and accumulator
      |,==< 0x0000998a      9004           bcc 0x514108                ; branch on carry clear
      |||   0x0000998c      c927           cmp #0x27                   ; compare memory and accumulator
     ,====< 0x0000998e      9010           bcc 0x514108                ; branch on carry clear
     ||`--> 0x00009990      c904           cmp #0x04                   ; compare memory and accumulator
     ||,==< 0x00009992      f010           beq 0x514108                ; branch on result zero
     ||||   0x00009994      c909           cmp #0x09                   ; compare memory and accumulator
    ,=====< 0x00009996      9004           bcc 0x514108                ; branch on carry clear
    |||||   0x00009998      c910           cmp #0x10                   ; compare memory and accumulator
   ,======< 0x0000999a      9008           bcc 0x514108                ; branch on carry clear
   |`-----> 0x0000999c      a901           lda #0x01                   ; load accumulator with memory
   |,=====< 0x0000999e      d006           bne 0x514108                ; branch on result not zero
   ||`----> 0x000099a0      a900           lda #0x00                   ; load accumulator with memory
   ||,====< 0x000099a2      f002           beq 0x514108                ; branch on result zero
   `---`--> 0x000099a4      a902           lda #0x02                   ; load accumulator with memory
    ``----> 0x000099a6      a61e           ldx 0x1e                    ; load index x with memory
      | |   0x000099a8      e020           cpx #0x20                   ; compare memory and index x
      |,==< 0x000099aa      b005           bcs 0x514108                ; branch on carry set
      |||   0x000099ac      e005           cpx #0x05                   ; compare memory and index x
     ,====< 0x000099ae      9001           bcc 0x514108                ; branch on carry clear
     ||||   0x000099b0      60             rts                         ; return from subroutine
     `-`--> 0x000099b1      18             clc                         ; clear carry flag
      | |   0x000099b2      6903           adc #0x03                   ; add memory to accumulator with carry
      | |   0x000099b4      60             rts                         ; return from subroutine
      | |   0x000099b5      207e99         jsr 0x997e                  ; jump to new location saving return address
      | |   0x000099b8      8dc299         sta 0x99c2                  ; store accumulator in memory
      | |   0x000099bb      20724c         jsr 0x4c72                  ; jump to new location saving return address
      | |   0x000099be      cdc299         cmp 0x99c2                  ; compare memory and accumulator
      | |   0x000099c1      60             rts                         ; return from subroutine
      | |   0x000099c2      00             brk                         ; force break
      |.--> 0x000099c3      206c4c         jsr 0x4c6c                  ; jump to new location saving return address
      |||   0x000099c6      291f           and #0x1f                   ; "and" memory with accumulator
      |||   0x000099c8      c907           cmp #0x07                   ; compare memory and accumulator
      |`==< 0x000099ca      90f7           bcc 0x514108                ; branch on carry clear
      | |   0x000099cc      48             pha                         ; push accumulator on stack
      | |   0x000099cd      206c4c         jsr 0x4c6c                  ; jump to new location saving return address
      | |   0x000099d0      0a             asl a                       ; shift left one bit (memory or accumulator)
      |,==< 0x000099d1      b002           bcs 0x514108                ; branch on carry set
      |||   0x000099d3      68             pla                         ; pull accumulator from stack
      |||   0x000099d4      60             rts                         ; return from subroutine
      |`--> 0x000099d5      68             pla                         ; pull accumulator from stack
      | |   0x000099d6      49ff           eor #0xff                   ; "exclusive-or" memory with accumulator
      | |   0x000099d8      18             clc                         ; clear carry flag
      | |   0x000099d9      6901           adc #0x01                   ; add memory to accumulator with carry
      | |   0x000099db      60             rts                         ; return from subroutine
      | |   0x000099dc      a504           lda 0x04                    ; load accumulator with memory
      | |   0x000099de      0a             asl a                       ; shift left one bit (memory or accumulator)
      | |   0x000099df      0a             asl a                       ; shift left one bit (memory or accumulator)
      | |   0x000099e0      0a             asl a                       ; shift left one bit (memory or accumulator)
      | |   0x000099e1      0a             asl a                       ; shift left one bit (memory or accumulator)
      | |   0x000099e2      8d069a         sta 0x9a06                  ; store accumulator in memory
      | |   0x000099e5      a5a9           lda 0xa9                    ; load accumulator with memory
      | |   0x000099e7      38             sec                         ; set carry flag
      | |   0x000099e8      ed069a         sbc 0x9a06                  ; subtract memory from accumulator with borrow
      | |   0x000099eb      c920           cmp #0x20                   ; compare memory and accumulator
      |,==< 0x000099ed      b015           bcs 0x514108                ; branch on carry set
      |||   0x000099ef      a505           lda 0x05                    ; load accumulator with memory
      |||   0x000099f1      0a             asl a                       ; shift left one bit (memory or accumulator)
      |||   0x000099f2      0a             asl a                       ; shift left one bit (memory or accumulator)
      |||   0x000099f3      0a             asl a                       ; shift left one bit (memory or accumulator)
      |||   0x000099f4      0a             asl a                       ; shift left one bit (memory or accumulator)
      |||   0x000099f5      8d069a         sta 0x9a06                  ; store accumulator in memory
      |||   0x000099f8      a5aa           lda 0xaa                    ; load accumulator with memory
      |||   0x000099fa      38             sec                         ; set carry flag
      |||   0x000099fb      ed069a         sbc 0x9a06                  ; subtract memory from accumulator with borrow
      |||   0x000099fe      c920           cmp #0x20                   ; compare memory and accumulator
     ,====< 0x00009a00      b002           bcs 0x514108                ; branch on carry set
     ||||   0x00009a02      38             sec                         ; set carry flag
     ||||   0x00009a03      60             rts                         ; return from subroutine
     `-`--> 0x00009a04      18             clc                         ; clear carry flag
      | |   0x00009a05      60             rts                         ; return from subroutine
      | |   0x00009a06      00             brk                         ; force break
      |.--> 0x00009a07      20c399         jsr 0x99c3                  ; jump to new location saving return address
      |||   0x00009a0a      85a7           sta 0xa7                    ; store accumulator in memory
      |||   0x00009a0c      20c399         jsr 0x99c3                  ; jump to new location saving return address
      |||   0x00009a0f      85a8           sta 0xa8                    ; store accumulator in memory
      |||   0x00009a11      20394c         jsr 0x4c39                  ; jump to new location saving return address
      |||   0x00009a14      20dc99         jsr 0x99dc                  ; jump to new location saving return address
      |`==< 0x00009a17      90ee           bcc 0x514108                ; branch on carry clear
      | |   0x00009a19      60             rts                         ; return from subroutine
      | |   0x00009a1a      8d969a         sta 0x9a96                  ; store accumulator in memory
      | |   0x00009a1d      c904           cmp #0x04                   ; compare memory and accumulator
      |,==< 0x00009a1f      f024           beq 0x514108                ; branch on result zero
      |||   0x00009a21      c907           cmp #0x07                   ; compare memory and accumulator
     ,====< 0x00009a23      f028           beq 0x514108                ; branch on result zero
     ||||   0x00009a25      c90c           cmp #0x0c                   ; compare memory and accumulator
    ,=====< 0x00009a27      f01a           beq 0x514108                ; branch on result zero
    |||||   0x00009a29      c90d           cmp #0x0d                   ; compare memory and accumulator
   ,======< 0x00009a2b      f016           beq 0x514108                ; branch on result zero
   ||||||   0x00009a2d      29fc           and #0xfc                   ; "and" memory with accumulator
   ||||||   0x00009a2f      a205           ldx #0x05                   ; load index x with memory
  .-------> 0x00009a31      dd979a         cmp 0x9a97,x                ; compare memory and accumulator
  ========< 0x00009a34      f02c           beq 0x514108                ; branch on result zero
  |||||||   0x00009a36      ca             dex                         ; decrement index x by one
  `=======< 0x00009a37      10f8           bpl 0x514108                ; branch on result plus
   ||||||   0x00009a39      a203           ldx #0x03                   ; load index x with memory
  .-------> 0x00009a3b      dd9d9a         cmp 0x9a9d,x                ; compare memory and accumulator
  ========< 0x00009a3e      f018           beq 0x514108                ; branch on result zero
  |||||||   0x00009a40      ca             dex                         ; decrement index x by one
  `=======< 0x00009a41      10f8           bpl 0x514108                ; branch on result plus
  .``-----> 0x00009a43      18             clc                         ; clear carry flag
  |  ||||   0x00009a44      60             rts                         ; return from subroutine
  |  ||`--> 0x00009a45      2409           bit 0x09                    ; test bits in memory with accumulator
  |  ||,==< 0x00009a47      f00f           beq 0x514108                ; branch on result zero
  |  ||||   0x00009a49      a9f8           lda #0xf8                   ; load accumulator with memory
  | ,=====< 0x00009a4b      d047           bne 0x514108                ; branch on result not zero
  | |`----> 0x00009a4d      20274c         jsr 0x4c27                  ; jump to new location saving return address
  | | |||   0x00009a50      2903           and #0x03                   ; "and" memory with accumulator
  ========< 0x00009a52      d0ef           bne 0x514108                ; branch on result not zero
  | | |||   0x00009a54      a9e0           lda #0xe0                   ; load accumulator with memory
  | |,====< 0x00009a56      d03c           bne 0x514108                ; branch on result not zero
  -----`--> 0x00009a58      a2ff           ldx #0xff                   ; load index x with memory
  ||||| |   0x00009a5a      2409           bit 0x09                    ; test bits in memory with accumulator
  |||||,==< 0x00009a5c      1029           bpl 0x514108                ; branch on result plus
  |||||||   0x00009a5e      a20b           ldx #0x0b                   ; load index x with memory
  ========< 0x00009a60      d025           bne 0x514108                ; branch on result not zero
  --------> 0x00009a62      20274c         jsr 0x4c27                  ; jump to new location saving return address
  |||||||   0x00009a65      2903           and #0x03                   ; "and" memory with accumulator
  `=======< 0x00009a67      d0da           bne 0x514108                ; branch on result not zero
   ||||||   0x00009a69      2409           bit 0x09                    ; test bits in memory with accumulator
  ,=======< 0x00009a6b      3012           bmi 0x514108                ; branch on result minus
  |||||||   0x00009a6d      ad969a         lda 0x9a96                  ; load accumulator with memory
  |||||||   0x00009a70      c901           cmp #0x01                   ; compare memory and accumulator
  ========< 0x00009a72      d00b           bne 0x514108                ; branch on result not zero
  |||||||   0x00009a74      20274c         jsr 0x4c27                  ; jump to new location saving return address
  |||||||   0x00009a77      2907           and #0x07                   ; "and" memory with accumulator
  ========< 0x00009a79      d004           bne 0x514108                ; branch on result not zero
  |||||||   0x00009a7b      a9ec           lda #0xec                   ; load accumulator with memory
  ========< 0x00009a7d      d015           bne 0x514108                ; branch on result not zero
  `-------> 0x00009a7f      a212           ldx #0x12                   ; load index x with memory
   ||||||   0x00009a81      2409           bit 0x09                    ; test bits in memory with accumulator
  ,=======< 0x00009a83      1002           bpl 0x514108                ; branch on result plus
  |||||||   0x00009a85      a217           ldx #0x17                   ; load index x with memory
  `----`--> 0x00009a87      20274c         jsr 0x4c27                  ; jump to new location saving return address
   |||| |   0x00009a8a      38             sec                         ; set carry flag
   ||||.--> 0x00009a8b      e8             inx                         ; increment index x by one
   ||||||   0x00009a8c      fda19a         sbc 0x9aa1,x                ; subtract memory from accumulator with borrow
   ||||`==< 0x00009a8f      b0fa           bcs 0x514108                ; branch on carry set
   |||| |   0x00009a91      bdbb9a         lda 0x9abb,x                ; load accumulator with memory
  --``----> 0x00009a94      38             sec                         ; set carry flag
   |  | |   0x00009a95      60             rts                         ; return from subroutine
   |  | |   0x00009a96      00             brk                         ; force break
   |  | |   0x00009a97      00             brk                         ; force break
   |  | |   0x00009a98      60             rts                         ; return from subroutine
   |  | |   0x00009a99      646c           nop 0x6c                    ; no operation
   |  | |   0x00009a9b      e4d4           cpx 0xd4                    ; compare memory and index x
   |  | |   0x00009a9d      0408           nop 0x08                    ; no operation
   |  | |   0x00009a9f      0c303c         nop 0x3c30                  ; no operation
   |  |||   0x00009aa2      32             hlt
   |  |||   0x00009aa3      28             plp                         ; pull processor status from stack
   |  |||   0x00009aa4      1e140f         asl 0x0f14,x                ; shift left one bit (memory or accumulator)
   |  |||   0x00009aa7      0f0a0a         slo 0x0a0a
   |  |||   0x00009aaa      0302           slo (0x02,x)
   |  |||   0x00009aac      0140           ora (0x40,x)                ; "or" memory with accumulator
   |  |||   0x00009aae      38             sec                         ; set carry flag
   |  |||   0x00009aaf      38             sec                         ; set carry flag
   |  |||   0x00009ab0      202008         jsr 0x0820                  ; jump to new location saving return address
   |  |||   0x00009ab3      08             php                         ; push processor status on stack
   |  |||   0x00009ab4      48             pha                         ; push accumulator on stack
   |  |||   0x00009ab5      48             pha                         ; push accumulator on stack
   |  |||   0x00009ab6      28             plp                         ; pull processor status from stack
   |  |||   0x00009ab7      2622           rol 0x22                    ; rotate one bit left (memory or accumulator)
   |  |||   0x00009ab9      8080           nop #0x80                   ; no operation
   |  |||   0x00009abb      c0c8           cpy #0xc8                   ; compare memory and index y
   `======< 0x00009abd      9098           bcc 0x514108                ; branch on carry clear
      |||   0x00009abf      bcc4d0         ldy 0xd0c4,x                ; load index y with memory
     ||||   0x00009ac2      e4cc           cpx 0xcc                    ; compare memory and index x
     ||||   0x00009ac4      d4dc           nop 0xdc,x                  ; no operation
     ||||   0x00009ac6      d8             cld                         ; clear decimal mode
     ||||   0x00009ac7      9490           sty 0x90,x                  ; store index y in memory
     ||||   0x00009ac9      98             tya                         ; transfer index y to accumulator
     `====< 0x00009aca      f0f4           beq 0x514108                ; branch on result zero
      |||   0x00009acc      d8             cld                         ; clear decimal mode
      |||   0x00009acd      dc8c84         nop 0x848c,x                ; no operation
      |||   0x00009ad0      88             dey                         ; decrement index y by one
      |||   0x00009ad1      802c           nop #0x2c                   ; no operation
      |||   0x00009ad3      8488           sty 0x88                    ; store index y in memory
      |||   0x00009ad5      a980           lda #0x80                   ; load accumulator with memory
      |||   0x00009ad7      8d2c9b         sta 0x9b2c                  ; store accumulator in memory
     .----> 0x00009ada      20079a         jsr 0x9a07                  ; jump to new location saving return address
     ||||   0x00009add      201e4c         jsr 0x4c1e                  ; jump to new location saving return address
     || |   0x00009ae0      8df59a         sta 0x9af5                  ; store accumulator in memory
     || |   0x00009ae3      201a9a         jsr 0x9a1a                  ; jump to new location saving return address
     ||,==< 0x00009ae6      b008           bcs 0x514108                ; branch on carry set
    .-----> 0x00009ae8      ce2c9b         dec 0x9b2c                  ; decrement memory by one
    |`====< 0x00009aeb      10ed           bpl 0x514108                ; branch on result plus
    |,====< 0x00009aed      4c2b9b         jmp 0x9b2b                  ; jump to new location
    |||`--> 0x00009af0      c92c           cmp #0x2c                   ; compare memory and accumulator
    |||,==< 0x00009af2      d00a           bne 0x514108                ; branch on result not zero
    |||||   0x00009af4      a9ff           lda #0xff                   ; load accumulator with memory
    |||||   0x00009af6      29f0           and #0xf0                   ; "and" memory with accumulator
    |||||   0x00009af8      c960           cmp #0x60                   ; compare memory and accumulator
    `=====< 0x00009afa      f0ec           beq 0x514108                ; branch on result zero
     ||||   0x00009afc      a92c           lda #0x2c                   ; load accumulator with memory
     ||`--> 0x00009afe      48             pha                         ; push accumulator on stack
     || |   0x00009aff      20484c         jsr 0x4c48                  ; jump to new location saving return address
     || |   0x00009b02      68             pla                         ; pull accumulator from stack
     || |   0x00009b03      9d004a         sta 0x4a00,x                ; store accumulator in memory
     || |   0x00009b06      9d204a         sta 0x4a20,x                ; store accumulator in memory
     || |   0x00009b09      c92c           cmp #0x2c                   ; compare memory and accumulator
     ||,==< 0x00009b0b      f005           beq 0x514108                ; branch on result zero
     ||||   0x00009b0d      a900           lda #0x00                   ; load accumulator with memory
    ,=====< 0x00009b0f      4c149b         jmp 0x9b14                  ; jump to new location
    |||`--> 0x00009b12      a964           lda #0x64                   ; load accumulator with memory
    `-----> 0x00009b14      9dc04a         sta 0x4ac0,x                ; store accumulator in memory
     || |   0x00009b17      a5a9           lda 0xa9                    ; load accumulator with memory
     || |   0x00009b19      9d404a         sta 0x4a40,x                ; store accumulator in memory
     || |   0x00009b1c      a5aa           lda 0xaa                    ; load accumulator with memory
     || |   0x00009b1e      9d604a         sta 0x4a60,x                ; store accumulator in memory
     || |   0x00009b21      a900           lda #0x00                   ; load accumulator with memory
     || |   0x00009b23      9d0042         sta 0x4200,x                ; store accumulator in memory
     || |   0x00009b26      a509           lda 0x09                    ; load accumulator with memory
     || |   0x00009b28      9d804a         sta 0x4a80,x                ; store accumulator in memory
     `----> 0x00009b2b      60             rts                         ; return from subroutine
      | |   0x00009b2c      00             brk                         ; force break
      | |   0x00009b2d      c92c           cmp #0x2c                   ; compare memory and accumulator
      |,==< 0x00009b2f      9006           bcc 0x514108                ; branch on carry clear
      |||   0x00009b31      c930           cmp #0x30                   ; compare memory and accumulator
     ,====< 0x00009b33      b002           bcs 0x514108                ; branch on carry set
    ,=====< 0x00009b35      9017           bcc 0x514108                ; branch on carry clear
    |`-`--> 0x00009b37      c980           cmp #0x80                   ; compare memory and accumulator
    | |,==< 0x00009b39      9010           bcc 0x514108                ; branch on carry clear
    | |||   0x00009b3b      c9b4           cmp #0xb4                   ; compare memory and accumulator
    |,====< 0x00009b3d      900f           bcc 0x514108                ; branch on carry clear
    |||||   0x00009b3f      c9b8           cmp #0xb8                   ; compare memory and accumulator
   ,======< 0x00009b41      9008           bcc 0x514108                ; branch on carry clear
   ||||||   0x00009b43      c9e8           cmp #0xe8                   ; compare memory and accumulator
  ,=======< 0x00009b45      9007           bcc 0x514108                ; branch on carry clear
  |||||||   0x00009b47      c9ec           cmp #0xec                   ; compare memory and accumulator
  ========< 0x00009b49      b003           bcs 0x514108                ; branch on carry set
  |`---`--> 0x00009b4b      a9ff           lda #0xff                   ; load accumulator with memory
  | ||| |   0x00009b4d      60             rts                         ; return from subroutine
  `-``----> 0x00009b4e      a900           lda #0x00                   ; load accumulator with memory
      | |   0x00009b50      60             rts                         ; return from subroutine
      | |   0x00009b51      8e7b9b         stx 0x9b7b                  ; store index x in memory
      | |   0x00009b54      a21f           ldx #0x1f                   ; load index x with memory
      |.--> 0x00009b56      ec7b9b         cpx 0x9b7b                  ; compare memory and index x
     ,====< 0x00009b59      f018           beq 0x514108                ; branch on result zero
     ||||   0x00009b5b      bd004a         lda 0x4a00,x                ; load accumulator with memory
    ,=====< 0x00009b5e      f013           beq 0x514108                ; branch on result zero
    |||||   0x00009b60      bd404a         lda 0x4a40,x                ; load accumulator with memory
    |||||   0x00009b63      c5a9           cmp 0xa9                    ; compare memory and accumulator
   ,======< 0x00009b65      d00c           bne 0x514108                ; branch on result not zero
   ||||||   0x00009b67      bd604a         lda 0x4a60,x                ; load accumulator with memory
   ||||||   0x00009b6a      c5aa           cmp 0xaa                    ; compare memory and accumulator
  ,=======< 0x00009b6c      d005           bne 0x514108                ; branch on result not zero
  |||||||   0x00009b6e      ae7b9b         ldx 0x9b7b                  ; load index x with memory
  |||||||   0x00009b71      18             clc                         ; clear carry flag
  |||||||   0x00009b72      60             rts                         ; return from subroutine
  ````----> 0x00009b73      ca             dex                         ; decrement index x by one
      |`==< 0x00009b74      10e0           bpl 0x514108                ; branch on result plus
      | |   0x00009b76      ae7b9b         ldx 0x9b7b                  ; load index x with memory
      | |   0x00009b79      38             sec                         ; set carry flag
      | |   0x00009b7a      60             rts                         ; return from subroutine
      | |   0x00009b7b      00             brk                         ; force break
      |,==< 0x00009b7c      f00a           beq 0x514108                ; branch on result zero
      |||   0x00009b7e      c901           cmp #0x01                   ; compare memory and accumulator
     ,====< 0x00009b80      f006           beq 0x514108                ; branch on result zero
     ||||   0x00009b82      c9ff           cmp #0xff                   ; compare memory and accumulator
    ,=====< 0x00009b84      f003           beq 0x514108                ; branch on result zero
    |||||   0x00009b86      68             pla                         ; pull accumulator from stack
    |||||   0x00009b87      68             pla                         ; pull accumulator from stack
    |`-`--> 0x00009b88      60             rts                         ; return from subroutine
    `-----> 0x00009b89      a901           lda #0x01                   ; load accumulator with memory
      | |   0x00009b8b      60             rts                         ; return from subroutine
      |,==< 0x00009b8c      1005           bpl 0x514108                ; branch on result plus
      |||   0x00009b8e      49ff           eor #0xff                   ; "exclusive-or" memory with accumulator
      |||   0x00009b90      18             clc                         ; clear carry flag
      |||   0x00009b91      6901           adc #0x01                   ; add memory to accumulator with carry
      |`--> 0x00009b93      60             rts                         ; return from subroutine
      | |   0x00009b94      bd004a         lda 0x4a00,x                ; load accumulator with memory
      | |   0x00009b97      c988           cmp #0x88                   ; compare memory and accumulator
      |,==< 0x00009b99      f007           beq 0x514108                ; branch on result zero
      |||   0x00009b9b      c9dc           cmp #0xdc                   ; compare memory and accumulator
     ,====< 0x00009b9d      f003           beq 0x514108                ; branch on result zero
    ,=====< 0x00009b9f      4c1c9c         jmp 0x9c1c                  ; jump to new location
    |`-`--> 0x00009ba2      bd404a         lda 0x4a40,x                ; load accumulator with memory
    | | |   0x00009ba5      38             sec                         ; set carry flag
    | | |   0x00009ba6      e52d           sbc 0x2d                    ; subtract memory from accumulator with borrow
    | | |   0x00009ba8      208c9b         jsr 0x9b8c                  ; jump to new location saving return address
    | | |   0x00009bab      c904           cmp #0x04                   ; compare memory and accumulator
    | |,==< 0x00009bad      9003           bcc 0x514108                ; branch on carry clear
    |,====< 0x00009baf      4c369c         jmp 0x9c36                  ; jump to new location
    |||`--> 0x00009bb2      8d1a9c         sta 0x9c1a                  ; store accumulator in memory
    ||| |   0x00009bb5      bd604a         lda 0x4a60,x                ; load accumulator with memory
    ||| |   0x00009bb8      38             sec                         ; set carry flag
    ||| |   0x00009bb9      e52e           sbc 0x2e                    ; subtract memory from accumulator with borrow
    ||| |   0x00009bbb      208c9b         jsr 0x9b8c                  ; jump to new location saving return address
    ||| |   0x00009bbe      c904           cmp #0x04                   ; compare memory and accumulator
    ||| |   0x00009bc0      8d1b9c         sta 0x9c1b                  ; store accumulator in memory
    |||,==< 0x00009bc3      9002           bcc 0x514108                ; branch on carry clear
    |||||   0x00009bc5      18             clc                         ; clear carry flag
    |||||   0x00009bc6      60             rts                         ; return from subroutine
    |||`--> 0x00009bc7      ad1a9c         lda 0x9c1a                  ; load accumulator with memory
    ||| |   0x00009bca      18             clc                         ; clear carry flag
    ||| |   0x00009bcb      6d1b9c         adc 0x9c1b                  ; add memory to accumulator with carry
    ||| |   0x00009bce      c901           cmp #0x01                   ; compare memory and accumulator
    |||,==< 0x00009bd0      d003           bne 0x514108                ; branch on result not zero
   ,======< 0x00009bd2      4c389c         jmp 0x9c38                  ; jump to new location
   ||||`--> 0x00009bd5      20274c         jsr 0x4c27                  ; jump to new location saving return address
   |||| |   0x00009bd8      2907           and #0x07                   ; "and" memory with accumulator
   ||||,==< 0x00009bda      d05a           bne 0x514108                ; branch on result not zero
   ||||||   0x00009bdc      201b4c         jsr 0x4c1b                  ; jump to new location saving return address
   ||||||   0x00009bdf      a90a           lda #0x0a                   ; load accumulator with memory
   ||||||   0x00009be1      204b4c         jsr 0x4c4b                  ; jump to new location saving return address
   ||||||   0x00009be4      ae7c99         ldx 0x997c                  ; load index x with memory
   ||||||   0x00009be7      a52d           lda 0x2d                    ; load accumulator with memory
   ||||||   0x00009be9      38             sec                         ; set carry flag
   ||||||   0x00009bea      fd404a         sbc 0x4a40,x                ; subtract memory from accumulator with borrow
   ||||||   0x00009bed      8d1a9c         sta 0x9c1a                  ; store accumulator in memory
   ||||||   0x00009bf0      a52e           lda 0x2e                    ; load accumulator with memory
   ||||||   0x00009bf2      38             sec                         ; set carry flag
   ||||||   0x00009bf3      fd604a         sbc 0x4a60,x                ; subtract memory from accumulator with borrow
   ||||||   0x00009bf6      8d1b9c         sta 0x9c1b                  ; store accumulator in memory
   ||||||   0x00009bf9      a905           lda #0x05                   ; load accumulator with memory
   ||||||   0x00009bfb      858c           sta 0x8c                    ; store accumulator in memory
   ||||||   0x00009bfd      858d           sta 0x8d                    ; store accumulator in memory
   ||||||   0x00009bff      38             sec                         ; set carry flag
   ||||||   0x00009c00      ed1a9c         sbc 0x9c1a                  ; subtract memory from accumulator with borrow
   ||||||   0x00009c03      858a           sta 0x8a                    ; store accumulator in memory
   ||||||   0x00009c05      a905           lda #0x05                   ; load accumulator with memory
   ||||||   0x00009c07      38             sec                         ; set carry flag
   ||||||   0x00009c08      ed1b9c         sbc 0x9c1b                  ; subtract memory from accumulator with borrow
   ||||||   0x00009c0b      858b           sta 0x8b                    ; store accumulator in memory
   ||||||   0x00009c0d      a902           lda #0x02                   ; load accumulator with memory
   ||||||   0x00009c0f      200c6c         jsr 0x6c0c                  ; jump to new location saving return address
  ,=======< 0x00009c12      9001           bcc 0x514108                ; branch on carry clear
  |||||||   0x00009c14      60             rts                         ; return from subroutine
  `-------> 0x00009c15      20979f         jsr 0x9f97                  ; jump to new location saving return address
   ||||||   0x00009c18      38             sec                         ; set carry flag
   ||||||   0x00009c19      60             rts                         ; return from subroutine
   ||||||   0x00009c1a      00             brk                         ; force break
   ||||||   0x00009c1b      00             brk                         ; force break
   |`-----> 0x00009c1c      bd404a         lda 0x4a40,x                ; load accumulator with memory
   | ||||   0x00009c1f      38             sec                         ; set carry flag
   | ||||   0x00009c20      e52d           sbc 0x2d                    ; subtract memory from accumulator with borrow
   | ||||   0x00009c22      207c9b         jsr 0x9b7c                  ; jump to new location saving return address
   | ||||   0x00009c25      8d8f9c         sta 0x9c8f                  ; store accumulator in memory
   | ||||   0x00009c28      bd604a         lda 0x4a60,x                ; load accumulator with memory
   | ||||   0x00009c2b      38             sec                         ; set carry flag
   | ||||   0x00009c2c      e52e           sbc 0x2e                    ; subtract memory from accumulator with borrow
   | ||||   0x00009c2e      207c9b         jsr 0x9b7c                  ; jump to new location saving return address
   | ||||   0x00009c31      4d8f9c         eor 0x9c8f                  ; "exclusive-or" memory with accumulator
   |,=====< 0x00009c34      d002           bne 0x514108                ; branch on result not zero
   ||`-`--> 0x00009c36      18             clc                         ; clear carry flag
   || | |   0x00009c37      60             rts                         ; return from subroutine
   ``-----> 0x00009c38      bd004a         lda 0x4a00,x                ; load accumulator with memory
      | |   0x00009c3b      c9ec           cmp #0xec                   ; compare memory and accumulator
      |,==< 0x00009c3d      d009           bne 0x514108                ; branch on result not zero
      |||   0x00009c3f      a40c           ldy 0x0c                    ; load index y with memory
      |||   0x00009c41      c01c           cpy #0x1c                   ; compare memory and index y
     ,====< 0x00009c43      f047           beq 0x514108                ; branch on result zero
    ,=====< 0x00009c45      4c909c         jmp 0x9c90                  ; jump to new location
    |||`--> 0x00009c48      c9e0           cmp #0xe0                   ; compare memory and accumulator
    |||,==< 0x00009c4a      f040           beq 0x514108                ; branch on result zero
    |||||   0x00009c4c      8688           stx 0x88                    ; store index x in memory
    |||||   0x00009c4e      201b4c         jsr 0x4c1b                  ; jump to new location saving return address
    |||||   0x00009c51      2c0781         bit 0x8107                  ; test bits in memory with accumulator
   ,======< 0x00009c54      1006           bpl 0x514108                ; branch on result plus
   ||||||   0x00009c56      a918           lda #0x18                   ; load accumulator with memory
   ||||||   0x00009c58      85c9           sta 0xc9                    ; store accumulator in memory
  ,=======< 0x00009c5a      d003           bne 0x514108                ; branch on result not zero
  |`------> 0x00009c5c      20064c         jsr 0x4c06                  ; jump to new location saving return address
  `-------> 0x00009c5f      20004c         jsr 0x4c00                  ; jump to new location saving return address
    |||||   0x00009c62      c1f4           cmp (0xf4,x)                ; compare memory and accumulator
    |||||   0x00009c64      f4e1           nop 0xe1,x                  ; no operation
    |||||   0x00009c66      e3eb           isb (0xeb,x)
    |||||   0x00009c68      e5e4           sbc 0xe4                    ; subtract memory from accumulator with borrow
    |||||   0x00009c6a      a18d           lda (0x8d,x)                ; load accumulator with memory
    |||||   0x00009c6c      00             brk                         ; force break
    |||||   0x00009c6d      20214c         jsr 0x4c21                  ; jump to new location saving return address
    |||||   0x00009c70      c904           cmp #0x04                   ; compare memory and accumulator
   ,======< 0x00009c72      b00c           bcs 0x514108                ; branch on carry set
   ||||||   0x00009c74      a50c           lda 0x0c                    ; load accumulator with memory
   ||||||   0x00009c76      4a             lsr a                       ; shift right one bit (memory or accumulator)
   ||||||   0x00009c77      c90a           cmp #0x0a                   ; compare memory and accumulator
  ,=======< 0x00009c79      f011           beq 0x514108                ; branch on result zero
  |||||||   0x00009c7b      4a             lsr a                       ; shift right one bit (memory or accumulator)
  |||||||   0x00009c7c      c90a           cmp #0x0a                   ; compare memory and accumulator
  ========< 0x00009c7e      f00c           beq 0x514108                ; branch on result zero
  |`------> 0x00009c80      ae2aa3         ldx 0xa32a                  ; load index x with memory
  | |||||   0x00009c83      9a             txs                         ; transfer index x to stack pointer
  | |||||   0x00009c84      68             pla                         ; pull accumulator from stack
  | |||||   0x00009c85      68             pla                         ; pull accumulator from stack
  | |||||   0x00009c86      20f797         jsr 0x97f7                  ; jump to new location saving return address
  |,======< 0x00009c89      4c0fa7         jmp 0xa70f                  ; jump to new location
  `--`-`--> 0x00009c8c      4c979f         jmp 0x9f97                  ; jump to new location
   || | |   0x00009c8f      00             brk                         ; force break
  --`-----> 0x00009c90      a900           lda #0x00                   ; load accumulator with memory
   |  | |   0x00009c92      9d004a         sta 0x4a00,x                ; store accumulator in memory
   |  | |   0x00009c95      9d204a         sta 0x4a20,x                ; store accumulator in memory
   |  | |   0x00009c98      a918           lda #0x18                   ; load accumulator with memory
   |  | |   0x00009c9a      85c9           sta 0xc9                    ; store accumulator in memory
   |  | |   0x00009c9c      20004c         jsr 0x4c00                  ; jump to new location saving return address
   |  | |   0x00009c9f      d7c8           dcp 0xc8,x
   |  | |   0x00009ca1      c9d2           cmp #0xd2                   ; compare memory and accumulator
   |  | |   0x00009ca3      ccd0cf         cpy 0xcfd0                  ; compare memory and index y
   |  | |   0x00009ca6      cfcca1         dcp 0xa1cc
   |  | |   0x00009ca9      8d00a5         sta 0xa500                  ; store accumulator in memory
   |  | |   0x00009cac      0c48a9         nop 0xa948                  ; no operation
   |  | |   0x00009caf      ec850c         cpx 0x0c85                  ; compare memory and index x
   |  | |   0x00009cb2      201b4c         jsr 0x4c1b                  ; jump to new location saving return address
   |  | |   0x00009cb5      68             pla                         ; pull accumulator from stack
   |  | |   0x00009cb6      850c           sta 0x0c                    ; store accumulator in memory
   |  | |   0x00009cb8      20eda3         jsr 0xa3ed                  ; jump to new location saving return address
   |  | |   0x00009cbb      20b59f         jsr 0x9fb5                  ; jump to new location saving return address
   |  | |   0x00009cbe      a922           lda #0x22                   ; load accumulator with memory
   |  | |   0x00009cc0      852d           sta 0x2d                    ; store accumulator in memory
   |  | |   0x00009cc2      8502           sta 0x02                    ; store accumulator in memory
   |  | |   0x00009cc4      a912           lda #0x12                   ; load accumulator with memory
   |  | |   0x00009cc6      852e           sta 0x2e                    ; store accumulator in memory
   |  | |   0x00009cc8      8503           sta 0x03                    ; store accumulator in memory
   |  | `=< 0x00009cca      4c7597         jmp 0x9775                  ; jump to new location
   |  |     0x00009ccd      bd404a         lda 0x4a40,x                ; load accumulator with memory
   |  |     0x00009cd0      38             sec                         ; set carry flag
   |  |     0x00009cd1      e52d           sbc 0x2d                    ; subtract memory from accumulator with borrow
   |  | ,=< 0x00009cd3      1005           bpl 0x514108                ; branch on result plus
   |  | |   0x00009cd5      49ff           eor #0xff                   ; "exclusive-or" memory with accumulator
   |  | |   0x00009cd7      18             clc                         ; clear carry flag
   |  | |   0x00009cd8      6901           adc #0x01                   ; add memory to accumulator with carry
   |  | `-> 0x00009cda      8d0d9d         sta 0x9d0d                  ; store accumulator in memory
   |  |     0x00009cdd      c906           cmp #0x06                   ; compare memory and accumulator
   |  | ,=< 0x00009cdf      b029           bcs 0x514108                ; branch on carry set
   |  | |   0x00009ce1      bd604a         lda 0x4a60,x                ; load accumulator with memory
   |  | |   0x00009ce4      38             sec                         ; set carry flag
   |  | |   0x00009ce5      e52e           sbc 0x2e                    ; subtract memory from accumulator with borrow
   |  |,==< 0x00009ce7      1005           bpl 0x514108                ; branch on result plus
   |  |||   0x00009ce9      49ff           eor #0xff                   ; "exclusive-or" memory with accumulator
   |  |||   0x00009ceb      18             clc                         ; clear carry flag
   |  |||   0x00009cec      6901           adc #0x01                   ; add memory to accumulator with carry
   |  |`--> 0x00009cee      8d0e9d         sta 0x9d0e                  ; store accumulator in memory
   |  | |   0x00009cf1      c906           cmp #0x06                   ; compare memory and accumulator
   |  |,==< 0x00009cf3      b015           bcs 0x514108                ; branch on carry set
   |  |||   0x00009cf5      0a             asl a                       ; shift left one bit (memory or accumulator)
   |  |||   0x00009cf6      0a             asl a                       ; shift left one bit (memory or accumulator)
   |  |||   0x00009cf7      0a             asl a                       ; shift left one bit (memory or accumulator)
   |  |||   0x00009cf8      18             clc                         ; clear carry flag
   |  |||   0x00009cf9      6d0e9d         adc 0x9d0e                  ; add memory to accumulator with carry
   |  |||   0x00009cfc      6d0e9d         adc 0x9d0e                  ; add memory to accumulator with carry
   |  |||   0x00009cff      6d0e9d         adc 0x9d0e                  ; add memory to accumulator with carry
   |  |||   0x00009d02      6d0d9d         adc 0x9d0d                  ; add memory to accumulator with carry
   |  |||   0x00009d05      a8             tay                         ; transfer accumulator to index y
   |  |||   0x00009d06      b9b0a3         lda 0xa3b0,y                ; load accumulator with memory
   |  |||   0x00009d09      60             rts                         ; return from subroutine
   |  |``-> 0x00009d0a      a900           lda #0x00                   ; load accumulator with memory
   |  |     0x00009d0c      60             rts                         ; return from subroutine
   |  |     0x00009d0d      00             brk                         ; force break
   |  |     0x00009d0e      00             brk                         ; force break
   |  |     0x00009d0f      ae7c99         ldx 0x997c                  ; load index x with memory
   |  |     0x00009d12      bd004a         lda 0x4a00,x                ; load accumulator with memory
   |  |     0x00009d15      48             pha                         ; push accumulator on stack
   |  |     0x00009d16      203c4c         jsr 0x4c3c                  ; jump to new location saving return address
   |  |     0x00009d19      201e4c         jsr 0x4c1e                  ; jump to new location saving return address
   |  |     0x00009d1c      aa             tax                         ; transfer accumulator to index x
   |  |     0x00009d1d      68             pla                         ; pull accumulator from stack
   |  |     0x00009d1e      20784c         jsr 0x4c78                  ; jump to new location saving return address
   |  | ,=< 0x00009d21      9006           bcc 0x514108                ; branch on carry clear
   |  | |   0x00009d23      ae7c99         ldx 0x997c                  ; load index x with memory
   |  | |   0x00009d26      20519b         jsr 0x9b51                  ; jump to new location saving return address
   |  | `-> 0x00009d29      60             rts                         ; return from subroutine
   |  |     0x00009d2a      ae7c99         ldx 0x997c                  ; load index x with memory
   |  |     0x00009d2d      bd2042         lda 0x4220,x                ; load accumulator with memory
   |  |     0x00009d30      c5a9           cmp 0xa9                    ; compare memory and accumulator
   |  | ,=< 0x00009d32      d009           bne 0x514108                ; branch on result not zero
   |  | |   0x00009d34      bd4042         lda 0x4240,x                ; load accumulator with memory
   |  | |   0x00009d37      c5aa           cmp 0xaa                    ; compare memory and accumulator
   |  |,==< 0x00009d39      d002           bne 0x514108                ; branch on result not zero
   |  |||   0x00009d3b      18             clc                         ; clear carry flag
   |  |||   0x00009d3c      60             rts                         ; return from subroutine
   |  |``-> 0x00009d3d      38             sec                         ; set carry flag
   |  |     0x00009d3e      60             rts                         ; return from subroutine
   |  |     0x00009d3f      adb69d         lda 0x9db6                  ; load accumulator with memory
   |  | ,=< 0x00009d42      f01c           beq 0x514108                ; branch on result zero
   |  | |   0x00009d44      85a7           sta 0xa7                    ; store accumulator in memory
   |  | |   0x00009d46      a900           lda #0x00                   ; load accumulator with memory
   |  | |   0x00009d48      85a8           sta 0xa8                    ; store accumulator in memory
   |  | |   0x00009d4a      ae7c99         ldx 0x997c                  ; load index x with memory
   |  | |   0x00009d4d      bd404a         lda 0x4a40,x                ; load accumulator with memory
   |  | |   0x00009d50      85a9           sta 0xa9                    ; store accumulator in memory
   |  | |   0x00009d52      bd604a         lda 0x4a60,x                ; load accumulator with memory
   |  | |   0x00009d55      85aa           sta 0xaa                    ; store accumulator in memory
   |  | |   0x00009d57      200f9d         jsr 0x9d0f                  ; jump to new location saving return address
   |  |,==< 0x00009d5a      9005           bcc 0x514108                ; branch on carry clear
   |  |||   0x00009d5c      202a9d         jsr 0x9d2a                  ; jump to new location saving return address
   |  |||   0x00009d5f      60             rts                         ; return from subroutine
   |  ||`-> 0x00009d60      18             clc                         ; clear carry flag
   |  |`--> 0x00009d61      60             rts                         ; return from subroutine
   |  |     0x00009d62      adb79d         lda 0x9db7                  ; load accumulator with memory
   |  | ,=< 0x00009d65      f01c           beq 0x514108                ; branch on result zero
   |  | |   0x00009d67      85a8           sta 0xa8                    ; store accumulator in memory
   |  | |   0x00009d69      a900           lda #0x00                   ; load accumulator with memory
   |  | |   0x00009d6b      85a7           sta 0xa7                    ; store accumulator in memory
   |  | |   0x00009d6d      ae7c99         ldx 0x997c                  ; load index x with memory
   |  | |   0x00009d70      bd404a         lda 0x4a40,x                ; load accumulator with memory
   |  | |   0x00009d73      85a9           sta 0xa9                    ; store accumulator in memory
   |  | |   0x00009d75      bd604a         lda 0x4a60,x                ; load accumulator with memory
   |  | |   0x00009d78      85aa           sta 0xaa                    ; store accumulator in memory
   |  | |   0x00009d7a      200f9d         jsr 0x9d0f                  ; jump to new location saving return address
   |  |,==< 0x00009d7d      9005           bcc 0x514108                ; branch on carry clear
   |  |||   0x00009d7f      202a9d         jsr 0x9d2a                  ; jump to new location saving return address
   |  |||   0x00009d82      60             rts                         ; return from subroutine
   |  ||`-> 0x00009d83      18             clc                         ; clear carry flag
   |  |`--> 0x00009d84      60             rts                         ; return from subroutine
   |  |     0x00009d85      ae7c99         ldx 0x997c                  ; load index x with memory
   |  |     0x00009d88      bd404a         lda 0x4a40,x                ; load accumulator with memory
   |  |     0x00009d8b      85a9           sta 0xa9                    ; store accumulator in memory
   |  |     0x00009d8d      bd604a         lda 0x4a60,x                ; load accumulator with memory
   |  |     0x00009d90      85aa           sta 0xaa                    ; store accumulator in memory
   |  |     0x00009d92      a900           lda #0x00                   ; load accumulator with memory
   |  |     0x00009d94      85a7           sta 0xa7                    ; store accumulator in memory
   |  |     0x00009d96      85a8           sta 0xa8                    ; store accumulator in memory
   |  |     0x00009d98      206c4c         jsr 0x4c6c                  ; jump to new location saving return address
   |  |     0x00009d9b      2903           and #0x03                   ; "and" memory with accumulator
   |  |     0x00009d9d      a8             tay                         ; transfer accumulator to index y
   |  | ,=< 0x00009d9e      f00c           beq 0x514108                ; branch on result zero
   |  | |   0x00009da0      88             dey                         ; decrement index y by one
   |  |,==< 0x00009da1      f00c           beq 0x514108                ; branch on result zero
   |  |||   0x00009da3      88             dey                         ; decrement index y by one
   | ,====< 0x00009da4      f003           beq 0x514108                ; branch on result zero
   | ||||   0x00009da6      e6a7           inc 0xa7                    ; increment memory by one
   | ||||   0x00009da8      2cc6a7         bit 0xa7c6                  ; test bits in memory with accumulator
   |  |||   0x00009dab      2cc6a8         bit 0xa8c6                  ; test bits in memory with accumulator
   |  ||    0x00009dae      2ce6a8         bit 0xa8e6                  ; test bits in memory with accumulator
   |  |     0x00009db1      200f9d         jsr 0x9d0f                  ; jump to new location saving return address
   |  |     0x00009db4      60             rts                         ; return from subroutine
   |  |     0x00009db5      00             brk                         ; force break
   |  |     0x00009db6      00             brk                         ; force break
   |  |     0x00009db7      00             brk                         ; force break
   |  |     0x00009db8      ae7c99         ldx 0x997c                  ; load index x with memory
   |  |     0x00009dbb      bd004a         lda 0x4a00,x                ; load accumulator with memory
   |  |     0x00009dbe      c9ec           cmp #0xec                   ; compare memory and accumulator
   |  | ,=< 0x00009dc0      d018           bne 0x514108                ; branch on result not zero
   |  | |   0x00009dc2      bdc04a         lda 0x4ac0,x                ; load accumulator with memory
   |  | |   0x00009dc5      4901           eor #0x01                   ; "exclusive-or" memory with accumulator
   |  | |   0x00009dc7      9dc04a         sta 0x4ac0,x                ; store accumulator in memory
   |  |,==< 0x00009dca      d001           bne 0x514108                ; branch on result not zero
   |  |||   0x00009dcc      60             rts                         ; return from subroutine
   |  |`--> 0x00009dcd      206c4c         jsr 0x4c6c                  ; jump to new location saving return address
   |  | |   0x00009dd0      08             php                         ; push processor status on stack
   |  | |   0x00009dd1      ae7c99         ldx 0x997c                  ; load index x with memory
   |  | |   0x00009dd4      28             plp                         ; pull processor status from stack
   |  |,==< 0x00009dd5      102b           bpl 0x514108                ; branch on result plus
   | ,====< 0x00009dd7      4c509e         jmp 0x9e50                  ; jump to new location
   | |||`-> 0x00009dda      c9f0           cmp #0xf0                   ; compare memory and accumulator
   | |||,=< 0x00009ddc      d012           bne 0x514108                ; branch on result not zero
   | ||||   0x00009dde      20cd9c         jsr 0x9ccd                  ; jump to new location saving return address
   |,=====< 0x00009de1      f01f           beq 0x514108                ; branch on result zero
   ||||||   0x00009de3      fec04a         inc 0x4ac0,x                ; increment memory by one
   ||||||   0x00009de6      bdc04a         lda 0x4ac0,x                ; load accumulator with memory
   ||||||   0x00009de9      c914           cmp #0x14                   ; compare memory and accumulator
  ,=======< 0x00009deb      b015           bcs 0x514108                ; branch on carry set
  ========< 0x00009ded      4cfb9d         jmp 0x9dfb                  ; jump to new location
  ||||||`-> 0x00009df0      c92c           cmp #0x2c                   ; compare memory and accumulator
  ||||||,=< 0x00009df2      900e           bcc 0x514108                ; branch on carry clear
  |||||||   0x00009df4      c930           cmp #0x30                   ; compare memory and accumulator
  ========< 0x00009df6      b00a           bcs 0x514108                ; branch on carry set
  ========< 0x00009df8      4c0aa2         jmp 0xa20a                  ; jump to new location
  --------> 0x00009dfb      a9fe           lda #0xfe                   ; load accumulator with memory
  |||||||   0x00009dfd      8d7d99         sta 0x997d                  ; store accumulator in memory
  ========< 0x00009e00      d002           bne 0x514108                ; branch on result not zero
  `-`--``-> 0x00009e02      a900           lda #0x00                   ; load accumulator with memory
  --------> 0x00009e04      8d7d99         sta 0x997d                  ; store accumulator in memory
   | ||     0x00009e07      bd404a         lda 0x4a40,x                ; load accumulator with memory
   | ||     0x00009e0a      38             sec                         ; set carry flag
   | ||     0x00009e0b      e52d           sbc 0x2d                    ; subtract memory from accumulator with borrow
   | || ,=< 0x00009e0d      f00b           beq 0x514108                ; branch on result zero
   | ||,==< 0x00009e0f      1004           bpl 0x514108                ; branch on result plus
   | ||||   0x00009e11      a901           lda #0x01                   ; load accumulator with memory
   |,=====< 0x00009e13      d002           bne 0x514108                ; branch on result not zero
   ||||`--> 0x00009e15      a9ff           lda #0xff                   ; load accumulator with memory
   |`-----> 0x00009e17      4d7d99         eor 0x997d                  ; "exclusive-or" memory with accumulator
   | || `-> 0x00009e1a      8db69d         sta 0x9db6                  ; store accumulator in memory
   | ||     0x00009e1d      bd604a         lda 0x4a60,x                ; load accumulator with memory
   | ||     0x00009e20      38             sec                         ; set carry flag
   | ||     0x00009e21      e52e           sbc 0x2e                    ; subtract memory from accumulator with borrow
   | || ,=< 0x00009e23      f00b           beq 0x514108                ; branch on result zero
   | ||,==< 0x00009e25      1004           bpl 0x514108                ; branch on result plus
   | ||||   0x00009e27      a901           lda #0x01                   ; load accumulator with memory
   |,=====< 0x00009e29      d002           bne 0x514108                ; branch on result not zero
   ||||`--> 0x00009e2b      a9ff           lda #0xff                   ; load accumulator with memory
   |`-----> 0x00009e2d      4d7d99         eor 0x997d                  ; "exclusive-or" memory with accumulator
   | || `-> 0x00009e30      8db79d         sta 0x9db7                  ; store accumulator in memory
   | ||     0x00009e33      206c4c         jsr 0x4c6c                  ; jump to new location saving return address
   | ||     0x00009e36      0a             asl a                       ; shift left one bit (memory or accumulator)
   | || ,=< 0x00009e37      b00d           bcs 0x514108                ; branch on carry set
   | || |   0x00009e39      203f9d         jsr 0x9d3f                  ; jump to new location saving return address
   | ||,==< 0x00009e3c      b022           bcs 0x514108                ; branch on carry set
   | ||||   0x00009e3e      20629d         jsr 0x9d62                  ; jump to new location saving return address
   |,=====< 0x00009e41      b01d           bcs 0x514108                ; branch on carry set
  ,=======< 0x00009e43      4c509e         jmp 0x9e50                  ; jump to new location
  ||||||`-> 0x00009e46      20629d         jsr 0x9d62                  ; jump to new location saving return address
  ||||||,=< 0x00009e49      b015           bcs 0x514108                ; branch on carry set
  |||||||   0x00009e4b      203f9d         jsr 0x9d3f                  ; jump to new location saving return address
  ========< 0x00009e4e      b010           bcs 0x514108                ; branch on carry set
  `--`----> 0x00009e50      a903           lda #0x03                   ; load accumulator with memory
   || |||   0x00009e52      8dce9e         sta 0x9ece                  ; store accumulator in memory
   ||.----> 0x00009e55      20859d         jsr 0x9d85                  ; jump to new location saving return address
  ,=======< 0x00009e58      b006           bcs 0x514108                ; branch on carry set
  |||||||   0x00009e5a      cece9e         dec 0x9ece                  ; decrement memory by one
  |||`====< 0x00009e5d      d0f6           bne 0x514108                ; branch on result not zero
  ||| |||   0x00009e5f      60             rts                         ; return from subroutine
  `-`--``-> 0x00009e60      ae7c99         ldx 0x997c                  ; load index x with memory
   |  |     0x00009e63      bd004a         lda 0x4a00,x                ; load accumulator with memory
   |  |     0x00009e66      c9dc           cmp #0xdc                   ; compare memory and accumulator
   |  | ,=< 0x00009e68      f036           beq 0x514108                ; branch on result zero
   |  | |   0x00009e6a      c994           cmp #0x94                   ; compare memory and accumulator
   |  |,==< 0x00009e6c      f032           beq 0x514108                ; branch on result zero
   |  |||   0x00009e6e      c9d8           cmp #0xd8                   ; compare memory and accumulator
   | ,====< 0x00009e70      f02e           beq 0x514108                ; branch on result zero
   | ||||   0x00009e72      c9f0           cmp #0xf0                   ; compare memory and accumulator
   |,=====< 0x00009e74      f02a           beq 0x514108                ; branch on result zero
   ||||||   0x00009e76      201e4c         jsr 0x4c1e                  ; jump to new location saving return address
   ||||||   0x00009e79      c905           cmp #0x05                   ; compare memory and accumulator
  ,=======< 0x00009e7b      f023           beq 0x514108                ; branch on result zero
  |||||||   0x00009e7d      c91e           cmp #0x1e                   ; compare memory and accumulator
  ========< 0x00009e7f      f010           beq 0x514108                ; branch on result zero
  |||||||   0x00009e81      c91f           cmp #0x1f                   ; compare memory and accumulator
  ========< 0x00009e83      f00c           beq 0x514108                ; branch on result zero
  |||||||   0x00009e85      c904           cmp #0x04                   ; compare memory and accumulator
  ========< 0x00009e87      9017           bcc 0x514108                ; branch on carry clear
  |||||||   0x00009e89      c910           cmp #0x10                   ; compare memory and accumulator
  ========< 0x00009e8b      b013           bcs 0x514108                ; branch on carry set
  |||||||   0x00009e8d      c909           cmp #0x09                   ; compare memory and accumulator
  ========< 0x00009e8f      b008           bcs 0x514108                ; branch on carry set
  --------> 0x00009e91      206c4c         jsr 0x4c6c                  ; jump to new location saving return address
  ========< 0x00009e94      3037           bmi 0x514108                ; branch on result minus
  ========< 0x00009e96      4ca09e         jmp 0x9ea0                  ; jump to new location
  --------> 0x00009e99      206c4c         jsr 0x4c6c                  ; jump to new location saving return address
  |||||||   0x00009e9c      c955           cmp #0x55                   ; compare memory and accumulator
  ========< 0x00009e9e      b02d           bcs 0x514108                ; branch on carry set
  `-``-``-> 0x00009ea0      ae7c99         ldx 0x997c                  ; load index x with memory
   |  |     0x00009ea3      bd404a         lda 0x4a40,x                ; load accumulator with memory
   |  |     0x00009ea6      9d2042         sta 0x4220,x                ; store accumulator in memory
   |  |     0x00009ea9      bd604a         lda 0x4a60,x                ; load accumulator with memory
   |  |     0x00009eac      9d4042         sta 0x4240,x                ; store accumulator in memory
   |  |     0x00009eaf      a5a9           lda 0xa9                    ; load accumulator with memory
   |  |     0x00009eb1      9d404a         sta 0x4a40,x                ; store accumulator in memory
   |  |     0x00009eb4      a5aa           lda 0xaa                    ; load accumulator with memory
   |  |     0x00009eb6      9d604a         sta 0x4a60,x                ; store accumulator in memory
   |  |     0x00009eb9      8a             txa                         ; transfer index x to accumulator
   |  |     0x00009eba      48             pha                         ; push accumulator on stack
   |  |     0x00009ebb      201e4c         jsr 0x4c1e                  ; jump to new location saving return address
   |  |     0x00009ebe      a8             tay                         ; transfer accumulator to index y
   |  |     0x00009ebf      68             pla                         ; pull accumulator from stack
   |  |     0x00009ec0      aa             tax                         ; transfer accumulator to index x
   |  |     0x00009ec1      c0dc           cpy #0xdc                   ; compare memory and index y
   |  | ,=< 0x00009ec3      d008           bne 0x514108                ; branch on result not zero
   |  | |   0x00009ec5      a900           lda #0x00                   ; load accumulator with memory
   |  | |   0x00009ec7      9d004a         sta 0x4a00,x                ; store accumulator in memory
   |  | |   0x00009eca      9d204a         sta 0x4a20,x                ; store accumulator in memory
  ------`-> 0x00009ecd      60             rts                         ; return from subroutine
   |  |     0x00009ece      00             brk                         ; force break
   |  |     0x00009ecf      00             brk                         ; force break
   |  |     0x00009ed0      00             brk                         ; force break
   |  |     0x00009ed1      00             brk                         ; force break
   |  |     0x00009ed2      00             brk                         ; force break
   |  |     0x00009ed3      00             brk                         ; force break
   |  |     0x00009ed4      a901           lda #0x01                   ; load accumulator with memory
   |  |     0x00009ed6      8dd39e         sta 0x9ed3                  ; store accumulator in memory
   |  |     0x00009ed9      ae7c99         ldx 0x997c                  ; load index x with memory
   |  |     0x00009edc      bd404a         lda 0x4a40,x                ; load accumulator with memory
   |  |     0x00009edf      38             sec                         ; set carry flag
   |  |     0x00009ee0      e52d           sbc 0x2d                    ; subtract memory from accumulator with borrow
   |  | ,=< 0x00009ee2      1005           bpl 0x514108                ; branch on result plus
   |  | |   0x00009ee4      49ff           eor #0xff                   ; "exclusive-or" memory with accumulator
   |  | |   0x00009ee6      18             clc                         ; clear carry flag
   |  | |   0x00009ee7      6901           adc #0x01                   ; add memory to accumulator with carry
   |  | `-> 0x00009ee9      8dcf9e         sta 0x9ecf                  ; store accumulator in memory
   |  |     0x00009eec      8dd19e         sta 0x9ed1                  ; store accumulator in memory
   |  |     0x00009eef      bd604a         lda 0x4a60,x                ; load accumulator with memory
   |  |     0x00009ef2      38             sec                         ; set carry flag
   |  |     0x00009ef3      e52e           sbc 0x2e                    ; subtract memory from accumulator with borrow
   |  | ,=< 0x00009ef5      1005           bpl 0x514108                ; branch on result plus
   |  | |   0x00009ef7      49ff           eor #0xff                   ; "exclusive-or" memory with accumulator
   |  | |   0x00009ef9      18             clc                         ; clear carry flag
   |  | |   0x00009efa      6901           adc #0x01                   ; add memory to accumulator with carry
   |  | `-> 0x00009efc      8dd09e         sta 0x9ed0                  ; store accumulator in memory
   |  |     0x00009eff      8dd29e         sta 0x9ed2                  ; store accumulator in memory
   |  |     0x00009f02      cdd19e         cmp 0x9ed1                  ; compare memory and accumulator
   |  | ,=< 0x00009f05      900e           bcc 0x514108                ; branch on carry clear
   |  | |   0x00009f07      add29e         lda 0x9ed2                  ; load accumulator with memory
   |  | |   0x00009f0a      48             pha                         ; push accumulator on stack
   |  | |   0x00009f0b      add19e         lda 0x9ed1                  ; load accumulator with memory
   |  | |   0x00009f0e      8dd29e         sta 0x9ed2                  ; store accumulator in memory
   |  | |   0x00009f11      68             pla                         ; pull accumulator from stack
   |  | |   0x00009f12      8dd19e         sta 0x9ed1                  ; store accumulator in memory
   |  | `-> 0x00009f15      60             rts                         ; return from subroutine
   |  |     0x00009f16      adcf9e         lda 0x9ecf                  ; load accumulator with memory
   |  | ,=< 0x00009f19      d019           bne 0x514108                ; branch on result not zero
   |  | |   0x00009f1b      bd204a         lda 0x4a20,x                ; load accumulator with memory
   |  | |   0x00009f1e      c92d           cmp #0x2d                   ; compare memory and accumulator
   |  |,==< 0x00009f20      f00f           beq 0x514108                ; branch on result zero
   |  |||   0x00009f22      c92f           cmp #0x2f                   ; compare memory and accumulator
   | ,====< 0x00009f24      f00b           beq 0x514108                ; branch on result zero
   | ||||   0x00009f26      206c4c         jsr 0x4c6c                  ; jump to new location saving return address
   | ||||   0x00009f29      2902           and #0x02                   ; "and" memory with accumulator
   | ||||   0x00009f2b      18             clc                         ; clear carry flag
   | ||||   0x00009f2c      692d           adc #0x2d                   ; add memory to accumulator with carry
   | ||||   0x00009f2e      9d204a         sta 0x4a20,x                ; store accumulator in memory
  .-.`-`--> 0x00009f31      4c4a9f         jmp 0x9f4a                  ; jump to new location
  ||| | `-> 0x00009f34      bd204a         lda 0x4a20,x                ; load accumulator with memory
  ||| |     0x00009f37      c92c           cmp #0x2c                   ; compare memory and accumulator
  `=======< 0x00009f39      f0f6           beq 0x514108                ; branch on result zero
   || |     0x00009f3b      c92e           cmp #0x2e                   ; compare memory and accumulator
   |`=====< 0x00009f3d      f0f2           beq 0x514108                ; branch on result zero
   |  |     0x00009f3f      206c4c         jsr 0x4c6c                  ; jump to new location saving return address
   |  |     0x00009f42      2902           and #0x02                   ; "and" memory with accumulator
   |  |     0x00009f44      18             clc                         ; clear carry flag
   |  |     0x00009f45      692c           adc #0x2c                   ; add memory to accumulator with carry
   |  |     0x00009f47      9d204a         sta 0x4a20,x                ; store accumulator in memory
  --------> 0x00009f4a      201b4c         jsr 0x4c1b                  ; jump to new location saving return address
   |  |     0x00009f4d      a90a           lda #0x0a                   ; load accumulator with memory
   |  |     0x00009f4f      204b4c         jsr 0x4c4b                  ; jump to new location saving return address
   |  |     0x00009f52      a5a9           lda 0xa9                    ; load accumulator with memory
   |  |     0x00009f54      48             pha                         ; push accumulator on stack
   |  |     0x00009f55      a5aa           lda 0xaa                    ; load accumulator with memory
   |  |     0x00009f57      48             pha                         ; push accumulator on stack
   |  |     0x00009f58      201b4c         jsr 0x4c1b                  ; jump to new location saving return address
   |  |     0x00009f5b      68             pla                         ; pull accumulator from stack
   |  |     0x00009f5c      85aa           sta 0xaa                    ; store accumulator in memory
   |  |     0x00009f5e      68             pla                         ; pull accumulator from stack
   |  |     0x00009f5f      85a9           sta 0xa9                    ; store accumulator in memory
   |  |     0x00009f61      201b4c         jsr 0x4c1b                  ; jump to new location saving return address
   |  |     0x00009f64      ae7c99         ldx 0x997c                  ; load index x with memory
   |  |     0x00009f67      a52d           lda 0x2d                    ; load accumulator with memory
   |  |     0x00009f69      38             sec                         ; set carry flag
   |  |     0x00009f6a      fd404a         sbc 0x4a40,x                ; subtract memory from accumulator with borrow
   |  |     0x00009f6d      8d959f         sta 0x9f95                  ; store accumulator in memory
   |  |     0x00009f70      a52e           lda 0x2e                    ; load accumulator with memory
   |  |     0x00009f72      38             sec                         ; set carry flag
   |  |     0x00009f73      fd604a         sbc 0x4a60,x                ; subtract memory from accumulator with borrow
   |  |     0x00009f76      8d969f         sta 0x9f96                  ; store accumulator in memory
   |  |     0x00009f79      a905           lda #0x05                   ; load accumulator with memory
   |  |     0x00009f7b      858c           sta 0x8c                    ; store accumulator in memory
   |  |     0x00009f7d      858d           sta 0x8d                    ; store accumulator in memory
   |  |     0x00009f7f      38             sec                         ; set carry flag
   |  |     0x00009f80      ed959f         sbc 0x9f95                  ; subtract memory from accumulator with borrow
   |  |     0x00009f83      858a           sta 0x8a                    ; store accumulator in memory
   |  |     0x00009f85      a905           lda #0x05                   ; load accumulator with memory
   |  |     0x00009f87      38             sec                         ; set carry flag
   |  |     0x00009f88      ed969f         sbc 0x9f96                  ; subtract memory from accumulator with borrow
   |  |     0x00009f8b      858b           sta 0x8b                    ; store accumulator in memory
   |  |     0x00009f8d      a907           lda #0x07                   ; load accumulator with memory
   |  |     0x00009f8f      200c6c         jsr 0x6c0c                  ; jump to new location saving return address
   |  | ,=< 0x00009f92      9003           bcc 0x514108                ; branch on carry clear
   |  | |   0x00009f94      60             rts                         ; return from subroutine
   |  | |   0x00009f95      00             brk                         ; force break
   |  | |   0x00009f96      00             brk                         ; force break
  ------`-> 0x00009f97      ad404a         lda 0x4a40                  ; load accumulator with memory
   |  |     0x00009f9a      48             pha                         ; push accumulator on stack
   |  |     0x00009f9b      ad604a         lda 0x4a60                  ; load accumulator with memory
   |  |     0x00009f9e      48             pha                         ; push accumulator on stack
   |  |     0x00009f9f      a905           lda #0x05                   ; load accumulator with memory
   |  |     0x00009fa1      8d404a         sta 0x4a40                  ; store accumulator in memory
   |  |     0x00009fa4      8d604a         sta 0x4a60                  ; store accumulator in memory
   |  |     0x00009fa7      a200           ldx #0x00                   ; load index x with memory
   |  |     0x00009fa9      38             sec                         ; set carry flag
   |  |     0x00009faa      20186c         jsr 0x6c18                  ; jump to new location saving return address
   |  |     0x00009fad      68             pla                         ; pull accumulator from stack
   |  |     0x00009fae      8d604a         sta 0x4a60                  ; store accumulator in memory
   |  |     0x00009fb1      68             pla                         ; pull accumulator from stack
   |  |     0x00009fb2      8d404a         sta 0x4a40                  ; store accumulator in memory
   |  |     0x00009fb5      a50c           lda 0x0c                    ; load accumulator with memory
   |  |     0x00009fb7      29f8           and #0xf8                   ; "and" memory with accumulator
   |  |     0x00009fb9      c920           cmp #0x20                   ; compare memory and accumulator
   |  | ,=< 0x00009fbb      f003           beq 0x514108                ; branch on result zero
  ========< 0x00009fbd      4c874c         jmp 0x4c87                  ; jump to new location
   |  | `-> 0x00009fc0      20724c         jsr 0x4c72                  ; jump to new location saving return address
   |  |     0x00009fc3      20544c         jsr 0x4c54                  ; jump to new location saving return address
   |  |     0x00009fc6      8dcf9f         sta 0x9fcf                  ; store accumulator in memory
   |  |     0x00009fc9      adc04a         lda 0x4ac0                  ; load accumulator with memory
   |  |     0x00009fcc      38             sec                         ; set carry flag
   |  |     0x00009fcd      f8             sed                         ; set decimal mode
   |  |     0x00009fce      e900           sbc #0x00                   ; subtract memory from accumulator with borrow
   |  |     0x00009fd0      d8             cld                         ; clear decimal mode
   |  | ,=< 0x00009fd1      b002           bcs 0x514108                ; branch on carry set
   |  | |   0x00009fd3      a900           lda #0x00                   ; load accumulator with memory
   |  | `-> 0x00009fd5      8dc04a         sta 0x4ac0                  ; store accumulator in memory
   |  |     0x00009fd8      20304c         jsr 0x4c30                  ; jump to new location saving return address
   |  |     0x00009fdb      adc04a         lda 0x4ac0                  ; load accumulator with memory
   |  | ,=< 0x00009fde      f001           beq 0x514108                ; branch on result zero
   |  | |   0x00009fe0      60             rts                         ; return from subroutine
   |  | `-> 0x00009fe1      20004c         jsr 0x4c00                  ; jump to new location saving return address
   |  |     0x00009fe4      d3e8           dcp (0xe8),y
   |  |     0x00009fe6      e9f0           sbc #0xf0                   ; subtract memory from accumulator with borrow
   |  |     0x00009fe8      a0f3           ldy #0xf3                   ; load index y with memory
   |  |     0x00009fea      f5ee           sbc 0xee,x                  ; subtract memory from accumulator with borrow
   |  |     0x00009fec      eba1           sbc #0xa1                   ; subtract memory from accumulator with borrow
   |  |     0x00009fee      8d004e         sta 0x4e00                  ; store accumulator in memory
   |  |     0x00009ff1      0781           slo 0x81
   |  |     0x00009ff3      a517           lda 0x17                    ; load accumulator with memory
   |  |     0x00009ff5      0d8811         ora 0x1188                  ; "or" memory with accumulator
   |  | ,=< 0x00009ff8      f033           beq 0x514108                ; branch on result zero
   |  | |   0x00009ffa      20004c         jsr 0x4c00                  ; jump to new location saving return address
   |  | |   0x00009ffd      c1e2           cmp (0xe2,x)                ; compare memory and accumulator
   |  | |   0x00009fff      e1ee           sbc (0xee,x)                ; subtract memory from accumulator with borrow
   |  | |   0x0000a001      e4ef           cpx 0xef                    ; compare memory and index x
   |  | |   0x0000a003      eea0f3         inc 0xf3a0                  ; increment memory by one
   |  | |   0x0000a006      e8             inx                         ; increment index x by one
   |  | |   0x0000a007      e9f0           sbc #0xf0                   ; subtract memory from accumulator with borrow
   |  | |   0x0000a009      a18d           lda (0x8d,x)                ; load accumulator with memory
   |  | |   0x0000a00b      00             brk                         ; force break
   |  | |   0x0000a00c      a517           lda 0x17                    ; load accumulator with memory
   |  |,==< 0x0000a00e      d014           bne 0x514108                ; branch on result not zero
   |  |||   0x0000a010      ad8811         lda 0x1188                  ; load accumulator with memory
   |  |||   0x0000a013      f8             sed                         ; set decimal mode
   |  |||   0x0000a014      38             sec                         ; set carry flag
   |  |||   0x0000a015      e901           sbc #0x01                   ; subtract memory from accumulator with borrow
   |  |||   0x0000a017      d8             cld                         ; clear decimal mode
   |  |||   0x0000a018      8d8811         sta 0x1188                  ; store accumulator in memory
   |  |||   0x0000a01b      20274c         jsr 0x4c27                  ; jump to new location saving return address
   |  |||   0x0000a01e      2901           and #0x01                   ; "and" memory with accumulator
   |  |||   0x0000a020      0914           ora #0x14                   ; "or" memory with accumulator
   | ,====< 0x0000a022      d006           bne 0x514108                ; branch on result not zero
   | ||`--> 0x0000a024      a50c           lda 0x0c                    ; load accumulator with memory
   | || |   0x0000a026      2903           and #0x03                   ; "and" memory with accumulator
   | || |   0x0000a028      0928           ora #0x28                   ; "or" memory with accumulator
   | `----> 0x0000a02a      850c           sta 0x0c                    ; store accumulator in memory
   |  | |   0x0000a02c      60             rts                         ; return from subroutine
   |  | `-> 0x0000a02d      a900           lda #0x00                   ; load accumulator with memory
   |  |     0x0000a02f      850c           sta 0x0c                    ; store accumulator in memory
   |  |     0x0000a031      201b4c         jsr 0x4c1b                  ; jump to new location saving return address
   |  |     0x0000a034      20eda3         jsr 0xa3ed                  ; jump to new location saving return address
   |  |     0x0000a037      20004c         jsr 0x4c00                  ; jump to new location saving return address
   |  |     0x0000a03a      8dc4d2         sta 0xd2c4                  ; store accumulator in memory
   |  |     0x0000a03d      cfd7ce         dcp 0xced7
   |  |     0x0000a040      c9ce           cmp #0xce                   ; compare memory and accumulator
   |  |     0x0000a042      c7a1           dcp 0xa1
   |  |     0x0000a044      a1a1           lda (0xa1,x)                ; load accumulator with memory
   |  |     0x0000a046      8d00a9         sta 0xa900                  ; store accumulator in memory
   |  | |   0x0000a049      058d           ora 0x8d                    ; "or" memory with accumulator
   |  | |   0x0000a04b      40             rti                         ; return from interrupt
   |  | |   0x0000a04c      4a             lsr a                       ; shift right one bit (memory or accumulator)
   |  | |   0x0000a04d      8d604a         sta 0x4a60                  ; store accumulator in memory
   |  | |   0x0000a050      a200           ldx #0x00                   ; load index x with memory
   |  | |   0x0000a052      18             clc                         ; clear carry flag
   |  | |   0x0000a053      20186c         jsr 0x6c18                  ; jump to new location saving return address
   |  | |   0x0000a056      20874c         jsr 0x4c87                  ; jump to new location saving return address
   |  | |   0x0000a059      201e6c         jsr 0x6c1e                  ; jump to new location saving return address
   |  |,==< 0x0000a05c      3003           bmi 0x514108                ; branch on result minus
   |  ||`=< 0x0000a05e      4c48a0         jmp 0xa048                  ; jump to new location
  =====`--> 0x0000a061      4c8480         jmp 0x8084                  ; jump to new location
   |  |     0x0000a064      00             brk                         ; force break
   |  |     0x0000a065      a5a8           lda 0xa8                    ; load accumulator with memory
   |  | ,=< 0x0000a067      f00a           beq 0x514108                ; branch on result zero
   |  |,==< 0x0000a069      3004           bmi 0x514108                ; branch on result minus
   |  |||   0x0000a06b      a902           lda #0x02                   ; load accumulator with memory
   | ,====< 0x0000a06d      d00e           bne 0x514108                ; branch on result not zero
   | ||`--> 0x0000a06f      a900           lda #0x00                   ; load accumulator with memory
   | ||,==< 0x0000a071      f00a           beq 0x514108                ; branch on result zero
   | |||`-> 0x0000a073      a5a7           lda 0xa7                    ; load accumulator with memory
   | |||,=< 0x0000a075      3004           bmi 0x514108                ; branch on result minus
   | ||||   0x0000a077      a901           lda #0x01                   ; load accumulator with memory
   |,=====< 0x0000a079      d002           bne 0x514108                ; branch on result not zero
   |||||`-> 0x0000a07b      a903           lda #0x03                   ; load accumulator with memory
   |``-`--> 0x0000a07d      ae7c99         ldx 0x997c                  ; load index x with memory
   |  |     0x0000a080      18             clc                         ; clear carry flag
   |  |     0x0000a081      692c           adc #0x2c                   ; add memory to accumulator with carry
   |  |     0x0000a083      9d204a         sta 0x4a20,x                ; store accumulator in memory
   |  |     0x0000a086      bd404a         lda 0x4a40,x                ; load accumulator with memory
   |  |     0x0000a089      9d2042         sta 0x4220,x                ; store accumulator in memory
   |  |     0x0000a08c      18             clc                         ; clear carry flag
   |  |     0x0000a08d      65a7           adc 0xa7                    ; add memory to accumulator with carry
   |  |     0x0000a08f      9d404a         sta 0x4a40,x                ; store accumulator in memory
   |  |     0x0000a092      bd604a         lda 0x4a60,x                ; load accumulator with memory
   |  |     0x0000a095      9d4042         sta 0x4240,x                ; store accumulator in memory
   |  |     0x0000a098      18             clc                         ; clear carry flag
   |  |     0x0000a099      65a8           adc 0xa8                    ; add memory to accumulator with carry
   |  |     0x0000a09b      9d604a         sta 0x4a60,x                ; store accumulator in memory
   |  |     0x0000a09e      60             rts                         ; return from subroutine
   |  |     0x0000a09f      02             hlt
   |  |     0x0000a0a0      0304           slo (0x04,x)
   |  |     0x0000a0a2      0404           nop 0x04                    ; no operation
   |  |     0x0000a0a4      0402           nop 0x02                    ; no operation
   |  |     0x0000a0a6      0303           slo (0x03,x)
   |  |     0x0000a0a8      02             hlt
   |  |     0x0000a0a9      0404           nop 0x04                    ; no operation
   |  |     0x0000a0ab      0404           nop 0x04                    ; no operation
   |  |     0x0000a0ad      0302           slo (0x02,x)
   |  |     0x0000a0af      a900           lda #0x00                   ; load accumulator with memory
   |  |     0x0000a0b1      85a7           sta 0xa7                    ; store accumulator in memory
   |  |     0x0000a0b3      85a8           sta 0xa8                    ; store accumulator in memory
   |  |     0x0000a0b5      ae7c99         ldx 0x997c                  ; load index x with memory
   |  |     0x0000a0b8      bd404a         lda 0x4a40,x                ; load accumulator with memory
   |  |     0x0000a0bb      85a9           sta 0xa9                    ; store accumulator in memory
   |  |     0x0000a0bd      bd604a         lda 0x4a60,x                ; load accumulator with memory
   |  |     0x0000a0c0      85aa           sta 0xaa                    ; store accumulator in memory
   |  |     0x0000a0c2      add39e         lda 0x9ed3                  ; load accumulator with memory
   |  | ,=< 0x0000a0c5      f01c           beq 0x514108                ; branch on result zero
   |  | |   0x0000a0c7      ae7c99         ldx 0x997c                  ; load index x with memory
   |  | |   0x0000a0ca      bd404a         lda 0x4a40,x                ; load accumulator with memory
   |  | |   0x0000a0cd      38             sec                         ; set carry flag
   |  | |   0x0000a0ce      e52d           sbc 0x2d                    ; subtract memory from accumulator with borrow
   |  |,==< 0x0000a0d0      3005           bmi 0x514108                ; branch on result minus
   |  |||   0x0000a0d2      c6a7           dec 0xa7                    ; decrement memory by one
   | ,====< 0x0000a0d4      4cd9a0         jmp 0xa0d9                  ; jump to new location
   | ||`--> 0x0000a0d7      e6a7           inc 0xa7                    ; increment memory by one
   | `----> 0x0000a0d9      200f9d         jsr 0x9d0f                  ; jump to new location saving return address
   |  |,==< 0x0000a0dc      9022           bcc 0x514108                ; branch on carry clear
   |  |||   0x0000a0de      2065a0         jsr 0xa065                  ; jump to new location saving return address
   |  |||   0x0000a0e1      38             sec                         ; set carry flag
   |  |||   0x0000a0e2      60             rts                         ; return from subroutine
   |  ||`-> 0x0000a0e3      bd604a         lda 0x4a60,x                ; load accumulator with memory
   |  ||    0x0000a0e6      38             sec                         ; set carry flag
   |  ||    0x0000a0e7      e52e           sbc 0x2e                    ; subtract memory from accumulator with borrow
   |  ||,=< 0x0000a0e9      3005           bmi 0x514108                ; branch on result minus
   |  |||   0x0000a0eb      c6a8           dec 0xa8                    ; decrement memory by one
   | ,====< 0x0000a0ed      4cf2a0         jmp 0xa0f2                  ; jump to new location
   | |||`-> 0x0000a0f0      e6a8           inc 0xa8                    ; increment memory by one
   | `----> 0x0000a0f2      200f9d         jsr 0x9d0f                  ; jump to new location saving return address
   |  ||,=< 0x0000a0f5      9009           bcc 0x514108                ; branch on carry clear
   |  |||   0x0000a0f7      202a9d         jsr 0x9d2a                  ; jump to new location saving return address
   | ,====< 0x0000a0fa      9004           bcc 0x514108                ; branch on carry clear
   | ||||   0x0000a0fc      2065a0         jsr 0xa065                  ; jump to new location saving return address
   | ||||   0x0000a0ff      38             sec                         ; set carry flag
   | `-``-> 0x0000a100      60             rts                         ; return from subroutine
   |  |     0x0000a101      00             brk                         ; force break
   |  |     0x0000a102      a900           lda #0x00                   ; load accumulator with memory
   |  |     0x0000a104      85a7           sta 0xa7                    ; store accumulator in memory
   |  |     0x0000a106      85a8           sta 0xa8                    ; store accumulator in memory
   |  |     0x0000a108      ae7c99         ldx 0x997c                  ; load index x with memory
   |  |     0x0000a10b      bd404a         lda 0x4a40,x                ; load accumulator with memory
   |  |     0x0000a10e      85a9           sta 0xa9                    ; store accumulator in memory
   |  |     0x0000a110      bd604a         lda 0x4a60,x                ; load accumulator with memory
   |  |     0x0000a113      85aa           sta 0xaa                    ; store accumulator in memory
   |  |     0x0000a115      add39e         lda 0x9ed3                  ; load accumulator with memory
   |  | ,=< 0x0000a118      d01c           bne 0x514108                ; branch on result not zero
   |  | |   0x0000a11a      ae7c99         ldx 0x997c                  ; load index x with memory
   |  | |   0x0000a11d      bd404a         lda 0x4a40,x                ; load accumulator with memory
   |  | |   0x0000a120      38             sec                         ; set carry flag
   |  | |   0x0000a121      e52d           sbc 0x2d                    ; subtract memory from accumulator with borrow
   |  |,==< 0x0000a123      3005           bmi 0x514108                ; branch on result minus
   |  |||   0x0000a125      c6a7           dec 0xa7                    ; decrement memory by one
   | ,====< 0x0000a127      4c2ca1         jmp 0xa12c                  ; jump to new location
   | ||`--> 0x0000a12a      e6a7           inc 0xa7                    ; increment memory by one
   | `----> 0x0000a12c      200f9d         jsr 0x9d0f                  ; jump to new location saving return address
   |  |,==< 0x0000a12f      9022           bcc 0x514108                ; branch on carry clear
   |  |||   0x0000a131      2065a0         jsr 0xa065                  ; jump to new location saving return address
   |  |||   0x0000a134      38             sec                         ; set carry flag
   |  |||   0x0000a135      60             rts                         ; return from subroutine
   |  ||`-> 0x0000a136      bd604a         lda 0x4a60,x                ; load accumulator with memory
   |  ||    0x0000a139      38             sec                         ; set carry flag
   |  ||    0x0000a13a      e52e           sbc 0x2e                    ; subtract memory from accumulator with borrow
   |  ||,=< 0x0000a13c      3005           bmi 0x514108                ; branch on result minus
   |  |||   0x0000a13e      c6a8           dec 0xa8                    ; decrement memory by one
   | ,====< 0x0000a140      4c45a1         jmp 0xa145                  ; jump to new location
   | |||`-> 0x0000a143      e6a8           inc 0xa8                    ; increment memory by one
   | `----> 0x0000a145      200f9d         jsr 0x9d0f                  ; jump to new location saving return address
   |  ||,=< 0x0000a148      9009           bcc 0x514108                ; branch on carry clear
   |  |||   0x0000a14a      202a9d         jsr 0x9d2a                  ; jump to new location saving return address
   | ,====< 0x0000a14d      9004           bcc 0x514108                ; branch on carry clear
   | ||||   0x0000a14f      2065a0         jsr 0xa065                  ; jump to new location saving return address
   | ||||   0x0000a152      38             sec                         ; set carry flag
   | `-``-> 0x0000a153      60             rts                         ; return from subroutine
   |  |     0x0000a154      00             brk                         ; force break
   |  |     0x0000a155      a900           lda #0x00                   ; load accumulator with memory
   |  |     0x0000a157      8d7d99         sta 0x997d                  ; store accumulator in memory
   |  |     0x0000a15a      ae7c99         ldx 0x997c                  ; load index x with memory
   |  |     0x0000a15d      bd404a         lda 0x4a40,x                ; load accumulator with memory
   |  |     0x0000a160      38             sec                         ; set carry flag
   |  |     0x0000a161      e52d           sbc 0x2d                    ; subtract memory from accumulator with borrow
   |  | ,=< 0x0000a163      f00b           beq 0x514108                ; branch on result zero
   |  |,==< 0x0000a165      1004           bpl 0x514108                ; branch on result plus
   |  |||   0x0000a167      a901           lda #0x01                   ; load accumulator with memory
   | ,====< 0x0000a169      d002           bne 0x514108                ; branch on result not zero
   | ||`--> 0x0000a16b      a9ff           lda #0xff                   ; load accumulator with memory
   | `----> 0x0000a16d      4d7d99         eor 0x997d                  ; "exclusive-or" memory with accumulator
   |  | `-> 0x0000a170      8db69d         sta 0x9db6                  ; store accumulator in memory
   |  |     0x0000a173      bd604a         lda 0x4a60,x                ; load accumulator with memory
   |  |     0x0000a176      38             sec                         ; set carry flag
   |  |     0x0000a177      e52e           sbc 0x2e                    ; subtract memory from accumulator with borrow
   |  | ,=< 0x0000a179      f00b           beq 0x514108                ; branch on result zero
   |  |,==< 0x0000a17b      1004           bpl 0x514108                ; branch on result plus
   |  |||   0x0000a17d      a901           lda #0x01                   ; load accumulator with memory
   | ,====< 0x0000a17f      d002           bne 0x514108                ; branch on result not zero
   | ||`--> 0x0000a181      a9ff           lda #0xff                   ; load accumulator with memory
   | `----> 0x0000a183      4d7d99         eor 0x997d                  ; "exclusive-or" memory with accumulator
   |  | `-> 0x0000a186      8db79d         sta 0x9db7                  ; store accumulator in memory
   |  |     0x0000a189      206c4c         jsr 0x4c6c                  ; jump to new location saving return address
   |  |     0x0000a18c      0a             asl a                       ; shift left one bit (memory or accumulator)
   |  | ,=< 0x0000a18d      b01a           bcs 0x514108                ; branch on carry set
   |  | |   0x0000a18f      a901           lda #0x01                   ; load accumulator with memory
   |  | |   0x0000a191      8dd8a1         sta 0xa1d8                  ; store accumulator in memory
   |  | |   0x0000a194      203f9d         jsr 0x9d3f                  ; jump to new location saving return address
   |  |,==< 0x0000a197      b037           bcs 0x514108                ; branch on carry set
   |  |||   0x0000a199      a902           lda #0x02                   ; load accumulator with memory
   |  |||   0x0000a19b      8dd8a1         sta 0xa1d8                  ; store accumulator in memory
   |  |||   0x0000a19e      20629d         jsr 0x9d62                  ; jump to new location saving return address
   | ,====< 0x0000a1a1      b02d           bcs 0x514108                ; branch on carry set
   | ||||   0x0000a1a3      eed8a1         inc 0xa1d8                  ; increment memory by one
   |,=====< 0x0000a1a6      4cbda1         jmp 0xa1bd                  ; jump to new location
   |||||`-> 0x0000a1a9      a902           lda #0x02                   ; load accumulator with memory
   |||||    0x0000a1ab      8dd8a1         sta 0xa1d8                  ; store accumulator in memory
   |||||    0x0000a1ae      20629d         jsr 0x9d62                  ; jump to new location saving return address
   |||||,=< 0x0000a1b1      b01d           bcs 0x514108                ; branch on carry set
   ||||||   0x0000a1b3      a901           lda #0x01                   ; load accumulator with memory
   ||||||   0x0000a1b5      8dd8a1         sta 0xa1d8                  ; store accumulator in memory
   ||||||   0x0000a1b8      203f9d         jsr 0x9d3f                  ; jump to new location saving return address
  ,=======< 0x0000a1bb      b013           bcs 0x514108                ; branch on carry set
  ||`-----> 0x0000a1bd      a903           lda #0x03                   ; load accumulator with memory
  || ||||   0x0000a1bf      8dd7a1         sta 0xa1d7                  ; store accumulator in memory
  || ||||   0x0000a1c2      8dd8a1         sta 0xa1d8                  ; store accumulator in memory
  ||.-----> 0x0000a1c5      20859d         jsr 0x9d85                  ; jump to new location saving return address
  ========< 0x0000a1c8      b006           bcs 0x514108                ; branch on carry set
  |||||||   0x0000a1ca      ced7a1         dec 0xa1d7                  ; decrement memory by one
  ||`=====< 0x0000a1cd      d0f6           bne 0x514108                ; branch on result not zero
  || ||||   0x0000a1cf      60             rts                         ; return from subroutine
  `--`-``-> 0x0000a1d0      ae7c99         ldx 0x997c                  ; load index x with memory
   |  |     0x0000a1d3      2065a0         jsr 0xa065                  ; jump to new location saving return address
   |  |     0x0000a1d6      60             rts                         ; return from subroutine
   |  |     0x0000a1d7      00             brk                         ; force break
   |  |     0x0000a1d8      00             brk                         ; force break
   |  |     0x0000a1d9      00             brk                         ; force break
   |  |     0x0000a1da      ff0100         isb 0x0001,x
   |  |     0x0000a1dd      00             brk                         ; force break
   |  |     0x0000a1de      01ff           ora (0xff,x)                ; "or" memory with accumulator
   |  |     0x0000a1e0      00             brk                         ; force break
   |  |     0x0000a1e1      ae7c99         ldx 0x997c                  ; load index x with memory
   |  |     0x0000a1e4      bd404a         lda 0x4a40,x                ; load accumulator with memory
   |  |     0x0000a1e7      85a9           sta 0xa9                    ; store accumulator in memory
   |  |     0x0000a1e9      bd604a         lda 0x4a60,x                ; load accumulator with memory
   |  |     0x0000a1ec      85aa           sta 0xaa                    ; store accumulator in memory
   |  |     0x0000a1ee      bd204a         lda 0x4a20,x                ; load accumulator with memory
   |  |     0x0000a1f1      38             sec                         ; set carry flag
   |  |     0x0000a1f2      e92c           sbc #0x2c                   ; subtract memory from accumulator with borrow
   |  |     0x0000a1f4      0a             asl a                       ; shift left one bit (memory or accumulator)
   |  |     0x0000a1f5      a8             tay                         ; transfer accumulator to index y
   |  |     0x0000a1f6      b9d9a1         lda 0xa1d9,y                ; load accumulator with memory
   |  |     0x0000a1f9      85a7           sta 0xa7                    ; store accumulator in memory
   |  |     0x0000a1fb      b9daa1         lda 0xa1da,y                ; load accumulator with memory
   |  |     0x0000a1fe      85a8           sta 0xa8                    ; store accumulator in memory
   |  |     0x0000a200      200f9d         jsr 0x9d0f                  ; jump to new location saving return address
   |  | ,=< 0x0000a203      9004           bcc 0x514108                ; branch on carry clear
   |  | |   0x0000a205      2065a0         jsr 0xa065                  ; jump to new location saving return address
   |  | |   0x0000a208      38             sec                         ; set carry flag
   |  | `-> 0x0000a209      60             rts                         ; return from subroutine
  --------> 0x0000a20a      20d49e         jsr 0x9ed4                  ; jump to new location saving return address
   |  |     0x0000a20d      add29e         lda 0x9ed2                  ; load accumulator with memory
   |  | ,=< 0x0000a210      d01a           bne 0x514108                ; branch on result not zero
   |  | |   0x0000a212      add19e         lda 0x9ed1                  ; load accumulator with memory
   |  | |   0x0000a215      c904           cmp #0x04                   ; compare memory and accumulator
   |  |,==< 0x0000a217      b013           bcs 0x514108                ; branch on carry set
   |  |||   0x0000a219      20004c         jsr 0x4c00                  ; jump to new location saving return address
   |  |||   0x0000a21c      aa             tax                         ; transfer accumulator to index x
   |  |||   0x0000a21d      a0c2           ldy #0xc2                   ; load index y with memory
   |  |||   0x0000a21f      cfcfcf         dcp 0xcfcf
   |  |||   0x0000a222      cda1a0         cmp 0xa0a1                  ; compare memory and accumulator
   |  |||   0x0000a225      aa             tax                         ; transfer accumulator to index x
   |  |||   0x0000a226      8d0020         sta 0x2000                  ; store accumulator in memory
   |  |||   0x0000a229      169f           asl 0x9f,x                  ; shift left one bit (memory or accumulator)
   |  |||   0x0000a22b      60             rts                         ; return from subroutine
   |  |``-> 0x0000a22c      ae7c99         ldx 0x997c                  ; load index x with memory
   |  |     0x0000a22f      bd004a         lda 0x4a00,x                ; load accumulator with memory
   |  |     0x0000a232      38             sec                         ; set carry flag
   |  |     0x0000a233      e92c           sbc #0x2c                   ; subtract memory from accumulator with borrow
   |  |     0x0000a235      0a             asl a                       ; shift left one bit (memory or accumulator)
   |  |     0x0000a236      0a             asl a                       ; shift left one bit (memory or accumulator)
   |  |     0x0000a237      18             clc                         ; clear carry flag
   |  |     0x0000a238      6523           adc 0x23                    ; add memory to accumulator with carry
   |  |     0x0000a23a      a8             tay                         ; transfer accumulator to index y
   |  |     0x0000a23b      b99fa0         lda 0xa09f,y                ; load accumulator with memory
   |  |     0x0000a23e      c904           cmp #0x04                   ; compare memory and accumulator
   |  | ,=< 0x0000a240      f00e           beq 0x514108                ; branch on result zero
   |  | |   0x0000a242      fee04a         inc 0x4ae0,x                ; increment memory by one
   |  | |   0x0000a245      dde04a         cmp 0x4ae0,x                ; compare memory and accumulator
   |  |,==< 0x0000a248      b006           bcs 0x514108                ; branch on carry set
   |  |||   0x0000a24a      a900           lda #0x00                   ; load accumulator with memory
   |  |||   0x0000a24c      9de04a         sta 0x4ae0,x                ; store accumulator in memory
   |  |||   0x0000a24f      60             rts                         ; return from subroutine
   |  |``-> 0x0000a250      a523           lda 0x23                    ; load accumulator with memory
   |  | ,=< 0x0000a252      f01b           beq 0x514108                ; branch on result zero
   |  | |   0x0000a254      206c4c         jsr 0x4c6c                  ; jump to new location saving return address
   |  | |   0x0000a257      0a             asl a                       ; shift left one bit (memory or accumulator)
   |  |,==< 0x0000a258      b006           bcs 0x514108                ; branch on carry set
   |  |||   0x0000a25a      20e1a1         jsr 0xa1e1                  ; jump to new location saving return address
   | ,====< 0x0000a25d      9001           bcc 0x514108                ; branch on carry clear
   | ||||   0x0000a25f      60             rts                         ; return from subroutine
   | `-`--> 0x0000a260      add29e         lda 0x9ed2                  ; load accumulator with memory
   |  | |   0x0000a263      c904           cmp #0x04                   ; compare memory and accumulator
   |  |,==< 0x0000a265      9009           bcc 0x514108                ; branch on carry clear
   |  |||   0x0000a267      20afa0         jsr 0xa0af                  ; jump to new location saving return address
   | ,====< 0x0000a26a      b003           bcs 0x514108                ; branch on carry set
   | ||||   0x0000a26c      2055a1         jsr 0xa155                  ; jump to new location saving return address
   |.`--`-> 0x0000a26f      60             rts                         ; return from subroutine
   || |`--> 0x0000a270      2002a1         jsr 0xa102                  ; jump to new location saving return address
   |`=====< 0x0000a273      b0fa           bcs 0x514108                ; branch on carry set
   |  |     0x0000a275      2055a1         jsr 0xa155                  ; jump to new location saving return address
   |  |     0x0000a278      60             rts                         ; return from subroutine
   |  |     0x0000a279      a21f           ldx #0x1f                   ; load index x with memory
   |  | .-> 0x0000a27b      bd004a         lda 0x4a00,x                ; load accumulator with memory
   |  | |   0x0000a27e      8e7c99         stx 0x997c                  ; store index x in memory
   |  | |   0x0000a281      202d9b         jsr 0x9b2d                  ; jump to new location saving return address
   |  |,==< 0x0000a284      d00b           bne 0x514108                ; branch on result not zero
   |  |||   0x0000a286      20949b         jsr 0x9b94                  ; jump to new location saving return address
   | ,====< 0x0000a289      b003           bcs 0x514108                ; branch on carry set
   | ||||   0x0000a28b      20b89d         jsr 0x9db8                  ; jump to new location saving return address
   | `----> 0x0000a28e      ae7c99         ldx 0x997c                  ; load index x with memory
   |  |`--> 0x0000a291      ca             dex                         ; decrement index x by one
   |  | `=< 0x0000a292      10e7           bpl 0x514108                ; branch on result plus
   |  |     0x0000a294      60             rts                         ; return from subroutine
   |  |     0x0000a295      bd404a         lda 0x4a40,x                ; load accumulator with memory
   |  |     0x0000a298      85a9           sta 0xa9                    ; store accumulator in memory
   |  |     0x0000a29a      bd604a         lda 0x4a60,x                ; load accumulator with memory
   |  |     0x0000a29d      85aa           sta 0xaa                    ; store accumulator in memory
   |  |     0x0000a29f      20dc99         jsr 0x99dc                  ; jump to new location saving return address
   |  | ,=< 0x0000a2a2      9001           bcc 0x514108                ; branch on carry clear
   |  | |   0x0000a2a4      60             rts                         ; return from subroutine
   |  | `-> 0x0000a2a5      a900           lda #0x00                   ; load accumulator with memory
   |  |     0x0000a2a7      9d004a         sta 0x4a00,x                ; store accumulator in memory
   |  |     0x0000a2aa      9d204a         sta 0x4a20,x                ; store accumulator in memory
   |  |     0x0000a2ad      9de04a         sta 0x4ae0,x                ; store accumulator in memory
   |  |     0x0000a2b0      9dc04a         sta 0x4ac0,x                ; store accumulator in memory
   |  |     0x0000a2b3      9d0042         sta 0x4200,x                ; store accumulator in memory
   |  |     0x0000a2b6      9d404a         sta 0x4a40,x                ; store accumulator in memory
   |  |     0x0000a2b9      9d604a         sta 0x4a60,x                ; store accumulator in memory
   |  |     0x0000a2bc      9d804a         sta 0x4a80,x                ; store accumulator in memory
   |  |     0x0000a2bf      60             rts                         ; return from subroutine
   |  |     0x0000a2c0      a21f           ldx #0x1f                   ; load index x with memory
   |  | .-> 0x0000a2c2      bd004a         lda 0x4a00,x                ; load accumulator with memory
   |  | |   0x0000a2c5      8ed7a2         stx 0xa2d7                  ; store index x in memory
   |  | |   0x0000a2c8      202d9b         jsr 0x9b2d                  ; jump to new location saving return address
   |  |,==< 0x0000a2cb      d003           bne 0x514108                ; branch on result not zero
   |  |||   0x0000a2cd      2095a2         jsr 0xa295                  ; jump to new location saving return address
   |  |`--> 0x0000a2d0      aed7a2         ldx 0xa2d7                  ; load index x with memory
   |  | |   0x0000a2d3      ca             dex                         ; decrement index x by one
   |  | `=< 0x0000a2d4      10ec           bpl 0x514108                ; branch on result plus
   |  |     0x0000a2d6      60             rts                         ; return from subroutine
   |  |     0x0000a2d7      00             brk                         ; force break
   |  |     0x0000a2d8      a50c           lda 0x0c                    ; load accumulator with memory
   |  |     0x0000a2da      c912           cmp #0x12                   ; compare memory and accumulator
   |  | ,=< 0x0000a2dc      900d           bcc 0x514108                ; branch on carry clear
   |  | |   0x0000a2de      c916           cmp #0x16                   ; compare memory and accumulator
   |  |,==< 0x0000a2e0      b009           bcs 0x514108                ; branch on carry set
   |  |||   0x0000a2e2      a900           lda #0x00                   ; load accumulator with memory
   |  |||   0x0000a2e4      49ff           eor #0xff                   ; "exclusive-or" memory with accumulator
   |  |||   0x0000a2e6      8de3a2         sta 0xa2e3                  ; store accumulator in memory
   | ,====< 0x0000a2e9      103d           bpl 0x514108                ; branch on result plus
   | ||``-> 0x0000a2eb      a520           lda 0x20                    ; load accumulator with memory
   | ||     0x0000a2ed      c9d4           cmp #0xd4                   ; compare memory and accumulator
   | || ,=< 0x0000a2ef      f037           beq 0x514108                ; branch on result zero
   | || |   0x0000a2f1      c9d1           cmp #0xd1                   ; compare memory and accumulator
   | ||,==< 0x0000a2f3      d009           bne 0x514108                ; branch on result not zero
   | ||||   0x0000a2f5      a900           lda #0x00                   ; load accumulator with memory
   | ||||   0x0000a2f7      49ff           eor #0xff                   ; "exclusive-or" memory with accumulator
   | ||||   0x0000a2f9      8df6a2         sta 0xa2f6                  ; store accumulator in memory
   |,=====< 0x0000a2fc      102a           bpl 0x514108                ; branch on result plus
   ||||`--> 0x0000a2fe      2cf411         bit 0x11f4                  ; test bits in memory with accumulator
   ||||,==< 0x0000a301      1009           bpl 0x514108                ; branch on result plus
   ||||||   0x0000a303      a900           lda #0x00                   ; load accumulator with memory
   ||||||   0x0000a305      49ff           eor #0xff                   ; "exclusive-or" memory with accumulator
   ||||||   0x0000a307      8d04a3         sta 0xa304                  ; store accumulator in memory
  ,=======< 0x0000a30a      101c           bpl 0x514108                ; branch on result plus
  |||||`--> 0x0000a30c      ba             tsx                         ; transfer stack pointer to index x
  ||||| |   0x0000a30d      8e2aa3         stx 0xa32a                  ; store index x in memory
  ||||| |   0x0000a310      a52d           lda 0x2d                    ; load accumulator with memory
  ||||| |   0x0000a312      8d404a         sta 0x4a40                  ; store accumulator in memory
  ||||| |   0x0000a315      a52e           lda 0x2e                    ; load accumulator with memory
  ||||| |   0x0000a317      8d604a         sta 0x4a60                  ; store accumulator in memory
  ||||| |   0x0000a31a      20b599         jsr 0x99b5                  ; jump to new location saving return address
  |||||,==< 0x0000a31d      b003           bcs 0x514108                ; branch on carry set
  |||||||   0x0000a31f      20d59a         jsr 0x9ad5                  ; jump to new location saving return address
  |||||`--> 0x0000a322      2079a2         jsr 0xa279                  ; jump to new location saving return address
  ||||| |   0x0000a325      20c0a2         jsr 0xa2c0                  ; jump to new location saving return address
  `-``--`-> 0x0000a328      60             rts                         ; return from subroutine
   |  |     0x0000a329      00             brk                         ; force break
   |  |     0x0000a32a      00             brk                         ; force break
  --------> 0x0000a32b      20214c         jsr 0x4c21                  ; jump to new location saving return address
   |  |     0x0000a32e      c905           cmp #0x05                   ; compare memory and accumulator
   |  | ,=< 0x0000a330      f032           beq 0x514108                ; branch on result zero
   |  | |   0x0000a332      c91e           cmp #0x1e                   ; compare memory and accumulator
   |  |,==< 0x0000a334      f010           beq 0x514108                ; branch on result zero
   |  |||   0x0000a336      c91f           cmp #0x1f                   ; compare memory and accumulator
   | ,====< 0x0000a338      f00c           beq 0x514108                ; branch on result zero
   | ||||   0x0000a33a      c904           cmp #0x04                   ; compare memory and accumulator
   |,=====< 0x0000a33c      9026           bcc 0x514108                ; branch on carry clear
   ||||||   0x0000a33e      c910           cmp #0x10                   ; compare memory and accumulator
  ,=======< 0x0000a340      b022           bcs 0x514108                ; branch on carry set
  |||||||   0x0000a342      c909           cmp #0x09                   ; compare memory and accumulator
  ========< 0x0000a344      b01f           bcs 0x514108                ; branch on carry set
  |||`-`--> 0x0000a346      20d8a2         jsr 0xa2d8                  ; jump to new location saving return address
  ||| | |   0x0000a349      2086a3         jsr 0xa386                  ; jump to new location saving return address
  ||| | |   0x0000a34c      20004c         jsr 0x4c00                  ; jump to new location saving return address
  ||| | |   0x0000a34f      d3ec           dcp (0xec),y
  ||| | |   0x0000a351      eff7a0         isb 0xa0f7
  ||| | |   0x0000a354      f0f2           beq 0x514108                ; branch on result zero
  ||| | |   0x0000a356      efe7f2         isb 0xf2e7
  ||| | |   0x0000a359      e5f3           sbc 0xf3                    ; subtract memory from accumulator with borrow
  ||| | |   0x0000a35b      f3a1           isb (0xa1),y
  ||| | |   0x0000a35d      8d00a9         sta 0xa900                  ; store accumulator in memory
  ||| | |   0x0000a360      02             hlt
  ||| | |   0x0000a361      202d4c         jsr 0x4c2d                  ; jump to new location saving return address
  `-`---`-> 0x0000a364      60             rts                         ; return from subroutine
  --------> 0x0000a365      20d8a2         jsr 0xa2d8                  ; jump to new location saving return address
   |  |     0x0000a368      2086a3         jsr 0xa386                  ; jump to new location saving return address
   |  |     0x0000a36b      20d8a2         jsr 0xa2d8                  ; jump to new location saving return address
   |  |     0x0000a36e      2086a3         jsr 0xa386                  ; jump to new location saving return address
   |  |     0x0000a371      20004c         jsr 0x4c00                  ; jump to new location saving return address
   |  |     0x0000a374      d6e5           dec 0xe5,x                  ; decrement memory by one
   |  |     0x0000a376      f2             hlt
   |  |     0x0000a377      f9a0f3         sbc 0xf3a0,y                ; subtract memory from accumulator with borrow
   |  |     0x0000a37a      eceff7         cpx 0xf7ef                  ; compare memory and index x
   |  |     0x0000a37d      a18d           lda (0x8d,x)                ; load accumulator with memory
   |  |     0x0000a37f      00             brk                         ; force break
   |  |     0x0000a380      a904           lda #0x04                   ; load accumulator with memory
   |  |     0x0000a382      202d4c         jsr 0x4c2d                  ; jump to new location saving return address
   |  |     0x0000a385      60             rts                         ; return from subroutine
   |  |     0x0000a386      a21f           ldx #0x1f                   ; load index x with memory
   |  | .-> 0x0000a388      bd804a         lda 0x4a80,x                ; load accumulator with memory
   |  | |   0x0000a38b      c509           cmp 0x09                    ; compare memory and accumulator
   |  |,==< 0x0000a38d      d01d           bne 0x514108                ; branch on result not zero
   |  |||   0x0000a38f      bd404a         lda 0x4a40,x                ; load accumulator with memory
   |  |||   0x0000a392      38             sec                         ; set carry flag
   |  |||   0x0000a393      e52d           sbc 0x2d                    ; subtract memory from accumulator with borrow
   |  |||   0x0000a395      208c9b         jsr 0x9b8c                  ; jump to new location saving return address
   |  |||   0x0000a398      c906           cmp #0x06                   ; compare memory and accumulator
   | ,====< 0x0000a39a      b010           bcs 0x514108                ; branch on carry set
   | ||||   0x0000a39c      bd604a         lda 0x4a60,x                ; load accumulator with memory
   | ||||   0x0000a39f      38             sec                         ; set carry flag
   | ||||   0x0000a3a0      e52e           sbc 0x2e                    ; subtract memory from accumulator with borrow
   | ||||   0x0000a3a2      208c9b         jsr 0x9b8c                  ; jump to new location saving return address
   | ||||   0x0000a3a5      c906           cmp #0x06                   ; compare memory and accumulator
   |,=====< 0x0000a3a7      b003           bcs 0x514108                ; branch on carry set
  ========< 0x0000a3a9      4c1b4c         jmp 0x4c1b                  ; jump to new location
   |``-`--> 0x0000a3ac      ca             dex                         ; decrement index x by one
   |  | `=< 0x0000a3ad      d0d9           bne 0x514108                ; branch on result not zero
   |  |     0x0000a3af      60             rts                         ; return from subroutine
   |  |     0x0000a3b0      00             brk                         ; force break
   |  |     0x0000a3b1      00             brk                         ; force break
   |  |     0x0000a3b2      0101           ora (0x01,x)                ; "or" memory with accumulator
   |  |     0x0000a3b4      0100           ora (0x00,x)                ; "or" memory with accumulator
   |  |     0x0000a3b6      00             brk                         ; force break
   |  |     0x0000a3b7      0101           ora (0x01,x)                ; "or" memory with accumulator
   |  |     0x0000a3b9      00             brk                         ; force break
   |  |     0x0000a3ba      00             brk                         ; force break
   |  |     0x0000a3bb      00             brk                         ; force break
   |  |     0x0000a3bc      00             brk                         ; force break
   |  |     0x0000a3bd      00             brk                         ; force break
   |  |     0x0000a3be      0101           ora (0x01,x)                ; "or" memory with accumulator
   |  |     0x0000a3c0      00             brk                         ; force break
   |  |     0x0000a3c1      00             brk                         ; force break
   |  |     0x0000a3c2      00             brk                         ; force break
   |  |     0x0000a3c3      0101           ora (0x01,x)                ; "or" memory with accumulator
   |  |     0x0000a3c5      00             brk                         ; force break
   |  |     0x0000a3c6      00             brk                         ; force break
   |  |     0x0000a3c7      00             brk                         ; force break
   |  |     0x0000a3c8      0101           ora (0x01,x)                ; "or" memory with accumulator
   |  |     0x0000a3ca      00             brk                         ; force break
   |  |     0x0000a3cb      00             brk                         ; force break
   |  |     0x0000a3cc      00             brk                         ; force break
   |  |     0x0000a3cd      00             brk                         ; force break
   |  |     0x0000a3ce      0101           ora (0x01,x)                ; "or" memory with accumulator
   |  |     0x0000a3d0      0101           ora (0x01,x)                ; "or" memory with accumulator
   |  |     0x0000a3d2      0101           ora (0x01,x)                ; "or" memory with accumulator
   |  |     0x0000a3d4      0100           ora (0x00,x)                ; "or" memory with accumulator
   |  |     0x0000a3d6      00             brk                         ; force break
   |  |     0x0000a3d7      00             brk                         ; force break
   |  |     0x0000a3d8      00             brk                         ; force break
   |  |     0x0000a3d9      00             brk                         ; force break
   |  |     0x0000a3da      00             brk                         ; force break
   |  |     0x0000a3db      0101           ora (0x01,x)                ; "or" memory with accumulator
   |  |     0x0000a3dd      0100           ora (0x00,x)                ; "or" memory with accumulator
   |  |     0x0000a3df      00             brk                         ; force break
   |  |     0x0000a3e0      00             brk                         ; force break
   |  |     0x0000a3e1      00             brk                         ; force break
   |  |     0x0000a3e2      00             brk                         ; force break
   |  |     0x0000a3e3      00             brk                         ; force break
   |  |     0x0000a3e4      00             brk                         ; force break
   |  |     0x0000a3e5      00             brk                         ; force break
   |  |     0x0000a3e6      00             brk                         ; force break
   |  |     0x0000a3e7      00             brk                         ; force break
   |  |     0x0000a3e8      00             brk                         ; force break
   |  |     0x0000a3e9      00             brk                         ; force break
   |  |     0x0000a3ea      00             brk                         ; force break
   |  |     0x0000a3eb      00             brk                         ; force break
   |  |     0x0000a3ec      00             brk                         ; force break
   |  |     0x0000a3ed      2478           bit 0x78                    ; test bits in memory with accumulator
   |  | ,=< 0x0000a3ef      101f           bpl 0x514108                ; branch on result plus
   |  | |   0x0000a3f1      209f4c         jsr 0x4c9f                  ; jump to new location saving return address
   |  | |   0x0000a3f4      a940           lda #0x40                   ; load accumulator with memory
   |  |.--> 0x0000a3f6      a020           ldy #0x20                   ; load index y with memory
   | .----> 0x0000a3f8      aa             tax                         ; transfer accumulator to index x
   |.-----> 0x0000a3f9      48             pha                         ; push accumulator on stack
   ||||||   0x0000a3fa      68             pla                         ; pull accumulator from stack
   ||||||   0x0000a3fb      ca             dex                         ; decrement index x by one
   |`=====< 0x0000a3fc      d0fb           bne 0x514108                ; branch on result not zero
   | ||||   0x0000a3fe      aa             tax                         ; transfer accumulator to index x
   | ||||   0x0000a3ff      209c4c         jsr 0x4c9c                  ; jump to new location saving return address
   | ||||   0x0000a402      8a             txa                         ; transfer index x to accumulator
   | ||||   0x0000a403      88             dey                         ; decrement index y by one
   | `====< 0x0000a404      d0f2           bne 0x514108                ; branch on result not zero
   |  |||   0x0000a406      18             clc                         ; clear carry flag
   |  |||   0x0000a407      6901           adc #0x01                   ; add memory to accumulator with carry
   |  |||   0x0000a409      c9c0           cmp #0xc0                   ; compare memory and accumulator
   |  |`==< 0x0000a40b      90e9           bcc 0x514108                ; branch on carry clear
   |  | |   0x0000a40d      20a24c         jsr 0x4ca2                  ; jump to new location saving return address
   |  | `-> 0x0000a410      60             rts                         ; return from subroutine
   |  |     0x0000a411      2409           bit 0x09                    ; test bits in memory with accumulator
   |  | ,=< 0x0000a413      1048           bpl 0x514108                ; branch on result plus
   |  | |   0x0000a415      a203           ldx #0x03                   ; load index x with memory
   |  |.--> 0x0000a417      bd5ea4         lda 0xa45e,x                ; load accumulator with memory
   |  |||   0x0000a41a      85fc           sta 0xfc                    ; store accumulator in memory
   |  |||   0x0000a41c      bd62a4         lda 0xa462,x                ; load accumulator with memory
   |  |||   0x0000a41f      85fd           sta 0xfd                    ; store accumulator in memory
   |  |||   0x0000a421      a000           ldy #0x00                   ; load index y with memory
   |  |||   0x0000a423      b1fc           lda (0xfc),y                ; load accumulator with memory
   | ,====< 0x0000a425      3033           bmi 0x514108                ; branch on result minus
   | ||||   0x0000a427      8a             txa                         ; transfer index x to accumulator
   |,=====< 0x0000a428      f005           beq 0x514108                ; branch on result zero
   ||||||   0x0000a42a      bd8811         lda 0x1188,x                ; load accumulator with memory
  ,=======< 0x0000a42d      302b           bmi 0x514108                ; branch on result minus
  ||`-----> 0x0000a42f      bc76a4         ldy 0xa476,x                ; load index y with memory
  || ||||   0x0000a432      a9ff           lda #0xff                   ; load accumulator with memory
  || ||||   0x0000a434      99804a         sta 0x4a80,y                ; store accumulator in memory
  || ||||   0x0000a437      bd66a4         lda 0xa466,x                ; load accumulator with memory
  || ||||   0x0000a43a      99004a         sta 0x4a00,y                ; store accumulator in memory
  || ||||   0x0000a43d      99204a         sta 0x4a20,y                ; store accumulator in memory
  || ||||   0x0000a440      bd6aa4         lda 0xa46a,x                ; load accumulator with memory
  || ||||   0x0000a443      99404a         sta 0x4a40,y                ; store accumulator in memory
  || ||||   0x0000a446      bd6ea4         lda 0xa46e,x                ; load accumulator with memory
  || ||||   0x0000a449      99604a         sta 0x4a60,y                ; store accumulator in memory
  || ||||   0x0000a44c      bd72a4         lda 0xa472,x                ; load accumulator with memory
  || ||||   0x0000a44f      99c04a         sta 0x4ac0,y                ; store accumulator in memory
  --------> 0x0000a452      a900           lda #0x00                   ; load accumulator with memory
  |||||||   0x0000a454      99e04a         sta 0x4ae0,y                ; store accumulator in memory
  |||||||   0x0000a457      99a04a         sta 0x4aa0,y                ; store accumulator in memory
  `--`----> 0x0000a45a      ca             dex                         ; decrement index x by one
   || |`==< 0x0000a45b      10ba           bpl 0x514108                ; branch on result plus
   || | `-> 0x0000a45d      60             rts                         ; return from subroutine
   || |     0x0000a45e      f8             sed                         ; set decimal mode
  ========< 0x0000a45f      f0f1           beq 0x514108                ; branch on result zero
   || |     0x0000a461      f2             hlt
   || |     0x0000a462      1111           ora (0x11),y                ; "or" memory with accumulator
   || |     0x0000a464      1111           ora (0x11),y                ; "or" memory with accumulator
   || | .-> 0x0000a466      b7b4           lax 0xb4,y
   || | |   0x0000a468      b4b4           ldy 0xb4,x                  ; load index y with memory
   || | |   0x0000a46a      69c0           adc #0xc0                   ; add memory to accumulator with carry
   || | |   0x0000a46c      82b0           nop #0xb0                   ; no operation
   |  | |   0x0000a46e      e150           sbc (0x50,x)                ; subtract memory from accumulator with borrow
   |  |||   0x0000a470      41b8           eor (0xb8,x)                ; "exclusive-or" memory with accumulator
   |  |||   0x0000a472      f3f0           isb (0xf0),y
   |  ||    0x0000a474      f1f2           sbc (0xf2),y                ; subtract memory from accumulator with borrow
   |  ||    0x0000a476      1c1d1e         nop 0x1e1d,x                ; no operation
   |  ||    0x0000a479      1fffff         slo 0xffff,x
   |  ||    0x0000a47c      ffffff         isb 0xffff,x
   |  ||    0x0000a47f      ffffff         isb 0xffff,x
   |  ||    0x0000a482      ffffff         isb 0xffff,x
   |  ||    0x0000a485      ffffff         isb 0xffff,x
   |  ||    0x0000a488      ffffff         isb 0xffff,x
   |  ||    0x0000a48b      ffffff         isb 0xffff,x
   |  ||    0x0000a48e      ffffff         isb 0xffff,x
   |  ||    0x0000a491      ffffff         isb 0xffff,x
   |  ||    0x0000a494      ffffff         isb 0xffff,x
   |  ||    0x0000a497      ffffff         isb 0xffff,x
   |  ||    0x0000a49a      ffffff         isb 0xffff,x
   |  ||    0x0000a49d      ffffff         isb 0xffff,x
   |  ||    0x0000a4a0      ffffff         isb 0xffff,x
   |  ||    0x0000a4a3      ffffff         isb 0xffff,x
   |  ||    0x0000a4a6      ffffff         isb 0xffff,x
   |  ||    0x0000a4a9      ffffff         isb 0xffff,x
   |  ||    0x0000a4ac      ffffff         isb 0xffff,x
   |  ||    0x0000a4af      ffffff         isb 0xffff,x
   |  |`--> 0x0000a4b2      ffffff         isb 0xffff,x
   |  |     0x0000a4b5      ffffff         isb 0xffff,x
   |  |     0x0000a4b8      ffffff         isb 0xffff,x
   |  |     0x0000a4bb      ffffff         isb 0xffff,x
   |  |     0x0000a4be      ffffff         isb 0xffff,x
   |  |     0x0000a4c1      ffffff         isb 0xffff,x
   |  |     0x0000a4c4      ffffff         isb 0xffff,x
   |  |     0x0000a4c7      ffffff         isb 0xffff,x
   |  |     0x0000a4ca      ffffff         isb 0xffff,x
   |  |     0x0000a4cd      ffffff         isb 0xffff,x
   |  |     0x0000a4d0      ffffff         isb 0xffff,x
   |  |     0x0000a4d3      ffffff         isb 0xffff,x
   |  |     0x0000a4d6      ffffff         isb 0xffff,x
   |  |     0x0000a4d9      ffffff         isb 0xffff,x
   |  |     0x0000a4dc      ffffff         isb 0xffff,x
   |  |     0x0000a4df      ffffff         isb 0xffff,x
   |  |     0x0000a4e2      ffffff         isb 0xffff,x
   |  |     0x0000a4e5      ffffff         isb 0xffff,x
   |  |     0x0000a4e8      ffffff         isb 0xffff,x
   |  |     0x0000a4eb      ffffff         isb 0xffff,x
   |  |     0x0000a4ee      ffffff         isb 0xffff,x
   |  |     0x0000a4f1      ffffff         isb 0xffff,x
   |  |     0x0000a4f4      ffffff         isb 0xffff,x
   |  |     0x0000a4f7      ffffff         isb 0xffff,x
   |  |     0x0000a4fa      ffffff         isb 0xffff,x
   |  |     0x0000a4fd      ffffff         isb 0xffff,x
   |  |     0x0000a500      ffffff         isb 0xffff,x
   |  |     0x0000a503      ffffff         isb 0xffff,x
   |  |     0x0000a506      ffffff         isb 0xffff,x
   |  |     0x0000a509      ffffff         isb 0xffff,x
   |  |     0x0000a50c      ffffff         isb 0xffff,x
   |  |     0x0000a50f      ffffff         isb 0xffff,x
   |  |     0x0000a512      ffffff         isb 0xffff,x
   |  |     0x0000a515      ffffff         isb 0xffff,x
   |  |     0x0000a518      ffffff         isb 0xffff,x
   |  |     0x0000a51b      ffffff         isb 0xffff,x
   |  |     0x0000a51e      ffffff         isb 0xffff,x
   |  |     0x0000a521      ffffff         isb 0xffff,x
   |  |     0x0000a524      ffffff         isb 0xffff,x
   |  |     0x0000a527      ffffff         isb 0xffff,x
   |  |     0x0000a52a      ffffff         isb 0xffff,x
   |  |     0x0000a52d      ffffff         isb 0xffff,x
   |  |     0x0000a530      ffffff         isb 0xffff,x
   |  |     0x0000a533      ffffff         isb 0xffff,x
   |  |     0x0000a536      ffffff         isb 0xffff,x
   |  |     0x0000a539      ffffff         isb 0xffff,x
   |  |     0x0000a53c      ffffff         isb 0xffff,x
   |  |     0x0000a53f      ffffff         isb 0xffff,x
   |  |     0x0000a542      ffffff         isb 0xffff,x
   |  |     0x0000a545      ffffff         isb 0xffff,x
   |  |     0x0000a548      ffffff         isb 0xffff,x
   |  |     0x0000a54b      ffffff         isb 0xffff,x
   |  |     0x0000a54e      ffffff         isb 0xffff,x
   |  |     0x0000a551      ffffff         isb 0xffff,x
   |  |     0x0000a554      ffffff         isb 0xffff,x
   |  |     0x0000a557      ffffff         isb 0xffff,x
   |  |     0x0000a55a      ffffff         isb 0xffff,x
   |  |     0x0000a55d      ffffff         isb 0xffff,x
   |  `---> 0x0000a560      ffffff         isb 0xffff,x
   |        0x0000a563      ffffff         isb 0xffff,x
   |        0x0000a566      ffffff         isb 0xffff,x
   |        0x0000a569      ffffff         isb 0xffff,x
   |        0x0000a56c      ffffff         isb 0xffff,x
   |        0x0000a56f      ffffff         isb 0xffff,x
   |        0x0000a572      ffffff         isb 0xffff,x
   |        0x0000a575      ffffff         isb 0xffff,x
   |        0x0000a578      ffffff         isb 0xffff,x
   |        0x0000a57b      ffffff         isb 0xffff,x
   |        0x0000a57e      ffffff         isb 0xffff,x
   |        0x0000a581      ffffff         isb 0xffff,x
   |        0x0000a584      ffffff         isb 0xffff,x
   |        0x0000a587      ffffff         isb 0xffff,x
   |        0x0000a58a      ffffff         isb 0xffff,x
   |        0x0000a58d      ffffff         isb 0xffff,x
   |        0x0000a590      ffffff         isb 0xffff,x
   |        0x0000a593      ffffff         isb 0xffff,x
   |        0x0000a596      ffffff         isb 0xffff,x
   |        0x0000a599      ffffff         isb 0xffff,x
   |        0x0000a59c      ffffff         isb 0xffff,x
   |        0x0000a59f      ffffff         isb 0xffff,x
   |        0x0000a5a2      ffffff         isb 0xffff,x
   |        0x0000a5a5      ffffff         isb 0xffff,x
   |        0x0000a5a8      ffffff         isb 0xffff,x
   |        0x0000a5ab      ffffff         isb 0xffff,x
   |        0x0000a5ae      ffffff         isb 0xffff,x
   |        0x0000a5b1      ffffff         isb 0xffff,x
   |        0x0000a5b4      ffffff         isb 0xffff,x
   |        0x0000a5b7      ffffff         isb 0xffff,x
   |        0x0000a5ba      ffffff         isb 0xffff,x
   |        0x0000a5bd      ffffff         isb 0xffff,x
   |        0x0000a5c0      ffffff         isb 0xffff,x
   |        0x0000a5c3      ffffff         isb 0xffff,x
   |        0x0000a5c6      ffffff         isb 0xffff,x
   |        0x0000a5c9      ffffff         isb 0xffff,x
   |        0x0000a5cc      ffffff         isb 0xffff,x
   |        0x0000a5cf      ffffff         isb 0xffff,x
   |        0x0000a5d2      ffffff         isb 0xffff,x
   |        0x0000a5d5      ffffff         isb 0xffff,x
   |        0x0000a5d8      ffffff         isb 0xffff,x
   |        0x0000a5db      ffffff         isb 0xffff,x
   |        0x0000a5de      ffffff         isb 0xffff,x
   |        0x0000a5e1      ffffff         isb 0xffff,x
   |        0x0000a5e4      ffffff         isb 0xffff,x
   |        0x0000a5e7      ffffff         isb 0xffff,x
   |        0x0000a5ea      ffffff         isb 0xffff,x
   |        0x0000a5ed      ffffff         isb 0xffff,x
   |        0x0000a5f0      ffffff         isb 0xffff,x
   |        0x0000a5f3      ffffff         isb 0xffff,x
   |        0x0000a5f6      ffffff         isb 0xffff,x
   |        0x0000a5f9      ffffff         isb 0xffff,x
   |        0x0000a5fc      ffffff         isb 0xffff,x
   |        0x0000a5ff      ffffff         isb 0xffff,x
   |        0x0000a602      ffffff         isb 0xffff,x
   |        0x0000a605      ffffff         isb 0xffff,x
   |        0x0000a608      ffffff         isb 0xffff,x
   |        0x0000a60b      ffffff         isb 0xffff,x
   |        0x0000a60e      ffffff         isb 0xffff,x
   |        0x0000a611      ffffff         isb 0xffff,x
   |        0x0000a614      ffffff         isb 0xffff,x
   |        0x0000a617      ffffff         isb 0xffff,x
   |        0x0000a61a      ffffff         isb 0xffff,x
   |        0x0000a61d      ffffff         isb 0xffff,x
   |        0x0000a620      ffffff         isb 0xffff,x
   |        0x0000a623      ffffff         isb 0xffff,x
   |        0x0000a626      ffffff         isb 0xffff,x
   |        0x0000a629      ffffff         isb 0xffff,x
   |        0x0000a62c      ffffff         isb 0xffff,x
   |        0x0000a62f      ffffff         isb 0xffff,x
   |        0x0000a632      ffffff         isb 0xffff,x
   |        0x0000a635      ffffff         isb 0xffff,x
   |        0x0000a638      ffffff         isb 0xffff,x
   |        0x0000a63b      ffffff         isb 0xffff,x
   |        0x0000a63e      ffffff         isb 0xffff,x
   |        0x0000a641      ffffff         isb 0xffff,x
   |        0x0000a644      ffffff         isb 0xffff,x
   |        0x0000a647      ffffff         isb 0xffff,x
   |        0x0000a64a      ffffff         isb 0xffff,x
   |        0x0000a64d      ffffff         isb 0xffff,x
   |        0x0000a650      ffffff         isb 0xffff,x
   |        0x0000a653      ffffff         isb 0xffff,x
   |        0x0000a656      ffffff         isb 0xffff,x
   |        0x0000a659      ffffff         isb 0xffff,x
   |        0x0000a65c      ffffff         isb 0xffff,x
   |        0x0000a65f      ffffff         isb 0xffff,x
   |        0x0000a662      ffffff         isb 0xffff,x
   |        0x0000a665      ffffff         isb 0xffff,x
   |        0x0000a668      ffffff         isb 0xffff,x
   |        0x0000a66b      ffffff         isb 0xffff,x
   |        0x0000a66e      ffffff         isb 0xffff,x
   |        0x0000a671      ffffff         isb 0xffff,x
   |        0x0000a674      ffffff         isb 0xffff,x
   |        0x0000a677      ffffff         isb 0xffff,x
   |        0x0000a67a      ffffff         isb 0xffff,x
   |        0x0000a67d      ffffff         isb 0xffff,x
   |        0x0000a680      ffffff         isb 0xffff,x
   |        0x0000a683      ffffff         isb 0xffff,x
   |        0x0000a686      ffffff         isb 0xffff,x
   |        0x0000a689      ffffff         isb 0xffff,x
   |        0x0000a68c      ffffff         isb 0xffff,x
   |        0x0000a68f      ffffff         isb 0xffff,x
   |        0x0000a692      ffffff         isb 0xffff,x
   |        0x0000a695      ffffff         isb 0xffff,x
   |        0x0000a698      ffffff         isb 0xffff,x
   |        0x0000a69b      ffffff         isb 0xffff,x
   |        0x0000a69e      ffffff         isb 0xffff,x
   |        0x0000a6a1      ffffff         isb 0xffff,x
   |        0x0000a6a4      ffffff         isb 0xffff,x
   |        0x0000a6a7      ffffff         isb 0xffff,x
   |        0x0000a6aa      ffffff         isb 0xffff,x
   |        0x0000a6ad      ffffff         isb 0xffff,x
   |        0x0000a6b0      ffffff         isb 0xffff,x
   |        0x0000a6b3      ffffff         isb 0xffff,x
   |        0x0000a6b6      ffffff         isb 0xffff,x
   |        0x0000a6b9      ffffff         isb 0xffff,x
   |        0x0000a6bc      ffffff         isb 0xffff,x
   |        0x0000a6bf      ffffff         isb 0xffff,x
   |        0x0000a6c2      ffffff         isb 0xffff,x
   |        0x0000a6c5      ffffff         isb 0xffff,x
   |        0x0000a6c8      ffffff         isb 0xffff,x
   |        0x0000a6cb      ffffff         isb 0xffff,x
   |        0x0000a6ce      ffffff         isb 0xffff,x
   |        0x0000a6d1      ffffff         isb 0xffff,x
   |        0x0000a6d4      ffffff         isb 0xffff,x
   |        0x0000a6d7      ffffff         isb 0xffff,x
   |        0x0000a6da      ffffff         isb 0xffff,x
   |        0x0000a6dd      ffffff         isb 0xffff,x
   |        0x0000a6e0      ffffff         isb 0xffff,x
   |        0x0000a6e3      ffffff         isb 0xffff,x
   |        0x0000a6e6      ffffff         isb 0xffff,x
   |        0x0000a6e9      ffffff         isb 0xffff,x
   |        0x0000a6ec      ffffff         isb 0xffff,x
   |        0x0000a6ef      ffffff         isb 0xffff,x
   |        0x0000a6f2      ffffff         isb 0xffff,x
   |        0x0000a6f5      ffffff         isb 0xffff,x
   |        0x0000a6f8      ffffff         isb 0xffff,x
   |        0x0000a6fb      ffffff         isb 0xffff,x
   |        0x0000a6fe      ffffff         isb 0xffff,x
   |        0x0000a701      ffffff         isb 0xffff,x
   |        0x0000a704      ffffff         isb 0xffff,x
   |        0x0000a707      ffffff         isb 0xffff,x
   |        0x0000a70a      ffffff         isb 0xffff,x
   |        0x0000a70d      ffffff         isb 0xffff,x
            0x0000a710      ffffff         isb 0xffff,x
            0x0000a713      ffffff         isb 0xffff,x
            0x0000a716      ffffff         isb 0xffff,x
            0x0000a719      ffffff         isb 0xffff,x
            0x0000a71c      ffffff         isb 0xffff,x
            0x0000a71f      ffffff         isb 0xffff,x
            0x0000a722      ffffff         isb 0xffff,x
            0x0000a725      ffffff         isb 0xffff,x
            0x0000a728      ffffff         isb 0xffff,x
            0x0000a72b      ffffff         isb 0xffff,x
            0x0000a72e      ffffff         isb 0xffff,x
            0x0000a731      ffffff         isb 0xffff,x
            0x0000a734      ffffff         isb 0xffff,x
            0x0000a737      ffffff         isb 0xffff,x
            0x0000a73a      ffffff         isb 0xffff,x
            0x0000a73d      ffffff         isb 0xffff,x
            0x0000a740      ffffff         isb 0xffff,x
            0x0000a743      ffffff         isb 0xffff,x
            0x0000a746      ffffff         isb 0xffff,x
            0x0000a749      ffffff         isb 0xffff,x
            0x0000a74c      ffffff         isb 0xffff,x
            0x0000a74f      ffffff         isb 0xffff,x
            0x0000a752      ffffff         isb 0xffff,x
            0x0000a755      ffffff         isb 0xffff,x
            0x0000a758      ffffff         isb 0xffff,x
            0x0000a75b      ffffff         isb 0xffff,x
            0x0000a75e      ffffff         isb 0xffff,x
            0x0000a761      ffffff         isb 0xffff,x
            0x0000a764      ffffff         isb 0xffff,x
            0x0000a767      ffffff         isb 0xffff,x
            0x0000a76a      ffffff         isb 0xffff,x
            0x0000a76d      ffffff         isb 0xffff,x
            0x0000a770      ffffff         isb 0xffff,x
            0x0000a773      ffffff         isb 0xffff,x
            0x0000a776      ffffff         isb 0xffff,x
            0x0000a779      ffffff         isb 0xffff,x
            0x0000a77c      ffffff         isb 0xffff,x
            0x0000a77f      ffffff         isb 0xffff,x
            0x0000a782      ffffff         isb 0xffff,x
            0x0000a785      ffffff         isb 0xffff,x
            0x0000a788      ffffff         isb 0xffff,x
            0x0000a78b      ffffff         isb 0xffff,x
            0x0000a78e      ffffff         isb 0xffff,x
            0x0000a791      ffffff         isb 0xffff,x
            0x0000a794      ffffff         isb 0xffff,x
            0x0000a797      ffffff         isb 0xffff,x
            0x0000a79a      ffffff         isb 0xffff,x
            0x0000a79d      ffffff         isb 0xffff,x
            0x0000a7a0      ffffff         isb 0xffff,x
            0x0000a7a3      ffffff         isb 0xffff,x
            0x0000a7a6      ffffff         isb 0xffff,x
            0x0000a7a9      ffffff         isb 0xffff,x
            0x0000a7ac      ffffff         isb 0xffff,x
            0x0000a7af      ffffff         isb 0xffff,x
            0x0000a7b2      ffffff         isb 0xffff,x
            0x0000a7b5      ffffff         isb 0xffff,x
            0x0000a7b8      ffffff         isb 0xffff,x
            0x0000a7bb      ffffff         isb 0xffff,x
            0x0000a7be      ffffff         isb 0xffff,x
            0x0000a7c1      ffffff         isb 0xffff,x
            0x0000a7c4      ffffff         isb 0xffff,x
            0x0000a7c7      ffffff         isb 0xffff,x
            0x0000a7ca      ffffff         isb 0xffff,x
            0x0000a7cd      ffffff         isb 0xffff,x
            0x0000a7d0      ffffff         isb 0xffff,x
            0x0000a7d3      ffffff         isb 0xffff,x
            0x0000a7d6      ffffff         isb 0xffff,x
            0x0000a7d9      ffffff         isb 0xffff,x
            0x0000a7dc      ffffff         isb 0xffff,x
            0x0000a7df      ffffff         isb 0xffff,x
            0x0000a7e2      ffffff         isb 0xffff,x
            0x0000a7e5      ffffff         isb 0xffff,x
            0x0000a7e8      ffffff         isb 0xffff,x
            0x0000a7eb      ffffff         isb 0xffff,x
            0x0000a7ee      ffffff         isb 0xffff,x
            0x0000a7f1      ffffff         isb 0xffff,x
            0x0000a7f4      ffffff         isb 0xffff,x
            0x0000a7f7      ffffff         isb 0xffff,x
            0x0000a7fa      ffffff         isb 0xffff,x
            0x0000a7fd      ffffff         isb 0xffff,x
            0x0000a800      ffffff         isb 0xffff,x
            0x0000a803      ffffff         isb 0xffff,x
            0x0000a806      ffffff         isb 0xffff,x
            0x0000a809      ffffff         isb 0xffff,x
            0x0000a80c      ffffff         isb 0xffff,x
            0x0000a80f      ffffff         isb 0xffff,x
            0x0000a812      ffffff         isb 0xffff,x
            0x0000a815      ffffff         isb 0xffff,x
            0x0000a818      ffffff         isb 0xffff,x
            0x0000a81b      ffffff         isb 0xffff,x
            0x0000a81e      ffffff         isb 0xffff,x
            0x0000a821      ffffff         isb 0xffff,x
            0x0000a824      ffffff         isb 0xffff,x
            0x0000a827      ffffff         isb 0xffff,x
            0x0000a82a      ffffff         isb 0xffff,x
            0x0000a82d      ffffff         isb 0xffff,x
            0x0000a830      ffffff         isb 0xffff,x
            0x0000a833      ffffff         isb 0xffff,x
            0x0000a836      ffffff         isb 0xffff,x
            0x0000a839      ffffff         isb 0xffff,x
            0x0000a83c      ffffff         isb 0xffff,x
            0x0000a83f      ffffff         isb 0xffff,x
            0x0000a842      ffffff         isb 0xffff,x
            0x0000a845      ffffff         isb 0xffff,x
            0x0000a848      ffffff         isb 0xffff,x
            0x0000a84b      ffffff         isb 0xffff,x
            0x0000a84e      ffffff         isb 0xffff,x
            0x0000a851      ffffff         isb 0xffff,x
            0x0000a854      ffffff         isb 0xffff,x
            0x0000a857      ffffff         isb 0xffff,x
            0x0000a85a      ffffff         isb 0xffff,x
            0x0000a85d      ffffff         isb 0xffff,x
            0x0000a860      ffffff         isb 0xffff,x
            0x0000a863      ffffff         isb 0xffff,x
            0x0000a866      ffffff         isb 0xffff,x
            0x0000a869      ffffff         isb 0xffff,x
            0x0000a86c      ffffff         isb 0xffff,x
            0x0000a86f      ffffff         isb 0xffff,x
            0x0000a872      ffffff         isb 0xffff,x
            0x0000a875      ffffff         isb 0xffff,x
            0x0000a878      ffffff         isb 0xffff,x
            0x0000a87b      ffffff         isb 0xffff,x
            0x0000a87e      ffffff         isb 0xffff,x
            0x0000a881      ffffff         isb 0xffff,x
            0x0000a884      ffffff         isb 0xffff,x
            0x0000a887      ffffff         isb 0xffff,x
            0x0000a88a      ffffff         isb 0xffff,x
            0x0000a88d      ffffff         isb 0xffff,x
            0x0000a890      ffffff         isb 0xffff,x
            0x0000a893      ffffff         isb 0xffff,x
            0x0000a896      ffffff         isb 0xffff,x
            0x0000a899      ffffff         isb 0xffff,x
            0x0000a89c      ffffff         isb 0xffff,x
            0x0000a89f      ffffff         isb 0xffff,x
            0x0000a8a2      ffffff         isb 0xffff,x
            0x0000a8a5      ffffff         isb 0xffff,x
            0x0000a8a8      ffffff         isb 0xffff,x
            0x0000a8ab      ffffff         isb 0xffff,x
            0x0000a8ae      ffffff         isb 0xffff,x
            0x0000a8b1      ffffff         isb 0xffff,x
            0x0000a8b4      ffffff         isb 0xffff,x
            0x0000a8b7      ffffff         isb 0xffff,x
            0x0000a8ba      ffffff         isb 0xffff,x
            0x0000a8bd      ffffff         isb 0xffff,x
            0x0000a8c0      ffffff         isb 0xffff,x
            0x0000a8c3      ffffff         isb 0xffff,x
            0x0000a8c6      ffffff         isb 0xffff,x
            0x0000a8c9      ffffff         isb 0xffff,x
            0x0000a8cc      ffffff         isb 0xffff,x
            0x0000a8cf      ffffff         isb 0xffff,x
            0x0000a8d2      ffffff         isb 0xffff,x
            0x0000a8d5      ffffff         isb 0xffff,x
            0x0000a8d8      ffffff         isb 0xffff,x
            0x0000a8db      ffffff         isb 0xffff,x
            0x0000a8de      ffffff         isb 0xffff,x
            0x0000a8e1      ffffff         isb 0xffff,x
            0x0000a8e4      ffffff         isb 0xffff,x
            0x0000a8e7      ffffff         isb 0xffff,x
            0x0000a8ea      ffffff         isb 0xffff,x
            0x0000a8ed      ffffff         isb 0xffff,x
            0x0000a8f0      ffffff         isb 0xffff,x
            0x0000a8f3      ffffff         isb 0xffff,x
            0x0000a8f6      ffffff         isb 0xffff,x
            0x0000a8f9      ffffff         isb 0xffff,x
            0x0000a8fc      ffffff         isb 0xffff,x
            0x0000a8ff      ffffff         isb 0xffff,x
            0x0000a902      ffffff         isb 0xffff,x
            0x0000a905      ffffff         isb 0xffff,x
            0x0000a908      ffffff         isb 0xffff,x
            0x0000a90b      ffffff         isb 0xffff,x
            0x0000a90e      ffffff         isb 0xffff,x
            0x0000a911      ffffff         isb 0xffff,x
            0x0000a914      ffffff         isb 0xffff,x
            0x0000a917      ffffff         isb 0xffff,x
            0x0000a91a      ffffff         isb 0xffff,x
            0x0000a91d      ffffff         isb 0xffff,x
            0x0000a920      ffffff         isb 0xffff,x
            0x0000a923      ffffff         isb 0xffff,x
            0x0000a926      ffffff         isb 0xffff,x
            0x0000a929      ffffff         isb 0xffff,x
            0x0000a92c      ffffff         isb 0xffff,x
            0x0000a92f      ffffff         isb 0xffff,x
            0x0000a932      ffffff         isb 0xffff,x
            0x0000a935      ffffff         isb 0xffff,x
            0x0000a938      ffffff         isb 0xffff,x
            0x0000a93b      ffffff         isb 0xffff,x
            0x0000a93e      ffffff         isb 0xffff,x
            0x0000a941      ffffff         isb 0xffff,x
            0x0000a944      ffffff         isb 0xffff,x
            0x0000a947      ffffff         isb 0xffff,x
            0x0000a94a      ffffff         isb 0xffff,x
            0x0000a94d      ffffff         isb 0xffff,x
            0x0000a950      ffffff         isb 0xffff,x
            0x0000a953      ffffff         isb 0xffff,x
            0x0000a956      ffffff         isb 0xffff,x
            0x0000a959      ffffff         isb 0xffff,x
            0x0000a95c      ffffff         isb 0xffff,x
            0x0000a95f      ffffff         isb 0xffff,x
            0x0000a962      ffffff         isb 0xffff,x
            0x0000a965      ffffff         isb 0xffff,x
            0x0000a968      ffffff         isb 0xffff,x
            0x0000a96b      ffffff         isb 0xffff,x
            0x0000a96e      ffffff         isb 0xffff,x
            0x0000a971      ffffff         isb 0xffff,x
            0x0000a974      ffffff         isb 0xffff,x
            0x0000a977      ffffff         isb 0xffff,x
            0x0000a97a      ffffff         isb 0xffff,x
            0x0000a97d      ffffff         isb 0xffff,x
            0x0000a980      ffffff         isb 0xffff,x
            0x0000a983      ffffff         isb 0xffff,x
            0x0000a986      ffffff         isb 0xffff,x
            0x0000a989      ffffff         isb 0xffff,x
            0x0000a98c      ffffff         isb 0xffff,x
            0x0000a98f      ffffff         isb 0xffff,x
            0x0000a992      ffffff         isb 0xffff,x
            0x0000a995      ffffff         isb 0xffff,x
            0x0000a998      ffffff         isb 0xffff,x
            0x0000a99b      ffffff         isb 0xffff,x
            0x0000a99e      ffffff         isb 0xffff,x
            0x0000a9a1      ffffff         isb 0xffff,x
            0x0000a9a4      ffffff         isb 0xffff,x
            0x0000a9a7      ffffff         isb 0xffff,x
            0x0000a9aa      ffffff         isb 0xffff,x
            0x0000a9ad      ffffff         isb 0xffff,x
            0x0000a9b0      ffffff         isb 0xffff,x
            0x0000a9b3      ffffff         isb 0xffff,x
            0x0000a9b6      ffffff         isb 0xffff,x
            0x0000a9b9      ffffff         isb 0xffff,x
            0x0000a9bc      ffffff         isb 0xffff,x
            0x0000a9bf      ffffff         isb 0xffff,x
            0x0000a9c2      ffffff         isb 0xffff,x
            0x0000a9c5      ffffff         isb 0xffff,x
            0x0000a9c8      ffffff         isb 0xffff,x
            0x0000a9cb      ffffff         isb 0xffff,x
            0x0000a9ce      ffffff         isb 0xffff,x
            0x0000a9d1      ffffff         isb 0xffff,x
            0x0000a9d4      ffffff         isb 0xffff,x
            0x0000a9d7      ffffff         isb 0xffff,x
            0x0000a9da      ffffff         isb 0xffff,x
            0x0000a9dd      ffffff         isb 0xffff,x
            0x0000a9e0      ffffff         isb 0xffff,x
            0x0000a9e3      ffffff         isb 0xffff,x
            0x0000a9e6      ffffff         isb 0xffff,x
            0x0000a9e9      ffffff         isb 0xffff,x
            0x0000a9ec      ffffff         isb 0xffff,x
            0x0000a9ef      ffffff         isb 0xffff,x
            0x0000a9f2      ffffff         isb 0xffff,x
            0x0000a9f5      ffffff         isb 0xffff,x
            0x0000a9f8      ffffff         isb 0xffff,x
            0x0000a9fb      ffffff         isb 0xffff,x
            0x0000a9fe      ffffff         isb 0xffff,x
            0x0000aa01      ffffff         isb 0xffff,x
            0x0000aa04      ffffff         isb 0xffff,x
            0x0000aa07      ffffff         isb 0xffff,x
            0x0000aa0a      ffffff         isb 0xffff,x
            0x0000aa0d      ffffff         isb 0xffff,x
            0x0000aa10      ffffff         isb 0xffff,x
            0x0000aa13      ffffff         isb 0xffff,x
            0x0000aa16      ffffff         isb 0xffff,x
            0x0000aa19      ffffff         isb 0xffff,x
            0x0000aa1c      ffffff         isb 0xffff,x
            0x0000aa1f      ffffff         isb 0xffff,x
            0x0000aa22      ffffff         isb 0xffff,x
            0x0000aa25      ffffff         isb 0xffff,x
            0x0000aa28      ffffff         isb 0xffff,x
            0x0000aa2b      ffffff         isb 0xffff,x
            0x0000aa2e      ffffff         isb 0xffff,x
            0x0000aa31      ffffff         isb 0xffff,x
            0x0000aa34      ffffff         isb 0xffff,x
            0x0000aa37      ffffff         isb 0xffff,x
            0x0000aa3a      ffffff         isb 0xffff,x
            0x0000aa3d      ffffff         isb 0xffff,x
            0x0000aa40      ffffff         isb 0xffff,x
            0x0000aa43      ffffff         isb 0xffff,x
            0x0000aa46      ffffff         isb 0xffff,x
            0x0000aa49      ffffff         isb 0xffff,x
            0x0000aa4c      ffffff         isb 0xffff,x
            0x0000aa4f      ffffff         isb 0xffff,x
            0x0000aa52      ffffff         isb 0xffff,x
            0x0000aa55      ffffff         isb 0xffff,x
            0x0000aa58      ffffff         isb 0xffff,x
            0x0000aa5b      ffffff         isb 0xffff,x
            0x0000aa5e      ffffff         isb 0xffff,x
            0x0000aa61      ffffff         isb 0xffff,x
            0x0000aa64      ffffff         isb 0xffff,x
            0x0000aa67      ffffff         isb 0xffff,x
            0x0000aa6a      ffffff         isb 0xffff,x
            0x0000aa6d      ffffff         isb 0xffff,x
            0x0000aa70      ffffff         isb 0xffff,x
            0x0000aa73      ffffff         isb 0xffff,x
            0x0000aa76      ffffff         isb 0xffff,x
            0x0000aa79      ffffff         isb 0xffff,x
            0x0000aa7c      ffffff         isb 0xffff,x
            0x0000aa7f      ffffff         isb 0xffff,x
            0x0000aa82      ffffff         isb 0xffff,x
            0x0000aa85      ffffff         isb 0xffff,x
            0x0000aa88      ffffff         isb 0xffff,x
            0x0000aa8b      ffffff         isb 0xffff,x
            0x0000aa8e      ffffff         isb 0xffff,x
            0x0000aa91      ffffff         isb 0xffff,x
            0x0000aa94      ffffff         isb 0xffff,x
            0x0000aa97      ffffff         isb 0xffff,x
            0x0000aa9a      ffffff         isb 0xffff,x
            0x0000aa9d      ffffff         isb 0xffff,x
            0x0000aaa0      ffffff         isb 0xffff,x
            0x0000aaa3      ffffff         isb 0xffff,x
            0x0000aaa6      ffffff         isb 0xffff,x
            0x0000aaa9      ffffff         isb 0xffff,x
            0x0000aaac      ffffff         isb 0xffff,x
            0x0000aaaf      ffffff         isb 0xffff,x
            0x0000aab2      ffffff         isb 0xffff,x
            0x0000aab5      ffffff         isb 0xffff,x
            0x0000aab8      ffffff         isb 0xffff,x
            0x0000aabb      ffffff         isb 0xffff,x
            0x0000aabe      ffffff         isb 0xffff,x
            0x0000aac1      ffffff         isb 0xffff,x
            0x0000aac4      ffffff         isb 0xffff,x
            0x0000aac7      ffffff         isb 0xffff,x
            0x0000aaca      ffffff         isb 0xffff,x
            0x0000aacd      ffffff         isb 0xffff,x
            0x0000aad0      ffffff         isb 0xffff,x
            0x0000aad3      ffffff         isb 0xffff,x
            0x0000aad6      ffffff         isb 0xffff,x
            0x0000aad9      ffffff         isb 0xffff,x
            0x0000aadc      ffffff         isb 0xffff,x
            0x0000aadf      ffffff         isb 0xffff,x
            0x0000aae2      ffffff         isb 0xffff,x
            0x0000aae5      ffffff         isb 0xffff,x
            0x0000aae8      ffffff         isb 0xffff,x
            0x0000aaeb      ffffff         isb 0xffff,x
            0x0000aaee      ffffff         isb 0xffff,x
            0x0000aaf1      ffffff         isb 0xffff,x
            0x0000aaf4      ffffff         isb 0xffff,x
            0x0000aaf7      ffffff         isb 0xffff,x
            0x0000aafa      ffffff         isb 0xffff,x
            0x0000aafd      ffffff         isb 0xffff,x
            0x0000ab00      ffffff         isb 0xffff,x
            0x0000ab03      ffffff         isb 0xffff,x
            0x0000ab06      ffffff         isb 0xffff,x
            0x0000ab09      ffffff         isb 0xffff,x
            0x0000ab0c      ffffff         isb 0xffff,x
            0x0000ab0f      ffffff         isb 0xffff,x
            0x0000ab12      ffffff         isb 0xffff,x
            0x0000ab15      ffffff         isb 0xffff,x
            0x0000ab18      ffffff         isb 0xffff,x
            0x0000ab1b      ffffff         isb 0xffff,x
            0x0000ab1e      ffffff         isb 0xffff,x
            0x0000ab21      ffffff         isb 0xffff,x
            0x0000ab24      ffffff         isb 0xffff,x
            0x0000ab27      ffffff         isb 0xffff,x
            0x0000ab2a      ffffff         isb 0xffff,x
            0x0000ab2d      ffffff         isb 0xffff,x
            0x0000ab30      ffffff         isb 0xffff,x
            0x0000ab33      ffffff         isb 0xffff,x
            0x0000ab36      ffffff         isb 0xffff,x
            0x0000ab39      ffffff         isb 0xffff,x
            0x0000ab3c      ffffff         isb 0xffff,x
            0x0000ab3f      ffffff         isb 0xffff,x
            0x0000ab42      ffffff         isb 0xffff,x
            0x0000ab45      ffffff         isb 0xffff,x
            0x0000ab48      ffffff         isb 0xffff,x
            0x0000ab4b      ffffff         isb 0xffff,x
            0x0000ab4e      ffffff         isb 0xffff,x
            0x0000ab51      ffffff         isb 0xffff,x
            0x0000ab54      ffffff         isb 0xffff,x
            0x0000ab57      ffffff         isb 0xffff,x
            0x0000ab5a      ffffff         isb 0xffff,x
            0x0000ab5d      ffffff         isb 0xffff,x
            0x0000ab60      ffffff         isb 0xffff,x
            0x0000ab63      ffffff         isb 0xffff,x
            0x0000ab66      ffffff         isb 0xffff,x
            0x0000ab69      ffffff         isb 0xffff,x
            0x0000ab6c      ffffff         isb 0xffff,x
            0x0000ab6f      ffffff         isb 0xffff,x
            0x0000ab72      ffffff         isb 0xffff,x
            0x0000ab75      ffffff         isb 0xffff,x
            0x0000ab78      ffffff         isb 0xffff,x
            0x0000ab7b      ffffff         isb 0xffff,x
            0x0000ab7e      ffffff         isb 0xffff,x
            0x0000ab81      ffffff         isb 0xffff,x
            0x0000ab84      ffffff         isb 0xffff,x
            0x0000ab87      ffffff         isb 0xffff,x
            0x0000ab8a      ffffff         isb 0xffff,x
            0x0000ab8d      ffffff         isb 0xffff,x
            0x0000ab90      ffffff         isb 0xffff,x
            0x0000ab93      ffffff         isb 0xffff,x
            0x0000ab96      ffffff         isb 0xffff,x
            0x0000ab99      ffffff         isb 0xffff,x
            0x0000ab9c      ffffff         isb 0xffff,x
            0x0000ab9f      ffffff         isb 0xffff,x
            0x0000aba2      ffffff         isb 0xffff,x
            0x0000aba5      ffffff         isb 0xffff,x
            0x0000aba8      ffffff         isb 0xffff,x
            0x0000abab      ffffff         isb 0xffff,x
            0x0000abae      ffffff         isb 0xffff,x
            0x0000abb1      ffffff         isb 0xffff,x
            0x0000abb4      ffffff         isb 0xffff,x
            0x0000abb7      ffffff         isb 0xffff,x
            0x0000abba      ffffff         isb 0xffff,x
            0x0000abbd      ffffff         isb 0xffff,x
            0x0000abc0      ffffff         isb 0xffff,x
            0x0000abc3      ffffff         isb 0xffff,x
            0x0000abc6      ffffff         isb 0xffff,x
            0x0000abc9      ffffff         isb 0xffff,x
            0x0000abcc      ffffff         isb 0xffff,x
            0x0000abcf      ffffff         isb 0xffff,x
            0x0000abd2      ffffff         isb 0xffff,x
            0x0000abd5      ffffff         isb 0xffff,x
            0x0000abd8      ffffff         isb 0xffff,x
            0x0000abdb      ffffff         isb 0xffff,x
            0x0000abde      ffffff         isb 0xffff,x
            0x0000abe1      ffffff         isb 0xffff,x
            0x0000abe4      ffffff         isb 0xffff,x
            0x0000abe7      ffffff         isb 0xffff,x
            0x0000abea      ffffff         isb 0xffff,x
            0x0000abed      ffffff         isb 0xffff,x
            0x0000abf0      ffffff         isb 0xffff,x
            0x0000abf3      ffffff         isb 0xffff,x
            0x0000abf6      ffffff         isb 0xffff,x
            0x0000abf9      ffffff         isb 0xffff,x
            0x0000abfc      ffffff         isb 0xffff,x
            0x0000abff      ffffff         isb 0xffff,x
            0x0000ac02      ffffff         isb 0xffff,x
            0x0000ac05      ffffff         isb 0xffff,x
            0x0000ac08      ffffff         isb 0xffff,x
            0x0000ac0b      ffffff         isb 0xffff,x
            0x0000ac0e      ffffff         isb 0xffff,x
            0x0000ac11      ffffff         isb 0xffff,x
            0x0000ac14      ffffff         isb 0xffff,x
            0x0000ac17      ffffff         isb 0xffff,x
            0x0000ac1a      ffffff         isb 0xffff,x
            0x0000ac1d      ffffff         isb 0xffff,x
            0x0000ac20      ffffff         isb 0xffff,x
            0x0000ac23      ffffff         isb 0xffff,x
            0x0000ac26      ffffff         isb 0xffff,x
            0x0000ac29      ffffff         isb 0xffff,x
            0x0000ac2c      ffffff         isb 0xffff,x
            0x0000ac2f      ffffff         isb 0xffff,x
            0x0000ac32      ffffff         isb 0xffff,x
            0x0000ac35      ffffff         isb 0xffff,x
            0x0000ac38      ffffff         isb 0xffff,x
            0x0000ac3b      ffffff         isb 0xffff,x
            0x0000ac3e      ffffff         isb 0xffff,x
            0x0000ac41      ffffff         isb 0xffff,x
            0x0000ac44      ffffff         isb 0xffff,x
            0x0000ac47      ffffff         isb 0xffff,x
            0x0000ac4a      ffffff         isb 0xffff,x
            0x0000ac4d      ffffff         isb 0xffff,x
            0x0000ac50      ffffff         isb 0xffff,x
            0x0000ac53      ffffff         isb 0xffff,x
            0x0000ac56      ffffff         isb 0xffff,x
            0x0000ac59      ffffff         isb 0xffff,x
            0x0000ac5c      ffffff         isb 0xffff,x
            0x0000ac5f      ffffff         isb 0xffff,x
            0x0000ac62      ffffff         isb 0xffff,x
            0x0000ac65      ffffff         isb 0xffff,x
            0x0000ac68      ffffff         isb 0xffff,x
            0x0000ac6b      ffffff         isb 0xffff,x
            0x0000ac6e      ffffff         isb 0xffff,x
            0x0000ac71      ffffff         isb 0xffff,x
            0x0000ac74      ffffff         isb 0xffff,x
            0x0000ac77      ffffff         isb 0xffff,x
            0x0000ac7a      ffffff         isb 0xffff,x
            0x0000ac7d      ffffff         isb 0xffff,x
            0x0000ac80      ffffff         isb 0xffff,x
            0x0000ac83      ffffff         isb 0xffff,x
            0x0000ac86      ffffff         isb 0xffff,x
            0x0000ac89      ffffff         isb 0xffff,x
            0x0000ac8c      ffffff         isb 0xffff,x
            0x0000ac8f      ffffff         isb 0xffff,x
            0x0000ac92      ffffff         isb 0xffff,x
            0x0000ac95      ffffff         isb 0xffff,x
            0x0000ac98      ffffff         isb 0xffff,x
            0x0000ac9b      ffffff         isb 0xffff,x
            0x0000ac9e      ffffff         isb 0xffff,x
            0x0000aca1      ffffff         isb 0xffff,x
            0x0000aca4      ffffff         isb 0xffff,x
            0x0000aca7      ffffff         isb 0xffff,x
            0x0000acaa      ffffff         isb 0xffff,x
            0x0000acad      ffffff         isb 0xffff,x
            0x0000acb0      ffffff         isb 0xffff,x
            0x0000acb3      ffffff         isb 0xffff,x
            0x0000acb6      ffffff         isb 0xffff,x
            0x0000acb9      ffffff         isb 0xffff,x
            0x0000acbc      ffffff         isb 0xffff,x
            0x0000acbf      ffffff         isb 0xffff,x
            0x0000acc2      ffffff         isb 0xffff,x
            0x0000acc5      ffffff         isb 0xffff,x
            0x0000acc8      ffffff         isb 0xffff,x
            0x0000accb      ffffff         isb 0xffff,x
            0x0000acce      ffffff         isb 0xffff,x
            0x0000acd1      ffffff         isb 0xffff,x
            0x0000acd4      ffffff         isb 0xffff,x
            0x0000acd7      ffffff         isb 0xffff,x
            0x0000acda      ffffff         isb 0xffff,x
            0x0000acdd      ffffff         isb 0xffff,x
            0x0000ace0      ffffff         isb 0xffff,x
            0x0000ace3      ffffff         isb 0xffff,x
            0x0000ace6      ffffff         isb 0xffff,x
            0x0000ace9      ffffff         isb 0xffff,x
            0x0000acec      ffffff         isb 0xffff,x
            0x0000acef      ffffff         isb 0xffff,x
            0x0000acf2      ffffff         isb 0xffff,x
            0x0000acf5      ffffff         isb 0xffff,x
            0x0000acf8      ffffff         isb 0xffff,x
            0x0000acfb      ffffff         isb 0xffff,x
            0x0000acfe      ffffff         isb 0xffff,x
            0x0000ad01      ffffff         isb 0xffff,x
            0x0000ad04      ffffff         isb 0xffff,x
            0x0000ad07      ffffff         isb 0xffff,x
            0x0000ad0a      ffffff         isb 0xffff,x
            0x0000ad0d      ffffff         isb 0xffff,x
            0x0000ad10      ffffff         isb 0xffff,x
            0x0000ad13      ffffff         isb 0xffff,x
            0x0000ad16      ffffff         isb 0xffff,x
            0x0000ad19      ffffff         isb 0xffff,x
            0x0000ad1c      ffffff         isb 0xffff,x
            0x0000ad1f      ffffff         isb 0xffff,x
            0x0000ad22      ffffff         isb 0xffff,x
            0x0000ad25      ffffff         isb 0xffff,x
            0x0000ad28      ffffff         isb 0xffff,x
            0x0000ad2b      ffffff         isb 0xffff,x
            0x0000ad2e      ffffff         isb 0xffff,x
            0x0000ad31      ffffff         isb 0xffff,x
            0x0000ad34      ffffff         isb 0xffff,x
            0x0000ad37      ffffff         isb 0xffff,x
            0x0000ad3a      ffffff         isb 0xffff,x
            0x0000ad3d      ffffff         isb 0xffff,x
            0x0000ad40      ffffff         isb 0xffff,x
            0x0000ad43      ffffff         isb 0xffff,x
            0x0000ad46      ffffff         isb 0xffff,x
            0x0000ad49      ffffff         isb 0xffff,x
            0x0000ad4c      ffffff         isb 0xffff,x
            0x0000ad4f      ffffff         isb 0xffff,x
            0x0000ad52      ffffff         isb 0xffff,x
            0x0000ad55      ffffff         isb 0xffff,x
            0x0000ad58      ffffff         isb 0xffff,x
            0x0000ad5b      ffffff         isb 0xffff,x
            0x0000ad5e      ffffff         isb 0xffff,x
            0x0000ad61      ffffff         isb 0xffff,x
            0x0000ad64      ffffff         isb 0xffff,x
            0x0000ad67      ffffff         isb 0xffff,x
            0x0000ad6a      ffffff         isb 0xffff,x
            0x0000ad6d      ffffff         isb 0xffff,x
            0x0000ad70      ffffff         isb 0xffff,x
            0x0000ad73      ffffff         isb 0xffff,x
            0x0000ad76      ffffff         isb 0xffff,x
            0x0000ad79      ffffff         isb 0xffff,x
            0x0000ad7c      ffffff         isb 0xffff,x
            0x0000ad7f      ffffff         isb 0xffff,x
            0x0000ad82      ffffff         isb 0xffff,x
            0x0000ad85      ffffff         isb 0xffff,x
            0x0000ad88      ffffff         isb 0xffff,x
            0x0000ad8b      ffffff         isb 0xffff,x
            0x0000ad8e      ffffff         isb 0xffff,x
            0x0000ad91      ffffff         isb 0xffff,x
            0x0000ad94      ffffff         isb 0xffff,x
            0x0000ad97      ffffff         isb 0xffff,x
            0x0000ad9a      ffffff         isb 0xffff,x
            0x0000ad9d      ffffff         isb 0xffff,x
            0x0000ada0      ffffff         isb 0xffff,x
            0x0000ada3      ffffff         isb 0xffff,x
            0x0000ada6      ffffff         isb 0xffff,x
            0x0000ada9      ffffff         isb 0xffff,x
            0x0000adac      ffffff         isb 0xffff,x
            0x0000adaf      ffffff         isb 0xffff,x
            0x0000adb2      ffffff         isb 0xffff,x
            0x0000adb5      ffffff         isb 0xffff,x
            0x0000adb8      ffffff         isb 0xffff,x
            0x0000adbb      ffffff         isb 0xffff,x
            0x0000adbe      ffffff         isb 0xffff,x
            0x0000adc1      ffffff         isb 0xffff,x
            0x0000adc4      ffffff         isb 0xffff,x
            0x0000adc7      ffffff         isb 0xffff,x
            0x0000adca      ffffff         isb 0xffff,x
            0x0000adcd      ffffff         isb 0xffff,x
            0x0000add0      ffffff         isb 0xffff,x
            0x0000add3      ffffff         isb 0xffff,x
            0x0000add6      ffffff         isb 0xffff,x
            0x0000add9      ffffff         isb 0xffff,x
            0x0000addc      ffffff         isb 0xffff,x
            0x0000addf      ffffff         isb 0xffff,x
            0x0000ade2      ffffff         isb 0xffff,x
            0x0000ade5      ffffff         isb 0xffff,x
            0x0000ade8      ffffff         isb 0xffff,x
            0x0000adeb      ffffff         isb 0xffff,x
            0x0000adee      ffffff         isb 0xffff,x
            0x0000adf1      ffffff         isb 0xffff,x
            0x0000adf4      ffffff         isb 0xffff,x
            0x0000adf7      ffffff         isb 0xffff,x
            0x0000adfa      ffffff         isb 0xffff,x
            0x0000adfd      ffffff         isb 0xffff,x
            0x0000ae00      ffffff         isb 0xffff,x
            0x0000ae03      ffffff         isb 0xffff,x
            0x0000ae06      ffffff         isb 0xffff,x
            0x0000ae09      ffffff         isb 0xffff,x
            0x0000ae0c      ffffff         isb 0xffff,x
            0x0000ae0f      ffffff         isb 0xffff,x
            0x0000ae12      ffffff         isb 0xffff,x
            0x0000ae15      ffffff         isb 0xffff,x
            0x0000ae18      ffffff         isb 0xffff,x
            0x0000ae1b      ffffff         isb 0xffff,x
            0x0000ae1e      ffffff         isb 0xffff,x
            0x0000ae21      ffffff         isb 0xffff,x
            0x0000ae24      ffffff         isb 0xffff,x
            0x0000ae27      ffffff         isb 0xffff,x
            0x0000ae2a      ffffff         isb 0xffff,x
            0x0000ae2d      ffffff         isb 0xffff,x
            0x0000ae30      ffffff         isb 0xffff,x
            0x0000ae33      ffffff         isb 0xffff,x
            0x0000ae36      ffffff         isb 0xffff,x
            0x0000ae39      ffffff         isb 0xffff,x
            0x0000ae3c      ffffff         isb 0xffff,x
            0x0000ae3f      ffffff         isb 0xffff,x
            0x0000ae42      ffffff         isb 0xffff,x
            0x0000ae45      ffffff         isb 0xffff,x
            0x0000ae48      ffffff         isb 0xffff,x
            0x0000ae4b      ffffff         isb 0xffff,x
            0x0000ae4e      ffffff         isb 0xffff,x
            0x0000ae51      ffffff         isb 0xffff,x
            0x0000ae54      ffffff         isb 0xffff,x
            0x0000ae57      ffffff         isb 0xffff,x
            0x0000ae5a      ffffff         isb 0xffff,x
            0x0000ae5d      ffffff         isb 0xffff,x
            0x0000ae60      ffffff         isb 0xffff,x
            0x0000ae63      ffffff         isb 0xffff,x
            0x0000ae66      ffffff         isb 0xffff,x
            0x0000ae69      ffffff         isb 0xffff,x
            0x0000ae6c      ffffff         isb 0xffff,x
            0x0000ae6f      ffffff         isb 0xffff,x
            0x0000ae72      ffffff         isb 0xffff,x
            0x0000ae75      ffffff         isb 0xffff,x
            0x0000ae78      ffffff         isb 0xffff,x
            0x0000ae7b      ffffff         isb 0xffff,x
            0x0000ae7e      ffffff         isb 0xffff,x
            0x0000ae81      ffffff         isb 0xffff,x
            0x0000ae84      ffffff         isb 0xffff,x
            0x0000ae87      ffffff         isb 0xffff,x
            0x0000ae8a      ffffff         isb 0xffff,x
            0x0000ae8d      ffffff         isb 0xffff,x
            0x0000ae90      ffffff         isb 0xffff,x
            0x0000ae93      ffffff         isb 0xffff,x
            0x0000ae96      ffffff         isb 0xffff,x
            0x0000ae99      ffffff         isb 0xffff,x
            0x0000ae9c      ffffff         isb 0xffff,x
            0x0000ae9f      ffffff         isb 0xffff,x
            0x0000aea2      ffffff         isb 0xffff,x
            0x0000aea5      ffffff         isb 0xffff,x
            0x0000aea8      ffffff         isb 0xffff,x
            0x0000aeab      ffffff         isb 0xffff,x
            0x0000aeae      ffffff         isb 0xffff,x
            0x0000aeb1      ffffff         isb 0xffff,x
            0x0000aeb4      ffffff         isb 0xffff,x
            0x0000aeb7      ffffff         isb 0xffff,x
            0x0000aeba      ffffff         isb 0xffff,x
            0x0000aebd      ffffff         isb 0xffff,x
            0x0000aec0      ffffff         isb 0xffff,x
            0x0000aec3      ffffff         isb 0xffff,x
            0x0000aec6      ffffff         isb 0xffff,x
            0x0000aec9      ffffff         isb 0xffff,x
            0x0000aecc      ffffff         isb 0xffff,x
            0x0000aecf      ffffff         isb 0xffff,x
            0x0000aed2      ffffff         isb 0xffff,x
            0x0000aed5      ffffff         isb 0xffff,x
            0x0000aed8      ffffff         isb 0xffff,x
            0x0000aedb      ffffff         isb 0xffff,x
            0x0000aede      ffffff         isb 0xffff,x
            0x0000aee1      ffffff         isb 0xffff,x
            0x0000aee4      ffffff         isb 0xffff,x
            0x0000aee7      ffffff         isb 0xffff,x
            0x0000aeea      ffffff         isb 0xffff,x
            0x0000aeed      ffffff         isb 0xffff,x
            0x0000aef0      ffffff         isb 0xffff,x
            0x0000aef3      ffffff         isb 0xffff,x
            0x0000aef6      ffffff         isb 0xffff,x
            0x0000aef9      ffffff         isb 0xffff,x
            0x0000aefc      ffffff         isb 0xffff,x
            0x0000aeff      ffffff         isb 0xffff,x
            0x0000af02      ffffff         isb 0xffff,x
            0x0000af05      ffffff         isb 0xffff,x
            0x0000af08      ffffff         isb 0xffff,x
            0x0000af0b      ffffff         isb 0xffff,x
            0x0000af0e      ffffff         isb 0xffff,x
            0x0000af11      ffffff         isb 0xffff,x
            0x0000af14      ffffff         isb 0xffff,x
            0x0000af17      ffffff         isb 0xffff,x
            0x0000af1a      ffffff         isb 0xffff,x
            0x0000af1d      ffffff         isb 0xffff,x
            0x0000af20      ffffff         isb 0xffff,x
            0x0000af23      ffffff         isb 0xffff,x
            0x0000af26      ffffff         isb 0xffff,x
            0x0000af29      ffffff         isb 0xffff,x
            0x0000af2c      ffffff         isb 0xffff,x
            0x0000af2f      ffffff         isb 0xffff,x
            0x0000af32      ffffff         isb 0xffff,x
            0x0000af35      ffffff         isb 0xffff,x
            0x0000af38      ffffff         isb 0xffff,x
            0x0000af3b      ffffff         isb 0xffff,x
            0x0000af3e      ffffff         isb 0xffff,x
            0x0000af41      ffffff         isb 0xffff,x
            0x0000af44      ffffff         isb 0xffff,x
            0x0000af47      ffffff         isb 0xffff,x
            0x0000af4a      ffffff         isb 0xffff,x
            0x0000af4d      ffffff         isb 0xffff,x
            0x0000af50      ffffff         isb 0xffff,x
            0x0000af53      ffffff         isb 0xffff,x
            0x0000af56      ffffff         isb 0xffff,x
            0x0000af59      ffffff         isb 0xffff,x
            0x0000af5c      ffffff         isb 0xffff,x
            0x0000af5f      ffffff         isb 0xffff,x
            0x0000af62      ffffff         isb 0xffff,x
            0x0000af65      ffffff         isb 0xffff,x
            0x0000af68      ffffff         isb 0xffff,x
            0x0000af6b      ffffff         isb 0xffff,x
            0x0000af6e      ffffff         isb 0xffff,x
            0x0000af71      ffffff         isb 0xffff,x
            0x0000af74      ffffff         isb 0xffff,x
            0x0000af77      ffffff         isb 0xffff,x
            0x0000af7a      ffffff         isb 0xffff,x
            0x0000af7d      ffffff         isb 0xffff,x
            0x0000af80      ffffff         isb 0xffff,x
            0x0000af83      ffffff         isb 0xffff,x
            0x0000af86      ffffff         isb 0xffff,x
            0x0000af89      ffffff         isb 0xffff,x
            0x0000af8c      ffffff         isb 0xffff,x
            0x0000af8f      ffffff         isb 0xffff,x
            0x0000af92      ffffff         isb 0xffff,x
            0x0000af95      ffffff         isb 0xffff,x
            0x0000af98      ffffff         isb 0xffff,x
            0x0000af9b      ffffff         isb 0xffff,x
            0x0000af9e      ffffff         isb 0xffff,x
            0x0000afa1      ffffff         isb 0xffff,x
            0x0000afa4      ffffff         isb 0xffff,x
            0x0000afa7      ffffff         isb 0xffff,x
            0x0000afaa      ffffff         isb 0xffff,x
            0x0000afad      ffffff         isb 0xffff,x
            0x0000afb0      ffffff         isb 0xffff,x
            0x0000afb3      ffffff         isb 0xffff,x
            0x0000afb6      ffffff         isb 0xffff,x
            0x0000afb9      ffffff         isb 0xffff,x
            0x0000afbc      ffffff         isb 0xffff,x
            0x0000afbf      ffffff         isb 0xffff,x
            0x0000afc2      ffffff         isb 0xffff,x
            0x0000afc5      ffffff         isb 0xffff,x
            0x0000afc8      ffffff         isb 0xffff,x
            0x0000afcb      ffffff         isb 0xffff,x
            0x0000afce      ffffff         isb 0xffff,x
            0x0000afd1      ffffff         isb 0xffff,x
            0x0000afd4      ffffff         isb 0xffff,x
            0x0000afd7      ffffff         isb 0xffff,x
            0x0000afda      ffffff         isb 0xffff,x
            0x0000afdd      ffffff         isb 0xffff,x
            0x0000afe0      ffffff         isb 0xffff,x
            0x0000afe3      ffffff         isb 0xffff,x
            0x0000afe6      ffffff         isb 0xffff,x
            0x0000afe9      ffffff         isb 0xffff,x
            0x0000afec      ffffff         isb 0xffff,x
            0x0000afef      ffffff         isb 0xffff,x
            0x0000aff2      ffffff         isb 0xffff,x
            0x0000aff5      ffffff         isb 0xffff,x
            0x0000aff8      ffffff         isb 0xffff,x
            0x0000affb      ffffff         isb 0xffff,x
            0x0000affe      ffffff         isb 0xffff,x
            0x0000b001      ffffff         isb 0xffff,x
            0x0000b004      ffffff         isb 0xffff,x
            0x0000b007      ffffff         isb 0xffff,x
            0x0000b00a      ffffff         isb 0xffff,x
            0x0000b00d      ffffff         isb 0xffff,x
            0x0000b010      ffffff         isb 0xffff,x
            0x0000b013      ffffff         isb 0xffff,x
            0x0000b016      ffffff         isb 0xffff,x
            0x0000b019      ffffff         isb 0xffff,x
            0x0000b01c      ffffff         isb 0xffff,x
            0x0000b01f      ffffff         isb 0xffff,x
            0x0000b022      ffffff         isb 0xffff,x
            0x0000b025      ffffff         isb 0xffff,x
            0x0000b028      ffffff         isb 0xffff,x
            0x0000b02b      ffffff         isb 0xffff,x
            0x0000b02e      ffffff         isb 0xffff,x
            0x0000b031      ffffff         isb 0xffff,x
            0x0000b034      ffffff         isb 0xffff,x
            0x0000b037      ffffff         isb 0xffff,x
            0x0000b03a      ffffff         isb 0xffff,x
            0x0000b03d      ffffff         isb 0xffff,x
            0x0000b040      ffffff         isb 0xffff,x
            0x0000b043      ffffff         isb 0xffff,x
            0x0000b046      ffffff         isb 0xffff,x
            0x0000b049      ffffff         isb 0xffff,x
            0x0000b04c      ffffff         isb 0xffff,x
            0x0000b04f      ffffff         isb 0xffff,x
            0x0000b052      ffffff         isb 0xffff,x
            0x0000b055      ffffff         isb 0xffff,x
            0x0000b058      ffffff         isb 0xffff,x
            0x0000b05b      ffffff         isb 0xffff,x
            0x0000b05e      ffffff         isb 0xffff,x
            0x0000b061      ffffff         isb 0xffff,x
            0x0000b064      ffffff         isb 0xffff,x
            0x0000b067      ffffff         isb 0xffff,x
            0x0000b06a      ffffff         isb 0xffff,x
            0x0000b06d      ffffff         isb 0xffff,x
            0x0000b070      ffffff         isb 0xffff,x
            0x0000b073      ffffff         isb 0xffff,x
            0x0000b076      ffffff         isb 0xffff,x
            0x0000b079      ffffff         isb 0xffff,x
            0x0000b07c      ffffff         isb 0xffff,x
            0x0000b07f      ffffff         isb 0xffff,x
            0x0000b082      ffffff         isb 0xffff,x
            0x0000b085      ffffff         isb 0xffff,x
            0x0000b088      ffffff         isb 0xffff,x
            0x0000b08b      ffffff         isb 0xffff,x
            0x0000b08e      ffffff         isb 0xffff,x
            0x0000b091      ffffff         isb 0xffff,x
            0x0000b094      ffffff         isb 0xffff,x
            0x0000b097      ffffff         isb 0xffff,x
            0x0000b09a      ffffff         isb 0xffff,x
            0x0000b09d      ffffff         isb 0xffff,x
            0x0000b0a0      ffffff         isb 0xffff,x
            0x0000b0a3      ffffff         isb 0xffff,x
            0x0000b0a6      ffffff         isb 0xffff,x
            0x0000b0a9      ffffff         isb 0xffff,x
            0x0000b0ac      ffffff         isb 0xffff,x
            0x0000b0af      ffffff         isb 0xffff,x
            0x0000b0b2      ffffff         isb 0xffff,x
            0x0000b0b5      ffffff         isb 0xffff,x
            0x0000b0b8      ffffff         isb 0xffff,x
            0x0000b0bb      ffffff         isb 0xffff,x
            0x0000b0be      ffffff         isb 0xffff,x
            0x0000b0c1      ffffff         isb 0xffff,x
            0x0000b0c4      ffffff         isb 0xffff,x
            0x0000b0c7      ffffff         isb 0xffff,x
            0x0000b0ca      ffffff         isb 0xffff,x
            0x0000b0cd      ffffff         isb 0xffff,x
            0x0000b0d0      ffffff         isb 0xffff,x
            0x0000b0d3      ffffff         isb 0xffff,x
            0x0000b0d6      ffffff         isb 0xffff,x
            0x0000b0d9      ffffff         isb 0xffff,x
            0x0000b0dc      ffffff         isb 0xffff,x
            0x0000b0df      ffffff         isb 0xffff,x
            0x0000b0e2      ffffff         isb 0xffff,x
            0x0000b0e5      ffffff         isb 0xffff,x
            0x0000b0e8      ffffff         isb 0xffff,x
            0x0000b0eb      ffffff         isb 0xffff,x
            0x0000b0ee      ffffff         isb 0xffff,x
            0x0000b0f1      ffffff         isb 0xffff,x
            0x0000b0f4      ffffff         isb 0xffff,x
            0x0000b0f7      ffffff         isb 0xffff,x
            0x0000b0fa      ffffff         isb 0xffff,x
            0x0000b0fd      ffffff         isb 0xffff,x
            0x0000b100      ffffff         isb 0xffff,x
            0x0000b103      ffffff         isb 0xffff,x
            0x0000b106      ffffff         isb 0xffff,x
            0x0000b109      ffffff         isb 0xffff,x
            0x0000b10c      ffffff         isb 0xffff,x
            0x0000b10f      ffffff         isb 0xffff,x
            0x0000b112      ffffff         isb 0xffff,x
            0x0000b115      ffffff         isb 0xffff,x
            0x0000b118      ffffff         isb 0xffff,x
            0x0000b11b      ffffff         isb 0xffff,x
            0x0000b11e      ffffff         isb 0xffff,x
            0x0000b121      ffffff         isb 0xffff,x
            0x0000b124      ffffff         isb 0xffff,x
            0x0000b127      ffffff         isb 0xffff,x
            0x0000b12a      ffffff         isb 0xffff,x
            0x0000b12d      ffffff         isb 0xffff,x
            0x0000b130      ffffff         isb 0xffff,x
            0x0000b133      ffffff         isb 0xffff,x
            0x0000b136      ffffff         isb 0xffff,x
            0x0000b139      ffffff         isb 0xffff,x
            0x0000b13c      ffffff         isb 0xffff,x
            0x0000b13f      ffffff         isb 0xffff,x
            0x0000b142      ffffff         isb 0xffff,x
            0x0000b145      ffffff         isb 0xffff,x
            0x0000b148      ffffff         isb 0xffff,x
            0x0000b14b      ffffff         isb 0xffff,x
            0x0000b14e      ffffff         isb 0xffff,x
            0x0000b151      ffffff         isb 0xffff,x
            0x0000b154      ffffff         isb 0xffff,x
            0x0000b157      ffffff         isb 0xffff,x
            0x0000b15a      ffffff         isb 0xffff,x
            0x0000b15d      ffffff         isb 0xffff,x
            0x0000b160      ffffff         isb 0xffff,x
            0x0000b163      ffffff         isb 0xffff,x
            0x0000b166      ffffff         isb 0xffff,x
            0x0000b169      ffffff         isb 0xffff,x
            0x0000b16c      ffffff         isb 0xffff,x
            0x0000b16f      ffffff         isb 0xffff,x
            0x0000b172      ffffff         isb 0xffff,x
            0x0000b175      ffffff         isb 0xffff,x
            0x0000b178      ffffff         isb 0xffff,x
            0x0000b17b      ffffff         isb 0xffff,x
            0x0000b17e      ffffff         isb 0xffff,x
            0x0000b181      ffffff         isb 0xffff,x
            0x0000b184      ffffff         isb 0xffff,x
            0x0000b187      ffffff         isb 0xffff,x
            0x0000b18a      ffffff         isb 0xffff,x
            0x0000b18d      ffffff         isb 0xffff,x
            0x0000b190      ffffff         isb 0xffff,x
            0x0000b193      ffffff         isb 0xffff,x
            0x0000b196      ffffff         isb 0xffff,x
            0x0000b199      ffffff         isb 0xffff,x
            0x0000b19c      ffffff         isb 0xffff,x
            0x0000b19f      ffffff         isb 0xffff,x
            0x0000b1a2      ffffff         isb 0xffff,x
            0x0000b1a5      ffffff         isb 0xffff,x
            0x0000b1a8      ffffff         isb 0xffff,x
            0x0000b1ab      ffffff         isb 0xffff,x
            0x0000b1ae      ffffff         isb 0xffff,x
            0x0000b1b1      ffffff         isb 0xffff,x
            0x0000b1b4      ffffff         isb 0xffff,x
            0x0000b1b7      ffffff         isb 0xffff,x
            0x0000b1ba      ffffff         isb 0xffff,x
            0x0000b1bd      ffffff         isb 0xffff,x
            0x0000b1c0      ffffff         isb 0xffff,x
            0x0000b1c3      ffffff         isb 0xffff,x
            0x0000b1c6      ffffff         isb 0xffff,x
            0x0000b1c9      ffffff         isb 0xffff,x
            0x0000b1cc      ffffff         isb 0xffff,x
            0x0000b1cf      ffffff         isb 0xffff,x
            0x0000b1d2      ffffff         isb 0xffff,x
            0x0000b1d5      ffffff         isb 0xffff,x
            0x0000b1d8      ffffff         isb 0xffff,x
            0x0000b1db      ffffff         isb 0xffff,x
            0x0000b1de      ffffff         isb 0xffff,x
            0x0000b1e1      ffffff         isb 0xffff,x
            0x0000b1e4      ffffff         isb 0xffff,x
            0x0000b1e7      ffffff         isb 0xffff,x
            0x0000b1ea      ffffff         isb 0xffff,x
            0x0000b1ed      ffffff         isb 0xffff,x
            0x0000b1f0      ffffff         isb 0xffff,x
            0x0000b1f3      ffffff         isb 0xffff,x
            0x0000b1f6      ffffff         isb 0xffff,x
            0x0000b1f9      ffffff         isb 0xffff,x
            0x0000b1fc      ffffff         isb 0xffff,x
            0x0000b1ff      ffffff         isb 0xffff,x
            0x0000b202      ffffff         isb 0xffff,x
            0x0000b205      ffffff         isb 0xffff,x
            0x0000b208      ffffff         isb 0xffff,x
            0x0000b20b      ffffff         isb 0xffff,x
            0x0000b20e      ffffff         isb 0xffff,x
            0x0000b211      ffffff         isb 0xffff,x
            0x0000b214      ffffff         isb 0xffff,x
            0x0000b217      ffffff         isb 0xffff,x
            0x0000b21a      ffffff         isb 0xffff,x
            0x0000b21d      ffffff         isb 0xffff,x
            0x0000b220      ffffff         isb 0xffff,x
            0x0000b223      ffffff         isb 0xffff,x
            0x0000b226      ffffff         isb 0xffff,x
            0x0000b229      ffffff         isb 0xffff,x
            0x0000b22c      ffffff         isb 0xffff,x
            0x0000b22f      ffffff         isb 0xffff,x
            0x0000b232      ffffff         isb 0xffff,x
            0x0000b235      ffffff         isb 0xffff,x
            0x0000b238      ffffff         isb 0xffff,x
            0x0000b23b      ffffff         isb 0xffff,x
            0x0000b23e      ffffff         isb 0xffff,x
            0x0000b241      ffffff         isb 0xffff,x
            0x0000b244      ffffff         isb 0xffff,x
            0x0000b247      ffffff         isb 0xffff,x
            0x0000b24a      ffffff         isb 0xffff,x
            0x0000b24d      ffffff         isb 0xffff,x
            0x0000b250      ffffff         isb 0xffff,x
            0x0000b253      ffffff         isb 0xffff,x
            0x0000b256      ffffff         isb 0xffff,x
            0x0000b259      ffffff         isb 0xffff,x
            0x0000b25c      ffffff         isb 0xffff,x
            0x0000b25f      ffffff         isb 0xffff,x
            0x0000b262      ffffff         isb 0xffff,x
            0x0000b265      ffffff         isb 0xffff,x
            0x0000b268      ffffff         isb 0xffff,x
            0x0000b26b      ffffff         isb 0xffff,x
            0x0000b26e      ffffff         isb 0xffff,x
            0x0000b271      ffffff         isb 0xffff,x
            0x0000b274      ffffff         isb 0xffff,x
            0x0000b277      ffffff         isb 0xffff,x
            0x0000b27a      ffffff         isb 0xffff,x
            0x0000b27d      ffffff         isb 0xffff,x
            0x0000b280      ffffff         isb 0xffff,x
            0x0000b283      ffffff         isb 0xffff,x
            0x0000b286      ffffff         isb 0xffff,x
            0x0000b289      ffffff         isb 0xffff,x
            0x0000b28c      ffffff         isb 0xffff,x
            0x0000b28f      ffffff         isb 0xffff,x
            0x0000b292      ffffff         isb 0xffff,x
            0x0000b295      ffffff         isb 0xffff,x
            0x0000b298      ffffff         isb 0xffff,x
            0x0000b29b      ffffff         isb 0xffff,x
            0x0000b29e      ffffff         isb 0xffff,x
            0x0000b2a1      ffffff         isb 0xffff,x
            0x0000b2a4      ffffff         isb 0xffff,x
            0x0000b2a7      ffffff         isb 0xffff,x
            0x0000b2aa      ffffff         isb 0xffff,x
            0x0000b2ad      ffffff         isb 0xffff,x
            0x0000b2b0      ffffff         isb 0xffff,x
            0x0000b2b3      ffffff         isb 0xffff,x
            0x0000b2b6      ffffff         isb 0xffff,x
            0x0000b2b9      ffffff         isb 0xffff,x
            0x0000b2bc      ffffff         isb 0xffff,x
            0x0000b2bf      ffffff         isb 0xffff,x
            0x0000b2c2      ffffff         isb 0xffff,x
            0x0000b2c5      ffffff         isb 0xffff,x
            0x0000b2c8      ffffff         isb 0xffff,x
            0x0000b2cb      ffffff         isb 0xffff,x
            0x0000b2ce      ffffff         isb 0xffff,x
            0x0000b2d1      ffffff         isb 0xffff,x
            0x0000b2d4      ffffff         isb 0xffff,x
            0x0000b2d7      ffffff         isb 0xffff,x
            0x0000b2da      ffffff         isb 0xffff,x
            0x0000b2dd      ffffff         isb 0xffff,x
            0x0000b2e0      ffffff         isb 0xffff,x
            0x0000b2e3      ffffff         isb 0xffff,x
            0x0000b2e6      ffffff         isb 0xffff,x
            0x0000b2e9      ffffff         isb 0xffff,x
            0x0000b2ec      ffffff         isb 0xffff,x
            0x0000b2ef      ffffff         isb 0xffff,x
            0x0000b2f2      ffffff         isb 0xffff,x
            0x0000b2f5      ffffff         isb 0xffff,x
            0x0000b2f8      ffffff         isb 0xffff,x
            0x0000b2fb      ffffff         isb 0xffff,x
            0x0000b2fe      ffffff         isb 0xffff,x
            0x0000b301      ffffff         isb 0xffff,x
            0x0000b304      ffffff         isb 0xffff,x
            0x0000b307      ffffff         isb 0xffff,x
            0x0000b30a      ffffff         isb 0xffff,x
            0x0000b30d      ffffff         isb 0xffff,x
            0x0000b310      ffffff         isb 0xffff,x
            0x0000b313      ffffff         isb 0xffff,x
            0x0000b316      ffffff         isb 0xffff,x
            0x0000b319      ffffff         isb 0xffff,x
            0x0000b31c      ffffff         isb 0xffff,x
            0x0000b31f      ffffff         isb 0xffff,x
            0x0000b322      ffffff         isb 0xffff,x
            0x0000b325      ffffff         isb 0xffff,x
            0x0000b328      ffffff         isb 0xffff,x
            0x0000b32b      ffffff         isb 0xffff,x
            0x0000b32e      ffffff         isb 0xffff,x
            0x0000b331      ffffff         isb 0xffff,x
            0x0000b334      ffffff         isb 0xffff,x
            0x0000b337      ffffff         isb 0xffff,x
            0x0000b33a      ffffff         isb 0xffff,x
            0x0000b33d      ffffff         isb 0xffff,x
            0x0000b340      ffffff         isb 0xffff,x
            0x0000b343      ffffff         isb 0xffff,x
            0x0000b346      ffffff         isb 0xffff,x
            0x0000b349      ffffff         isb 0xffff,x
            0x0000b34c      ffffff         isb 0xffff,x
            0x0000b34f      ffffff         isb 0xffff,x
            0x0000b352      ffffff         isb 0xffff,x
            0x0000b355      ffffff         isb 0xffff,x
            0x0000b358      ffffff         isb 0xffff,x
            0x0000b35b      ffffff         isb 0xffff,x
            0x0000b35e      ffffff         isb 0xffff,x
            0x0000b361      ffffff         isb 0xffff,x
            0x0000b364      ffffff         isb 0xffff,x
            0x0000b367      ffffff         isb 0xffff,x
            0x0000b36a      ffffff         isb 0xffff,x
            0x0000b36d      ffffff         isb 0xffff,x
            0x0000b370      ffffff         isb 0xffff,x
            0x0000b373      ffffff         isb 0xffff,x
            0x0000b376      ffffff         isb 0xffff,x
            0x0000b379      ffffff         isb 0xffff,x
            0x0000b37c      ffffff         isb 0xffff,x
            0x0000b37f      ffffff         isb 0xffff,x
            0x0000b382      ffffff         isb 0xffff,x
            0x0000b385      ffffff         isb 0xffff,x
            0x0000b388      ffffff         isb 0xffff,x
            0x0000b38b      ffffff         isb 0xffff,x
            0x0000b38e      ffffff         isb 0xffff,x
            0x0000b391      ffffff         isb 0xffff,x
            0x0000b394      ffffff         isb 0xffff,x
            0x0000b397      ffffff         isb 0xffff,x
            0x0000b39a      ffffff         isb 0xffff,x
            0x0000b39d      ffffff         isb 0xffff,x
            0x0000b3a0      ffffff         isb 0xffff,x
            0x0000b3a3      ffffff         isb 0xffff,x
            0x0000b3a6      ffffff         isb 0xffff,x
            0x0000b3a9      ffffff         isb 0xffff,x
            0x0000b3ac      ffffff         isb 0xffff,x
            0x0000b3af      ffffff         isb 0xffff,x
            0x0000b3b2      ffffff         isb 0xffff,x
            0x0000b3b5      ffffff         isb 0xffff,x
            0x0000b3b8      ffffff         isb 0xffff,x
            0x0000b3bb      ffffff         isb 0xffff,x
            0x0000b3be      ffffff         isb 0xffff,x
            0x0000b3c1      ffffff         isb 0xffff,x
            0x0000b3c4      ffffff         isb 0xffff,x
            0x0000b3c7      ffffff         isb 0xffff,x
            0x0000b3ca      ffffff         isb 0xffff,x
            0x0000b3cd      ffffff         isb 0xffff,x
            0x0000b3d0      ffffff         isb 0xffff,x
            0x0000b3d3      ffffff         isb 0xffff,x
            0x0000b3d6      ffffff         isb 0xffff,x
            0x0000b3d9      ffffff         isb 0xffff,x
            0x0000b3dc      ffffff         isb 0xffff,x
            0x0000b3df      ffffff         isb 0xffff,x
            0x0000b3e2      ffffff         isb 0xffff,x
            0x0000b3e5      ffffff         isb 0xffff,x
            0x0000b3e8      ffffff         isb 0xffff,x
            0x0000b3eb      ffffff         isb 0xffff,x
            0x0000b3ee      ffffff         isb 0xffff,x
            0x0000b3f1      ffffff         isb 0xffff,x
            0x0000b3f4      ffffff         isb 0xffff,x
            0x0000b3f7      ffffff         isb 0xffff,x
            0x0000b3fa      ffffff         isb 0xffff,x
            0x0000b3fd      ffffff         isb 0xffff,x
            0x0000b400      ffffff         isb 0xffff,x
            0x0000b403      ffffff         isb 0xffff,x
            0x0000b406      ffffff         isb 0xffff,x
            0x0000b409      ffffff         isb 0xffff,x
            0x0000b40c      ffffff         isb 0xffff,x
            0x0000b40f      ffffff         isb 0xffff,x
            0x0000b412      ffffff         isb 0xffff,x
            0x0000b415      ffffff         isb 0xffff,x
            0x0000b418      ffffff         isb 0xffff,x
            0x0000b41b      ffffff         isb 0xffff,x
            0x0000b41e      ffffff         isb 0xffff,x
            0x0000b421      ffffff         isb 0xffff,x
            0x0000b424      ffffff         isb 0xffff,x
            0x0000b427      ffffff         isb 0xffff,x
            0x0000b42a      ffffff         isb 0xffff,x
            0x0000b42d      ffffff         isb 0xffff,x
            0x0000b430      ffffff         isb 0xffff,x
            0x0000b433      ffffff         isb 0xffff,x
            0x0000b436      ffffff         isb 0xffff,x
            0x0000b439      ffffff         isb 0xffff,x
            0x0000b43c      ffffff         isb 0xffff,x
            0x0000b43f      ffffff         isb 0xffff,x
            0x0000b442      ffffff         isb 0xffff,x
            0x0000b445      ffffff         isb 0xffff,x
            0x0000b448      ffffff         isb 0xffff,x
            0x0000b44b      ffffff         isb 0xffff,x
            0x0000b44e      ffffff         isb 0xffff,x
            0x0000b451      ffffff         isb 0xffff,x
            0x0000b454      ffffff         isb 0xffff,x
            0x0000b457      ffffff         isb 0xffff,x
            0x0000b45a      ffffff         isb 0xffff,x
            0x0000b45d      ffffff         isb 0xffff,x
            0x0000b460      ffffff         isb 0xffff,x
            0x0000b463      ffffff         isb 0xffff,x
            0x0000b466      ffffff         isb 0xffff,x
            0x0000b469      ffffff         isb 0xffff,x
            0x0000b46c      ffffff         isb 0xffff,x
            0x0000b46f      ffffff         isb 0xffff,x
            0x0000b472      ffffff         isb 0xffff,x
            0x0000b475      ffffff         isb 0xffff,x
            0x0000b478      ffffff         isb 0xffff,x
            0x0000b47b      ffffff         isb 0xffff,x
            0x0000b47e      ffffff         isb 0xffff,x
            0x0000b481      ffffff         isb 0xffff,x
            0x0000b484      ffffff         isb 0xffff,x
            0x0000b487      ffffff         isb 0xffff,x
            0x0000b48a      ffffff         isb 0xffff,x
            0x0000b48d      ffffff         isb 0xffff,x
            0x0000b490      ffffff         isb 0xffff,x
            0x0000b493      ffffff         isb 0xffff,x
            0x0000b496      ffffff         isb 0xffff,x
            0x0000b499      ffffff         isb 0xffff,x
            0x0000b49c      ffffff         isb 0xffff,x
            0x0000b49f      ffffff         isb 0xffff,x
            0x0000b4a2      ffffff         isb 0xffff,x
            0x0000b4a5      ffffff         isb 0xffff,x
            0x0000b4a8      ffffff         isb 0xffff,x
            0x0000b4ab      ffffff         isb 0xffff,x
            0x0000b4ae      ffffff         isb 0xffff,x
            0x0000b4b1      ffffff         isb 0xffff,x
            0x0000b4b4      ffffff         isb 0xffff,x
            0x0000b4b7      ffffff         isb 0xffff,x
            0x0000b4ba      ffffff         isb 0xffff,x
            0x0000b4bd      ffffff         isb 0xffff,x
            0x0000b4c0      ffffff         isb 0xffff,x
            0x0000b4c3      ffffff         isb 0xffff,x
            0x0000b4c6      ffffff         isb 0xffff,x
            0x0000b4c9      ffffff         isb 0xffff,x
            0x0000b4cc      ffffff         isb 0xffff,x
            0x0000b4cf      ffffff         isb 0xffff,x
            0x0000b4d2      ffffff         isb 0xffff,x
            0x0000b4d5      ffffff         isb 0xffff,x
            0x0000b4d8      ffffff         isb 0xffff,x
            0x0000b4db      ffffff         isb 0xffff,x
            0x0000b4de      ffffff         isb 0xffff,x
            0x0000b4e1      ffffff         isb 0xffff,x
            0x0000b4e4      ffffff         isb 0xffff,x
            0x0000b4e7      ffffff         isb 0xffff,x
            0x0000b4ea      ffffff         isb 0xffff,x
            0x0000b4ed      ffffff         isb 0xffff,x
            0x0000b4f0      ffffff         isb 0xffff,x
            0x0000b4f3      ffffff         isb 0xffff,x
            0x0000b4f6      ffffff         isb 0xffff,x
            0x0000b4f9      ffffff         isb 0xffff,x
            0x0000b4fc      ffffff         isb 0xffff,x
            0x0000b4ff      ffffff         isb 0xffff,x
            0x0000b502      ffffff         isb 0xffff,x
            0x0000b505      ffffff         isb 0xffff,x
            0x0000b508      ffffff         isb 0xffff,x
            0x0000b50b      ffffff         isb 0xffff,x
            0x0000b50e      ffffff         isb 0xffff,x
            0x0000b511      ffffff         isb 0xffff,x
            0x0000b514      ffffff         isb 0xffff,x
            0x0000b517      ffffff         isb 0xffff,x
            0x0000b51a      ffffff         isb 0xffff,x
            0x0000b51d      ffffff         isb 0xffff,x
            0x0000b520      ffffff         isb 0xffff,x
            0x0000b523      ffffff         isb 0xffff,x
            0x0000b526      ffffff         isb 0xffff,x
            0x0000b529      ffffff         isb 0xffff,x
            0x0000b52c      ffffff         isb 0xffff,x
            0x0000b52f      ffffff         isb 0xffff,x
            0x0000b532      ffffff         isb 0xffff,x
            0x0000b535      ffffff         isb 0xffff,x
            0x0000b538      ffffff         isb 0xffff,x
            0x0000b53b      ffffff         isb 0xffff,x
            0x0000b53e      ffffff         isb 0xffff,x
            0x0000b541      ffffff         isb 0xffff,x
            0x0000b544      ffffff         isb 0xffff,x
            0x0000b547      ffffff         isb 0xffff,x
            0x0000b54a      ffffff         isb 0xffff,x
            0x0000b54d      ffffff         isb 0xffff,x
            0x0000b550      ffffff         isb 0xffff,x
            0x0000b553      ffffff         isb 0xffff,x
            0x0000b556      ffffff         isb 0xffff,x
            0x0000b559      ffffff         isb 0xffff,x
            0x0000b55c      ffffff         isb 0xffff,x
            0x0000b55f      ffffff         isb 0xffff,x
            0x0000b562      ffffff         isb 0xffff,x
            0x0000b565      ffffff         isb 0xffff,x
            0x0000b568      ffffff         isb 0xffff,x
            0x0000b56b      ffffff         isb 0xffff,x
            0x0000b56e      ffffff         isb 0xffff,x
            0x0000b571      ffffff         isb 0xffff,x
            0x0000b574      ffffff         isb 0xffff,x
            0x0000b577      ffffff         isb 0xffff,x
            0x0000b57a      ffffff         isb 0xffff,x
            0x0000b57d      ffffff         isb 0xffff,x
            0x0000b580      ffffff         isb 0xffff,x
            0x0000b583      ffffff         isb 0xffff,x
            0x0000b586      ffffff         isb 0xffff,x
            0x0000b589      ffffff         isb 0xffff,x
            0x0000b58c      ffffff         isb 0xffff,x
            0x0000b58f      ffffff         isb 0xffff,x
            0x0000b592      ffffff         isb 0xffff,x
            0x0000b595      ffffff         isb 0xffff,x
            0x0000b598      ffffff         isb 0xffff,x
            0x0000b59b      ffffff         isb 0xffff,x
            0x0000b59e      ffffff         isb 0xffff,x
            0x0000b5a1      ffffff         isb 0xffff,x
            0x0000b5a4      ffffff         isb 0xffff,x
            0x0000b5a7      ffffff         isb 0xffff,x
            0x0000b5aa      ffffff         isb 0xffff,x
            0x0000b5ad      ffffff         isb 0xffff,x
            0x0000b5b0      ffffff         isb 0xffff,x
            0x0000b5b3      ffffff         isb 0xffff,x
            0x0000b5b6      ffffff         isb 0xffff,x
            0x0000b5b9      ffffff         isb 0xffff,x
            0x0000b5bc      ffffff         isb 0xffff,x
            0x0000b5bf      ffffff         isb 0xffff,x
            0x0000b5c2      ffffff         isb 0xffff,x
            0x0000b5c5      ffffff         isb 0xffff,x
            0x0000b5c8      ffffff         isb 0xffff,x
            0x0000b5cb      ffffff         isb 0xffff,x
            0x0000b5ce      ffffff         isb 0xffff,x
            0x0000b5d1      ffffff         isb 0xffff,x
            0x0000b5d4      ffffff         isb 0xffff,x
            0x0000b5d7      ffffff         isb 0xffff,x
            0x0000b5da      ffffff         isb 0xffff,x
            0x0000b5dd      ffffff         isb 0xffff,x
            0x0000b5e0      ffffff         isb 0xffff,x
            0x0000b5e3      ffffff         isb 0xffff,x
            0x0000b5e6      ffffff         isb 0xffff,x
            0x0000b5e9      ffffff         isb 0xffff,x
            0x0000b5ec      ffffff         isb 0xffff,x
            0x0000b5ef      ffffff         isb 0xffff,x
            0x0000b5f2      ffffff         isb 0xffff,x
            0x0000b5f5      ffffff         isb 0xffff,x
            0x0000b5f8      ffffff         isb 0xffff,x
            0x0000b5fb      ffffff         isb 0xffff,x
            0x0000b5fe      ffffff         isb 0xffff,x
            0x0000b601      ffffff         isb 0xffff,x
            0x0000b604      ffffff         isb 0xffff,x
            0x0000b607      ffffff         isb 0xffff,x
            0x0000b60a      ffffff         isb 0xffff,x
            0x0000b60d      ffffff         isb 0xffff,x
            0x0000b610      ffffff         isb 0xffff,x
            0x0000b613      ffffff         isb 0xffff,x
            0x0000b616      ffffff         isb 0xffff,x
            0x0000b619      ffffff         isb 0xffff,x
            0x0000b61c      ffffff         isb 0xffff,x
            0x0000b61f      ffffff         isb 0xffff,x
            0x0000b622      ffffff         isb 0xffff,x
            0x0000b625      ffffff         isb 0xffff,x
            0x0000b628      ffffff         isb 0xffff,x
            0x0000b62b      ffffff         isb 0xffff,x
            0x0000b62e      ffffff         isb 0xffff,x
            0x0000b631      ffffff         isb 0xffff,x
            0x0000b634      ffffff         isb 0xffff,x
            0x0000b637      ffffff         isb 0xffff,x
            0x0000b63a      ffffff         isb 0xffff,x
            0x0000b63d      ffffff         isb 0xffff,x
            0x0000b640      ffffff         isb 0xffff,x
            0x0000b643      ffffff         isb 0xffff,x
            0x0000b646      ffffff         isb 0xffff,x
            0x0000b649      ffffff         isb 0xffff,x
            0x0000b64c      ffffff         isb 0xffff,x
            0x0000b64f      ffffff         isb 0xffff,x
            0x0000b652      ffffff         isb 0xffff,x
            0x0000b655      ffffff         isb 0xffff,x
            0x0000b658      ffffff         isb 0xffff,x
            0x0000b65b      ffffff         isb 0xffff,x
            0x0000b65e      ffffff         isb 0xffff,x
            0x0000b661      ffffff         isb 0xffff,x
            0x0000b664      ffffff         isb 0xffff,x
            0x0000b667      ffffff         isb 0xffff,x
            0x0000b66a      ffffff         isb 0xffff,x
            0x0000b66d      ffffff         isb 0xffff,x
            0x0000b670      ffffff         isb 0xffff,x
            0x0000b673      ffffff         isb 0xffff,x
            0x0000b676      ffffff         isb 0xffff,x
            0x0000b679      ffffff         isb 0xffff,x
            0x0000b67c      ffffff         isb 0xffff,x
            0x0000b67f      ffffff         isb 0xffff,x
            0x0000b682      ffffff         isb 0xffff,x
            0x0000b685      ffffff         isb 0xffff,x
            0x0000b688      ffffff         isb 0xffff,x
            0x0000b68b      ffffff         isb 0xffff,x
            0x0000b68e      ffffff         isb 0xffff,x
            0x0000b691      ffffff         isb 0xffff,x
            0x0000b694      ffffff         isb 0xffff,x
            0x0000b697      ffffff         isb 0xffff,x
            0x0000b69a      ffffff         isb 0xffff,x
            0x0000b69d      ffffff         isb 0xffff,x
            0x0000b6a0      ffffff         isb 0xffff,x
            0x0000b6a3      ffffff         isb 0xffff,x
            0x0000b6a6      ffffff         isb 0xffff,x
            0x0000b6a9      ffffff         isb 0xffff,x
            0x0000b6ac      ffffff         isb 0xffff,x
            0x0000b6af      ffffff         isb 0xffff,x
            0x0000b6b2      ffffff         isb 0xffff,x
            0x0000b6b5      ffffff         isb 0xffff,x
            0x0000b6b8      ffffff         isb 0xffff,x
            0x0000b6bb      ffffff         isb 0xffff,x
            0x0000b6be      ffffff         isb 0xffff,x
            0x0000b6c1      ffffff         isb 0xffff,x
            0x0000b6c4      ffffff         isb 0xffff,x
            0x0000b6c7      ffffff         isb 0xffff,x
            0x0000b6ca      ffffff         isb 0xffff,x
            0x0000b6cd      ffffff         isb 0xffff,x
            0x0000b6d0      ffffff         isb 0xffff,x
            0x0000b6d3      ffffff         isb 0xffff,x
            0x0000b6d6      ffffff         isb 0xffff,x
            0x0000b6d9      ffffff         isb 0xffff,x
            0x0000b6dc      ffffff         isb 0xffff,x
            0x0000b6df      ffffff         isb 0xffff,x
            0x0000b6e2      ffffff         isb 0xffff,x
            0x0000b6e5      ffffff         isb 0xffff,x
            0x0000b6e8      ffffff         isb 0xffff,x
            0x0000b6eb      ffffff         isb 0xffff,x
            0x0000b6ee      ffffff         isb 0xffff,x
            0x0000b6f1      ffffff         isb 0xffff,x
            0x0000b6f4      ffffff         isb 0xffff,x
            0x0000b6f7      ffffff         isb 0xffff,x
            0x0000b6fa      ffffff         isb 0xffff,x
            0x0000b6fd      ffffff         isb 0xffff,x
            0x0000b700      ffffff         isb 0xffff,x
            0x0000b703      ffffff         isb 0xffff,x
            0x0000b706      ffffff         isb 0xffff,x
            0x0000b709      ffffff         isb 0xffff,x
            0x0000b70c      ffffff         isb 0xffff,x
            0x0000b70f      ffffff         isb 0xffff,x
            0x0000b712      ffffff         isb 0xffff,x
            0x0000b715      ffffff         isb 0xffff,x
            0x0000b718      ffffff         isb 0xffff,x
            0x0000b71b      ffffff         isb 0xffff,x
            0x0000b71e      ffffff         isb 0xffff,x
            0x0000b721      ffffff         isb 0xffff,x
            0x0000b724      ffffff         isb 0xffff,x
            0x0000b727      ffffff         isb 0xffff,x
            0x0000b72a      ffffff         isb 0xffff,x
            0x0000b72d      ffffff         isb 0xffff,x
            0x0000b730      ffffff         isb 0xffff,x
            0x0000b733      ffffff         isb 0xffff,x
            0x0000b736      ffffff         isb 0xffff,x
            0x0000b739      ffffff         isb 0xffff,x
            0x0000b73c      ffffff         isb 0xffff,x
            0x0000b73f      ffffff         isb 0xffff,x
            0x0000b742      ffffff         isb 0xffff,x
            0x0000b745      ffffff         isb 0xffff,x
            0x0000b748      ffffff         isb 0xffff,x
            0x0000b74b      ffffff         isb 0xffff,x
            0x0000b74e      ffffff         isb 0xffff,x
            0x0000b751      ffffff         isb 0xffff,x
            0x0000b754      ffffff         isb 0xffff,x
            0x0000b757      ffffff         isb 0xffff,x
            0x0000b75a      ffffff         isb 0xffff,x
            0x0000b75d      ffffff         isb 0xffff,x
            0x0000b760      ffffff         isb 0xffff,x
            0x0000b763      ffffff         isb 0xffff,x
            0x0000b766      ffffff         isb 0xffff,x
            0x0000b769      ffffff         isb 0xffff,x
            0x0000b76c      ffffff         isb 0xffff,x
            0x0000b76f      ffffff         isb 0xffff,x
            0x0000b772      ffffff         isb 0xffff,x
            0x0000b775      ffffff         isb 0xffff,x
            0x0000b778      ffffff         isb 0xffff,x
            0x0000b77b      ffffff         isb 0xffff,x
            0x0000b77e      ffffff         isb 0xffff,x
            0x0000b781      ffffff         isb 0xffff,x
            0x0000b784      ffffff         isb 0xffff,x
            0x0000b787      ffffff         isb 0xffff,x
            0x0000b78a      ffffff         isb 0xffff,x
            0x0000b78d      ffffff         isb 0xffff,x
            0x0000b790      ffffff         isb 0xffff,x
            0x0000b793      ffffff         isb 0xffff,x
            0x0000b796      ffffff         isb 0xffff,x
            0x0000b799      ffffff         isb 0xffff,x
            0x0000b79c      ffffff         isb 0xffff,x
            0x0000b79f      ffffff         isb 0xffff,x
            0x0000b7a2      ffffff         isb 0xffff,x
            0x0000b7a5      ffffff         isb 0xffff,x
            0x0000b7a8      ffffff         isb 0xffff,x
            0x0000b7ab      ffffff         isb 0xffff,x
            0x0000b7ae      ffffff         isb 0xffff,x
            0x0000b7b1      ffffff         isb 0xffff,x
            0x0000b7b4      ffffff         isb 0xffff,x
            0x0000b7b7      ffffff         isb 0xffff,x
            0x0000b7ba      ffffff         isb 0xffff,x
            0x0000b7bd      ffffff         isb 0xffff,x
            0x0000b7c0      ffffff         isb 0xffff,x
            0x0000b7c3      ffffff         isb 0xffff,x
            0x0000b7c6      ffffff         isb 0xffff,x
            0x0000b7c9      ffffff         isb 0xffff,x
            0x0000b7cc      ffffff         isb 0xffff,x
            0x0000b7cf      ffffff         isb 0xffff,x
            0x0000b7d2      ffffff         isb 0xffff,x
            0x0000b7d5      ffffff         isb 0xffff,x
            0x0000b7d8      ffffff         isb 0xffff,x
            0x0000b7db      ffffff         isb 0xffff,x
            0x0000b7de      ffffff         isb 0xffff,x
            0x0000b7e1      ffffff         isb 0xffff,x
            0x0000b7e4      ffffff         isb 0xffff,x
            0x0000b7e7      ffffff         isb 0xffff,x
            0x0000b7ea      ffffff         isb 0xffff,x
            0x0000b7ed      ffffff         isb 0xffff,x
            0x0000b7f0      ffffff         isb 0xffff,x
            0x0000b7f3      ffffff         isb 0xffff,x
            0x0000b7f6      ffffff         isb 0xffff,x
            0x0000b7f9      ffffff         isb 0xffff,x
            0x0000b7fc      ffffff         isb 0xffff,x
            0x0000b7ff      ffffff         isb 0xffff,x
            0x0000b802      ffffff         isb 0xffff,x
            0x0000b805      ffffff         isb 0xffff,x
            0x0000b808      ffffff         isb 0xffff,x
            0x0000b80b      ffffff         isb 0xffff,x
            0x0000b80e      ffffff         isb 0xffff,x
